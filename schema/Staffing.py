# generated by datamodel-codegen:
#   filename:  Staffing.json
#   timestamp: 2023-11-18T13:53:55+00:00

from __future__ import annotations

from datetime import date, datetime, time
from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, Field


class CitizenshipStatusObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CitizenshipStatusObjectType(BaseModel):
    ID: Optional[List[CitizenshipStatusObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PutCitizenshipStatusResponseType(BaseModel):
    Citizenship_Status_Reference: Optional[CitizenshipStatusObjectType] = None
    version: Optional[str] = None


class JobOverlapConditionRuleObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class JobOverlapConditionRuleObjectType(BaseModel):
    ID: Optional[List[JobOverlapConditionRuleObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class MaintainJobOverlapRoutingExclusionRuleRequestReferencesType(BaseModel):
    Maintain_Job_Overlap_Routing_Exclusion_Rule_Reference: Optional[
        List[JobOverlapConditionRuleObjectType]
    ] = Field(None, min_items=0)


class MaintainJobOverlapRoutingExclusionRuleRequestCriteriaType(BaseModel):
    pass


class ResponseFilterType(BaseModel):
    As_Of_Effective_Date: Optional[date] = None
    As_Of_Entry_DateTime: Optional[datetime] = None
    Page: Optional[float] = None
    Count: Optional[float] = None


class MaintainJobOverlapRoutingExclusionRuleResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None


class GetMaintainJobOverlapRoutingExclusionRuleRequestType(BaseModel):
    Request_References: Optional[
        MaintainJobOverlapRoutingExclusionRuleRequestReferencesType
    ] = None
    Request_Criteria: Optional[
        MaintainJobOverlapRoutingExclusionRuleRequestCriteriaType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[
        MaintainJobOverlapRoutingExclusionRuleResponseGroupType
    ] = None
    version: Optional[str] = None


class RoleObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RoleObjectType(BaseModel):
    ID: Optional[List[RoleObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class UniversalIdentifierObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class UniversalIdentifierObjectType(BaseModel):
    ID: Optional[List[UniversalIdentifierObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class GetChangeGovernmentIDsRequestReferencesType(BaseModel):
    Person_Reference: Optional[List[RoleObjectType]] = Field(None, min_items=0)
    Universal_ID_Reference: Optional[List[UniversalIdentifierObjectType]] = Field(
        None, min_items=0
    )


class ResponseResultsType(BaseModel):
    Total_Results: Optional[float] = None
    Total_Pages: Optional[float] = None
    Page_Results: Optional[float] = None
    Page: Optional[float] = None


class UniqueIdentifierObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class UniqueIdentifierObjectType(BaseModel):
    ID: Optional[List[UniqueIdentifierObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class NationalIDTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class NationalIDTypeObjectType(BaseModel):
    ID: Optional[List[NationalIDTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CountryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CountryObjectType(BaseModel):
    ID: Optional[List[CountryObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class WorkerObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class WorkerObjectType(BaseModel):
    ID: Optional[List[WorkerObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class NationalIDDataType(BaseModel):
    ID: Optional[str] = None
    ID_Type_Reference: Optional[NationalIDTypeObjectType] = None
    Country_Reference: Optional[CountryObjectType] = None
    Issued_Date: Optional[date] = None
    Expiration_Date: Optional[date] = None
    Verification_Date: Optional[date] = None
    Series: Optional[str] = None
    Issuing_Agency: Optional[str] = None
    Verified_By_Reference: Optional[WorkerObjectType] = None


class NationalIdentifierReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class NationalIdentifierReferenceObjectType(BaseModel):
    ID: Optional[List[NationalIdentifierReferenceObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class NationalIDType(BaseModel):
    National_ID_Reference: Optional[UniqueIdentifierObjectType] = None
    National_ID_Data: Optional[NationalIDDataType] = None
    National_ID_Shared_Reference: Optional[NationalIdentifierReferenceObjectType] = None
    Delete: Optional[bool] = None


class GovernmentIDTypeAllObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class GovernmentIDTypeAllObjectType(BaseModel):
    ID: Optional[List[GovernmentIDTypeAllObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class GovernmentIDDataType(BaseModel):
    ID: Optional[str] = None
    ID_Type_Reference: Optional[GovernmentIDTypeAllObjectType] = None
    Country_Reference: Optional[CountryObjectType] = None
    Issued_Date: Optional[date] = None
    Expiration_Date: Optional[date] = None
    Verification_Date: Optional[date] = None
    Verified_by_Reference: Optional[WorkerObjectType] = None


class GovernmentIdentifierReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class GovernmentIdentifierReferenceObjectType(BaseModel):
    ID: Optional[List[GovernmentIdentifierReferenceObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class GovernmentIDType(BaseModel):
    Government_ID_Reference: Optional[UniqueIdentifierObjectType] = None
    Government_ID_Data: Optional[GovernmentIDDataType] = None
    Government_ID_Shared_Reference: Optional[
        GovernmentIdentifierReferenceObjectType
    ] = None
    Delete: Optional[bool] = None


class GovernmentIdentificationDataType(BaseModel):
    National_ID: Optional[List[NationalIDType]] = Field(None, min_items=0)
    Government_ID: Optional[List[GovernmentIDType]] = Field(None, min_items=0)
    Replace_All: Optional[bool] = None


class ChangeGovernmentIDsBusinessProcessDataType(BaseModel):
    Person_Reference: Optional[RoleObjectType] = None
    Universal_ID_Reference: Optional[UniversalIdentifierObjectType] = None
    Government_Identification_data: GovernmentIdentificationDataType


class ChangeGovernmentIDsResponseWrapperType(BaseModel):
    Person_Reference: Optional[RoleObjectType] = None
    Change_Government_IDs_Data: Optional[
        List[ChangeGovernmentIDsBusinessProcessDataType]
    ] = Field(None, min_items=0)


class ChangeGovernmentIDsResponseDataType(BaseModel):
    Change_Government_IDs: Optional[
        List[ChangeGovernmentIDsResponseWrapperType]
    ] = Field(None, min_items=0)


class GetChangeGovernmentIDsResponseType(BaseModel):
    Request_References: Optional[
        List[GetChangeGovernmentIDsRequestReferencesType]
    ] = Field(None, min_items=0)
    Response_Filter: Optional[List[ResponseFilterType]] = Field(None, min_items=0)
    Response_Results: Optional[List[ResponseResultsType]] = Field(None, min_items=0)
    Response_Data: Optional[List[ChangeGovernmentIDsResponseDataType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class ProbationPeriodOutcomesSetupTableObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ProbationPeriodOutcomesSetupTableObjectType(BaseModel):
    ID: Optional[List[ProbationPeriodOutcomesSetupTableObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class ProbationPeriodActionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ProbationPeriodActionObjectType(BaseModel):
    ID: Optional[List[ProbationPeriodActionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProbationPeriodOutcomeForCountryDataType(BaseModel):
    Probation_Period_Outcome_Name: str
    Probation_Period_Actions_Reference: List[ProbationPeriodActionObjectType] = Field(
        ..., min_items=1
    )
    Inactive: Optional[bool] = None


class ProbationPeriodOutcomesForCountryDataType(BaseModel):
    Country_Reference: CountryObjectType
    Probation_Period_Outcome_Data: Optional[
        List[ProbationPeriodOutcomeForCountryDataType]
    ] = Field(None, min_items=0)


class PutProbationPeriodOutcomesRequestType(BaseModel):
    Probation_Period_Outcomes_For_Country_Reference: Optional[
        ProbationPeriodOutcomesSetupTableObjectType
    ] = None
    Probation_Period_Outcomes_Data: Optional[
        ProbationPeriodOutcomesForCountryDataType
    ] = None
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class FSEWorkerCategoryCriteriaObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class FSEWorkerCategoryCriteriaObjectType(BaseModel):
    ID: Optional[List[FSEWorkerCategoryCriteriaObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PutFSEWorkerCategoryCriteriaResponseType(BaseModel):
    FSE_Worker_Category_Criteria_Reference: Optional[
        FSEWorkerCategoryCriteriaObjectType
    ] = None
    version: Optional[str] = None


class JobClassificationGroupObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class JobClassificationGroupObjectType(BaseModel):
    ID: Optional[List[JobClassificationGroupObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobClassificationGroupRequestReferencesType(BaseModel):
    Job_Classification_Group_Reference: List[JobClassificationGroupObjectType] = Field(
        ..., min_items=1
    )


class JobClassificationGroupResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None
    Include_Job_Classifications: Optional[bool] = None
    Exclude_Job_Classification_Data: Optional[bool] = None


class JobClassificationGroupReferenceDataType(BaseModel):
    Job_Classification_Group_Name: str


class GlobalSetupDataMappingObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class GlobalSetupDataMappingObjectType(BaseModel):
    ID: Optional[List[GlobalSetupDataMappingObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LocationContextObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str
    parent_id: Optional[str] = None
    parent_type: Optional[str] = None


class LocationContextObjectType(BaseModel):
    ID: Optional[List[LocationContextObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobClassificationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class JobClassificationObjectType(BaseModel):
    ID: Optional[List[JobClassificationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobClassificationDataType(BaseModel):
    ID: Optional[str] = None
    Job_Classification_ID: Optional[str] = None
    Description: Optional[str] = None
    Job_Classification_Mapping_ID_Reference: Optional[UniqueIdentifierObjectType] = None
    Inactive: Optional[bool] = None


class JobClassificationType(BaseModel):
    Job_Classification_Reference: Optional[JobClassificationObjectType] = None
    Job_Classification_Data: Optional[JobClassificationDataType] = None
    Delete: Optional[bool] = None


class JobClassificationGroupDataType(BaseModel):
    ID: Optional[str] = None
    Effective_Date: Optional[date] = None
    Job_Classification_Group_Name: Optional[str] = None
    Global_Setup_Data_Mapping_Reference: Optional[
        GlobalSetupDataMappingObjectType
    ] = None
    Location_Reference: Optional[LocationContextObjectType] = None
    Inactive: Optional[bool] = None
    Job_Classification: Optional[List[JobClassificationType]] = Field(None, min_items=0)


class JobClassificationGroupNewType(BaseModel):
    Job_Classification_Group_Reference: Optional[
        JobClassificationGroupObjectType
    ] = None
    Job_Classification_Group_Name_Data: Optional[
        List[JobClassificationGroupReferenceDataType]
    ] = Field(None, min_items=0)
    Job_Classification_Group_Data: Optional[
        List[JobClassificationGroupDataType]
    ] = Field(None, min_items=0)
    As_Of_Date: Optional[date] = None
    As_Of_Moment: Optional[datetime] = None


class JobClassificationGroupResponseDataType(BaseModel):
    Job_Classification_Group: Optional[List[JobClassificationGroupNewType]] = Field(
        None, min_items=0
    )


class GetJobClassificationGroupsResponseType(BaseModel):
    Request_References: Optional[JobClassificationGroupRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[JobClassificationGroupResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[JobClassificationGroupResponseDataType] = None
    version: Optional[str] = None


class BusinessProcessCommentDataType(BaseModel):
    Comment: Optional[str] = None
    Worker_Reference: Optional[WorkerObjectType] = None


class EventAttachmentCategoryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EventAttachmentCategoryObjectType(BaseModel):
    ID: Optional[List[EventAttachmentCategoryObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class BusinessProcessAttachmentDataType(BaseModel):
    File_Name: str
    Event_Attachment_Description: Optional[str] = None
    Event_Attachment_Category_Reference: Optional[
        EventAttachmentCategoryObjectType
    ] = None
    File: Optional[List[int]] = None
    Content_Type: Optional[str] = None


class BusinessProcessParametersType(BaseModel):
    Auto_Complete: Optional[bool] = None
    Run_Now: Optional[bool] = None
    Discard_On_Exit_Validation_Error: Optional[bool] = None
    Comment_Data: Optional[BusinessProcessCommentDataType] = None
    Business_Process_Attachment_Data: Optional[
        List[BusinessProcessAttachmentDataType]
    ] = Field(None, min_items=0)


class PositionElementObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PositionElementObjectType(BaseModel):
    ID: Optional[List[PositionElementObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ChangeJobSubcategoryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ChangeJobSubcategoryObjectType(BaseModel):
    ID: Optional[List[ChangeJobSubcategoryObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SupervisoryOrganizationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SupervisoryOrganizationObjectType(BaseModel):
    ID: Optional[List[SupervisoryOrganizationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class HeadcountOptionsObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class HeadcountOptionsObjectType(BaseModel):
    ID: Optional[List[HeadcountOptionsObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PositionRestrictionsObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PositionRestrictionsObjectType(BaseModel):
    ID: Optional[List[PositionRestrictionsObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobRequisitionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class JobRequisitionObjectType(BaseModel):
    ID: Optional[List[JobRequisitionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmployeeTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmployeeTypeObjectType(BaseModel):
    ID: Optional[List[EmployeeTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ContingentWorkerTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ContingentWorkerTypeObjectType(BaseModel):
    ID: Optional[List[ContingentWorkerTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobProfileObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class JobProfileObjectType(BaseModel):
    ID: Optional[List[JobProfileObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LocationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LocationObjectType(BaseModel):
    ID: Optional[List[LocationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PositionTimeTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PositionTimeTypeObjectType(BaseModel):
    ID: Optional[List[PositionTimeTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class TimeTypeSubtypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class TimeTypeSubtypeObjectType(BaseModel):
    ID: Optional[List[TimeTypeSubtypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class WorkShiftObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class WorkShiftObjectType(BaseModel):
    ID: Optional[List[WorkShiftObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class WorkHoursProfileObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class WorkHoursProfileObjectType(BaseModel):
    ID: Optional[List[WorkHoursProfileObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class FrequencyObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class FrequencyObjectType(BaseModel):
    ID: Optional[List[FrequencyObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class WorkingTimeUnitObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class WorkingTimeUnitObjectType(BaseModel):
    ID: Optional[List[WorkingTimeUnitObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PayRateTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PayRateTypeObjectType(BaseModel):
    ID: Optional[List[PayRateTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CompanyInsiderTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CompanyInsiderTypeObjectType(BaseModel):
    ID: Optional[List[CompanyInsiderTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AcademicPayPeriodObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AcademicPayPeriodObjectType(BaseModel):
    ID: Optional[List[AcademicPayPeriodObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PayWithWorkStudyOptionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PayWithWorkStudyOptionObjectType(BaseModel):
    ID: Optional[List[PayWithWorkStudyOptionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class WorkersCompensationCodeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class WorkersCompensationCodeObjectType(BaseModel):
    ID: Optional[List[WorkersCompensationCodeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AppointmentTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AppointmentTypeObjectType(BaseModel):
    ID: Optional[List[AppointmentTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmployeeTenureObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmployeeTenureObjectType(BaseModel):
    ID: Optional[List[EmployeeTenureObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AnnuitantIndicatorObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AnnuitantIndicatorObjectType(BaseModel):
    ID: Optional[List[AnnuitantIndicatorObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ExternalIDType(BaseModel):
    External_ID: str
    System_ID: Optional[str] = None


class ExternalIDDataType(BaseModel):
    External_ID: Optional[List[ExternalIDType]] = Field(None, min_items=0)


class PositionDetailsSubDataType(BaseModel):
    Job_Profile_Reference: Optional[JobProfileObjectType] = None
    Position_Title: Optional[str] = None
    Business_Title: Optional[str] = None
    Location_Reference: Optional[LocationObjectType] = None
    Work_Space_Reference: Optional[LocationObjectType] = None
    Position_Time_Type_Reference: Optional[PositionTimeTypeObjectType] = None
    Time_Type_Subtype_for_Worker_Event_Reference: Optional[
        TimeTypeSubtypeObjectType
    ] = None
    Work_Shift_Reference: Optional[WorkShiftObjectType] = None
    Work_Hours_Profile_Reference: Optional[WorkHoursProfileObjectType] = None
    Default_Hours: Optional[float] = None
    Scheduled_Hours: Optional[float] = None
    Working_Time_Frequency_Reference: Optional[FrequencyObjectType] = None
    Working_Time_Unit_Reference: Optional[WorkingTimeUnitObjectType] = None
    Working_Time_Value: Optional[float] = None
    Specify_Paid_FTE: Optional[bool] = None
    Paid_FTE: Optional[float] = None
    Specify_Working_FTE: Optional[bool] = None
    Working_FTE: Optional[float] = None
    Pay_Rate_Type_Reference: Optional[PayRateTypeObjectType] = None
    Additional_Job_Classifications_Reference: Optional[
        List[JobClassificationObjectType]
    ] = Field(None, min_items=0)
    Company_Insider_Type_Reference: Optional[
        List[CompanyInsiderTypeObjectType]
    ] = Field(None, min_items=0)
    Annual_Work_Period_Reference: Optional[AcademicPayPeriodObjectType] = None
    Disbursement_Plan_Period_Reference: Optional[AcademicPayPeriodObjectType] = None
    Work_Study_Reference: Optional[PayWithWorkStudyOptionObjectType] = None
    Workers__Compensation_Code_Override_Reference: Optional[
        WorkersCompensationCodeObjectType
    ] = None
    Appointment_Type_for_Worker_Event_Reference: Optional[
        AppointmentTypeObjectType
    ] = None
    Employee_Tenure_for_Worker_Event_Reference: Optional[
        EmployeeTenureObjectType
    ] = None
    Annuitant_Indicator_for_Worker_Event_Reference: Optional[
        AnnuitantIndicatorObjectType
    ] = None
    Position_External_ID_Data: Optional[ExternalIDDataType] = None


class AssignmentTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AssignmentTypeObjectType(BaseModel):
    ID: Optional[List[AssignmentTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CurrencyObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CurrencyObjectType(BaseModel):
    ID: Optional[List[CurrencyObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ContractDetailsSubDataType(BaseModel):
    Contract_Pay_Rate: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Contract_Assignment_Details: Optional[str] = None


class DocumentCategoryAllObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DocumentCategoryAllObjectType(BaseModel):
    ID: Optional[List[DocumentCategoryAllObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class WorkerDocumentForStaffingEventDataType(BaseModel):
    File_Name: str
    Worker_Document_Comment: Optional[str] = None
    Document_Category_Reference: DocumentCategoryAllObjectType
    File: Optional[List[int]] = None
    Content_Type: Optional[str] = None


class ChangeJobDetailDataType(BaseModel):
    Reason_Reference: ChangeJobSubcategoryObjectType
    Supervisory_Organization_Reference: Optional[
        SupervisoryOrganizationObjectType
    ] = None
    Headcount_Option_Reference: Optional[HeadcountOptionsObjectType] = None
    Job_Overlap_Allowed: Optional[bool] = None
    Proposed_Position_Reference: Optional[PositionRestrictionsObjectType] = None
    Proposed_Job_Requisition_Reference: Optional[JobRequisitionObjectType] = None
    Create_Position: Optional[bool] = None
    Employee_Type_Reference: Optional[EmployeeTypeObjectType] = None
    Contingent_Worker_Type_Reference: Optional[ContingentWorkerTypeObjectType] = None
    Job_Details_Data: Optional[PositionDetailsSubDataType] = None
    Assignment_Type_Reference: Optional[AssignmentTypeObjectType] = None
    Expected_Assignment_End_Date: Optional[date] = None
    End_Employment_Date: Optional[date] = None
    Contract_End_Date: Optional[date] = None
    First_Day_of_Work: Optional[date] = None
    Notify_Worker_By: Optional[date] = None
    New_Position_ID: Optional[str] = None
    Contract_Details_Data: Optional[ContractDetailsSubDataType] = None
    Worker_Document_Data: Optional[
        List[WorkerDocumentForStaffingEventDataType]
    ] = Field(None, min_items=0)


class BusinessSubProcessParametersType(BaseModel):
    Auto_Complete: Optional[bool] = None
    Skip: Optional[bool] = None
    Discard_On_Exit_Validation_Error: Optional[bool] = None
    Business_Process_Comment_Data: Optional[BusinessProcessCommentDataType] = None
    Business_Process_Attachment_Data: Optional[
        List[BusinessProcessAttachmentDataType]
    ] = Field(None, min_items=0)


class CompensationPackageObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CompensationPackageObjectType(BaseModel):
    ID: Optional[List[CompensationPackageObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CompensationGradeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CompensationGradeObjectType(BaseModel):
    ID: Optional[List[CompensationGradeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CompensationGradeProfileObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CompensationGradeProfileObjectType(BaseModel):
    ID: Optional[List[CompensationGradeProfileObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CompensationStepObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CompensationStepObjectType(BaseModel):
    ID: Optional[List[CompensationStepObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CompensatableGuidelinesDataType(BaseModel):
    Compensation_Package_Reference: Optional[CompensationPackageObjectType] = None
    Compensation_Grade_Reference: Optional[CompensationGradeObjectType] = None
    Compensation_Grade_Profile_Reference: Optional[
        CompensationGradeProfileObjectType
    ] = None
    Compensation_Step_Reference: Optional[CompensationStepObjectType] = None
    Progression_Start_Date: Optional[date] = None


class SalaryPayPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SalaryPayPlanObjectType(BaseModel):
    ID: Optional[List[SalaryPayPlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProposedBasePayPlanJobAssignmentDataType(BaseModel):
    Pay_Plan_Reference: Optional[SalaryPayPlanObjectType] = None
    Amount: float
    Currency_Reference: CurrencyObjectType
    Frequency_Reference: FrequencyObjectType
    Expected_End_Date: Optional[date] = None
    Actual_End_Date: Optional[date] = None


class ProposedBasePayPlanJobAssignmentContainerDataType(BaseModel):
    Pay_Plan_Sub_Data: Optional[List[ProposedBasePayPlanJobAssignmentDataType]] = Field(
        None, min_items=0
    )
    Replace: Optional[bool] = None


class SalaryUnitPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SalaryUnitPlanObjectType(BaseModel):
    ID: Optional[List[SalaryUnitPlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProposedSalaryUnitPlanAssignmentDataType(BaseModel):
    Unit_Salary_Plan_Reference: Optional[SalaryUnitPlanObjectType] = None
    Per_Unit_Amount: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Default_Units: Optional[float] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Actual_End_Date: Optional[date] = None


class ProposedSalaryUnitPlanAssignmentContainerDataType(BaseModel):
    Unit_Salary_Plan_Sub_Data: Optional[
        List[ProposedSalaryUnitPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Replace: Optional[bool] = None


class AllowanceValuePlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AllowanceValuePlanObjectType(BaseModel):
    ID: Optional[List[AllowanceValuePlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProposedAllowancePlanAssignmentDataType(BaseModel):
    Allowance_Plan_Reference: Optional[AllowanceValuePlanObjectType] = None
    Percent: Optional[float] = None
    Amount: Optional[float] = None
    Manage_by_Compensation_Basis_Override_Amount: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Expected_End_Date: Optional[date] = None
    Reimbursement_Start_Date: Optional[date] = None
    Actual_End_Date: Optional[date] = None
    Fixed_for_Manage_by_Basis_Total: Optional[bool] = None


class ProposedAllowancePlanAssignmentContainerDataType(BaseModel):
    Allowance_Plan_Sub_Data: Optional[
        List[ProposedAllowancePlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Replace: Optional[bool] = None


class AllowanceUnitPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AllowanceUnitPlanObjectType(BaseModel):
    ID: Optional[List[AllowanceUnitPlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProposedAllowanceUnitPlanAssignmentDataType(BaseModel):
    Unit_Allowance_Plan_Reference: Optional[AllowanceUnitPlanObjectType] = None
    Number_of_Units: Optional[float] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Per_Unit_Amount: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Reimbursement_Start_Date: Optional[date] = None
    Actual_End_Date: Optional[date] = None
    Fixed_for_Manage_by_Basis_Total: Optional[bool] = None


class ProposedAllowanceUnitPlanAssignmentContainerDataType(BaseModel):
    Unit_Allowance_Plan_Sub_Data: Optional[
        List[ProposedAllowanceUnitPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Replace: Optional[bool] = None


class BonusPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class BonusPlanObjectType(BaseModel):
    ID: Optional[List[BonusPlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProposedBonusPlanAssignmentDataType(BaseModel):
    Bonus_Plan_Reference: Optional[BonusPlanObjectType] = None
    Individual_Target_Amount: Optional[float] = None
    Individual_Target_Percent: Optional[float] = None
    Manage_by_Compensation_Basis_Override_Amount: Optional[float] = None
    Guaranteed_Minimum: Optional[bool] = None
    Percent_Assigned: Optional[float] = None
    Actual_End_Date: Optional[date] = None
    Fixed_for_Manage_by_Basis_Total: Optional[bool] = None


class ProposedBonusPlanAssignmentContainerDataType(BaseModel):
    Bonus_Plan_Sub_Data: Optional[List[ProposedBonusPlanAssignmentDataType]] = Field(
        None, min_items=0
    )
    Replace: Optional[bool] = None


class MeritPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class MeritPlanObjectType(BaseModel):
    ID: Optional[List[MeritPlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProposedMeritPlanAssignmentDataType(BaseModel):
    Merit_Plan_Reference: Optional[MeritPlanObjectType] = None
    Individual_Target_Amount: Optional[float] = None
    Individual_Target_Percent: Optional[float] = None
    Guaranteed_Minimum: Optional[bool] = None
    Actual_End_Date: Optional[date] = None


class ProposedMeritPlanAssignmentContainerDataType(BaseModel):
    Merit_Plan_Sub_Data: Optional[List[ProposedMeritPlanAssignmentDataType]] = Field(
        None, min_items=0
    )
    Replace: Optional[bool] = None


class CommissionPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CommissionPlanObjectType(BaseModel):
    ID: Optional[List[CommissionPlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProposedCommissionPlanAssignmentDataType(BaseModel):
    Commission_Plan_Reference: Optional[CommissionPlanObjectType] = None
    Target_Amount: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Draw_Amount: Optional[float] = None
    Draw_Frequency_Reference: Optional[FrequencyObjectType] = None
    Draw_Duration: Optional[str] = None
    Recoverable: Optional[bool] = None
    Actual_End_Date: Optional[date] = None
    Fixed_for_Manage_by_Basis_Total: Optional[bool] = None


class ProposedCommissionPlanAssignmentContainerDataType(BaseModel):
    Commission_Plan_Sub_Data: Optional[
        List[ProposedCommissionPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Replace: Optional[bool] = None


class StockPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class StockPlanObjectType(BaseModel):
    ID: Optional[List[StockPlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProposedStockPlanAssignmentDataType(BaseModel):
    Stock_Plan_Reference: Optional[StockPlanObjectType] = None
    Individual_Target_Shares: Optional[float] = None
    Individual_Target_Percent: Optional[float] = None
    Individual_Target_Amount: Optional[float] = None
    Manage_by_Compensation_Basis_Override_Amount: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Actual_End_Date: Optional[date] = None
    Fixed_for_Manage_by_Basis_Total: Optional[bool] = None


class ProposedStockPlanAssignmentContainerDataType(BaseModel):
    Stock_Plan_Sub_Data: Optional[List[ProposedStockPlanAssignmentDataType]] = Field(
        None, min_items=0
    )
    Replace: Optional[bool] = None


class PeriodSalaryPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PeriodSalaryPlanObjectType(BaseModel):
    ID: Optional[List[PeriodSalaryPlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CompensationPeriodObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CompensationPeriodObjectType(BaseModel):
    ID: Optional[List[CompensationPeriodObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProposedPeriodSalaryPlanAssignmentDataType(BaseModel):
    Period_Salary_Plan_Reference: Optional[PeriodSalaryPlanObjectType] = None
    Compensation_Period_Reference: Optional[CompensationPeriodObjectType] = None
    Manage_by_Compensation_Basis_Override_Amount: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Compensation_Period_Multiplier: Optional[float] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Actual_End_Date: Optional[date] = None


class ProposedPeriodSalaryPlanAssignmentContainerDataType(BaseModel):
    Period_Salary_Plan_Sub_Data: Optional[
        List[ProposedPeriodSalaryPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Replace: Optional[bool] = None


class CalculatedPlanInterfaceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CalculatedPlanInterfaceObjectType(BaseModel):
    ID: Optional[List[CalculatedPlanInterfaceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProposedCalculatedPlanAssignmentDataType(BaseModel):
    Calculated_Plan_Reference: Optional[CalculatedPlanInterfaceObjectType] = None
    Amount_Override: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Actual_End_Date: Optional[date] = None


class ProposedCalculatedPlanAssignmentContainerDataType(BaseModel):
    Calculated_Plan_Sub_Data: Optional[
        List[ProposedCalculatedPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Replace: Optional[bool] = None


class CompensationProposedForPositionDataType(BaseModel):
    Initialize_Using_Defaulting_Logic: Optional[bool] = None
    Employee_Visibility_Date: Optional[date] = None
    Primary_Compensation_Basis: Optional[float] = None
    Compensation_Guidelines_Data: Optional[CompensatableGuidelinesDataType] = None
    Pay_Plan_Data: Optional[ProposedBasePayPlanJobAssignmentContainerDataType] = None
    Unit_Salary_Plan_Data: Optional[
        ProposedSalaryUnitPlanAssignmentContainerDataType
    ] = None
    Allowance_Plan_Data: Optional[
        ProposedAllowancePlanAssignmentContainerDataType
    ] = None
    Unit_Allowance_Plan_Data: Optional[
        ProposedAllowanceUnitPlanAssignmentContainerDataType
    ] = None
    Bonus_Plan_Data: Optional[ProposedBonusPlanAssignmentContainerDataType] = None
    Merit_Plan_Data: Optional[ProposedMeritPlanAssignmentContainerDataType] = None
    Commission_Plan_Data: Optional[
        ProposedCommissionPlanAssignmentContainerDataType
    ] = None
    Stock_Plan_Data: Optional[ProposedStockPlanAssignmentContainerDataType] = None
    Period_Salary_Plan_Data: Optional[
        ProposedPeriodSalaryPlanAssignmentContainerDataType
    ] = None
    Calculated_Plan_Data: Optional[
        ProposedCalculatedPlanAssignmentContainerDataType
    ] = None


class ProposeCompensationForPositionSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Propose_Compensation_for_Position_Data: Optional[
        CompensationProposedForPositionDataType
    ] = None


class OneTimePaymentPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class OneTimePaymentPlanObjectType(BaseModel):
    ID: Optional[List[OneTimePaymentPlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CompanyObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CompanyObjectType(BaseModel):
    ID: Optional[List[CompanyObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class TenantedPayrollWorktagObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str
    parent_id: Optional[str] = None
    parent_type: Optional[str] = None


class TenantedPayrollWorktagObjectType(BaseModel):
    ID: Optional[List[TenantedPayrollWorktagObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class OneTimePaymentDataType(BaseModel):
    One_Time_Payment_Plan_Reference: OneTimePaymentPlanObjectType
    Scheduled_Payment_Date: Optional[date] = None
    Clawback_Date: Optional[date] = None
    Coverage_Start_Date: Optional[date] = None
    Coverage_End_Date: Optional[date] = None
    Amount: Optional[float] = None
    Percent: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Comment: Optional[str] = None
    Do_Not_Pay: Optional[bool] = None
    Costing_Company_Reference: Optional[CompanyObjectType] = None
    One_Time_Payment_Worktags_Reference: Optional[
        List[TenantedPayrollWorktagObjectType]
    ] = Field(None, min_items=0)


class EventClassificationSubcategoryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EventClassificationSubcategoryObjectType(BaseModel):
    ID: Optional[List[EventClassificationSubcategoryObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class RequestOneTimePaymentSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Request_One_Time_Payment_Data: Optional[List[OneTimePaymentDataType]] = Field(
        None, min_items=0
    )
    Effective_Date: Optional[date] = None
    Reason_Reference: Optional[EventClassificationSubcategoryObjectType] = None


class StockGrantTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class StockGrantTypeObjectType(BaseModel):
    ID: Optional[List[StockGrantTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class StockVestingScheduleObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class StockVestingScheduleObjectType(BaseModel):
    ID: Optional[List[StockVestingScheduleObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class IndividualStockGrantDataType(BaseModel):
    Shares_Granted: Optional[float] = None
    Grant_Percent: Optional[float] = None
    Grant_Amount: Optional[float] = None
    Grant_Type_Reference: StockGrantTypeObjectType
    Grant_Amount_Currency_Reference: Optional[CurrencyObjectType] = None
    Option_Pricing_Factor: Optional[float] = None
    Comments: Optional[str] = None
    Vesting_Schedule_Reference: Optional[StockVestingScheduleObjectType] = None
    Grant_ID: Optional[str] = None
    Grant_Date: Optional[date] = None
    Vest_From_Date: Optional[date] = None
    Expiration_Date: Optional[date] = None
    Grant_Price: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Board_Approved: Optional[bool] = None


class RequestStockGrantSubdataType(BaseModel):
    Stock_Plan_Reference: StockPlanObjectType
    Reason_Reference: Optional[EventClassificationSubcategoryObjectType] = None
    Individual_Stock_Grant_Data: List[IndividualStockGrantDataType] = Field(
        ..., min_items=1
    )


class RequestStockSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: BusinessSubProcessParametersType
    Request_Stock_Grant_Data: Optional[RequestStockGrantSubdataType] = None


class CostCenterObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CostCenterObjectType(BaseModel):
    ID: Optional[List[CostCenterObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class RegionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RegionObjectType(BaseModel):
    ID: Optional[List[RegionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CustomOrganizationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CustomOrganizationObjectType(BaseModel):
    ID: Optional[List[CustomOrganizationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CustomOrganizationAssignmentDataType(BaseModel):
    Custom_Organization_Assignment_Reference: CustomOrganizationObjectType
    Delete: Optional[bool] = None


class FundObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class FundObjectType(BaseModel):
    ID: Optional[List[FundObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class GrantObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class GrantObjectType(BaseModel):
    ID: Optional[List[GrantObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProgramObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ProgramObjectType(BaseModel):
    ID: Optional[List[ProgramObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class BusinessUnitObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class BusinessUnitObjectType(BaseModel):
    ID: Optional[List[BusinessUnitObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class GiftObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class GiftObjectType(BaseModel):
    ID: Optional[List[GiftObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AssignPositionOrganizationEventDataType(BaseModel):
    Company_Assignments_Reference: Optional[List[CompanyObjectType]] = Field(
        None, min_items=0
    )
    Cost_Center_Assignments_Reference: Optional[List[CostCenterObjectType]] = Field(
        None, min_items=0
    )
    Region_Assignments_Reference: Optional[List[RegionObjectType]] = Field(
        None, min_items=0
    )
    Custom_Organization_Assignment_Data: Optional[
        List[CustomOrganizationAssignmentDataType]
    ] = Field(None, min_items=0)
    Fund_Assignments_Reference: Optional[List[FundObjectType]] = Field(
        None, min_items=0
    )
    Grant_Assignments_Reference: Optional[List[GrantObjectType]] = Field(
        None, min_items=0
    )
    Program_Assignments_Reference: Optional[List[ProgramObjectType]] = Field(
        None, min_items=0
    )
    Business_Unit_Assignments_Reference: Optional[List[BusinessUnitObjectType]] = Field(
        None, min_items=0
    )
    Gift_Assignments_Reference: Optional[List[GiftObjectType]] = Field(
        None, min_items=0
    )


class EditAssignPositionOrganizationSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Position_Organization_Assignments_Data: Optional[
        AssignPositionOrganizationEventDataType
    ] = None


class PayGroupObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PayGroupObjectType(BaseModel):
    ID: Optional[List[PayGroupObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AssignPayGroupDataType(BaseModel):
    Pay_Group_Reference: Optional[PayGroupObjectType] = None
    Additional_Positions_for_Pay_Group_Assignment_Reference: Optional[
        List[PositionElementObjectType]
    ] = Field(None, min_items=0)


class AssignPayGroupSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Assign_Pay_Group_Data: Optional[AssignPayGroupDataType] = None


class MatrixOrganizationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class MatrixOrganizationObjectType(BaseModel):
    ID: Optional[List[MatrixOrganizationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AssignMatrixOrganizationDataType(BaseModel):
    Matrix_Organization_Reference: Optional[List[MatrixOrganizationObjectType]] = Field(
        None, min_items=0
    )


class AssignMatrixOrganizationSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Assign_Matrix_Organization_Data: Optional[AssignMatrixOrganizationDataType] = None


class CountryRegionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CountryRegionObjectType(BaseModel):
    ID: Optional[List[CountryRegionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class GenderObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class GenderObjectType(BaseModel):
    ID: Optional[List[GenderObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DisabilityStatusReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DisabilityStatusReferenceObjectType(BaseModel):
    ID: Optional[List[DisabilityStatusReferenceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DisabilityObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DisabilityObjectType(BaseModel):
    ID: Optional[List[DisabilityObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DisabilityGradeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DisabilityGradeObjectType(BaseModel):
    ID: Optional[List[DisabilityGradeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DisabilityCertificationAuthorityObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DisabilityCertificationAuthorityObjectType(BaseModel):
    ID: Optional[List[DisabilityCertificationAuthorityObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class DisabilityCertificationBasisObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DisabilityCertificationBasisObjectType(BaseModel):
    ID: Optional[List[DisabilityCertificationBasisObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class WorkerDocumentObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class WorkerDocumentObjectType(BaseModel):
    ID: Optional[List[WorkerDocumentObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DisabilityStatusSubDataType(BaseModel):
    Disability_Reference: DisabilityObjectType
    Disability_Status_Date: Optional[date] = None
    Disability_Date_Known: Optional[date] = None
    Disability_End_Date: Optional[date] = None
    Disability_Grade_Reference: Optional[DisabilityGradeObjectType] = None
    Disability_Degree: Optional[float] = None
    Disability_Remaining_Capacity: Optional[float] = None
    Disability_Certification_Authority_Reference: Optional[
        DisabilityCertificationAuthorityObjectType
    ] = None
    Disability_Certification_Authority: Optional[str] = None
    Disability_Certified_At: Optional[str] = None
    Disability_Certification_ID: Optional[str] = None
    Disability_Certification_Basis_Reference: Optional[
        DisabilityCertificationBasisObjectType
    ] = None
    Disability_Severity_Recognition_Date: Optional[date] = None
    Disability_FTE_Toward_Quota: Optional[float] = None
    Disability_Work_Restrictions: Optional[str] = None
    Disability_Accommodations_Requested: Optional[str] = None
    Disability_Accommodations_Provided: Optional[str] = None
    Disability_Rehabilitation_Requested: Optional[str] = None
    Disability_Rehabilitation_Provided: Optional[str] = None
    Note: Optional[str] = None
    Worker_Document_Reference: Optional[List[WorkerDocumentObjectType]] = Field(
        None, min_items=0
    )


class DisabilityStatusInformationDataType(BaseModel):
    Disability_Status_Reference: Optional[DisabilityStatusReferenceObjectType] = None
    Disability_Status_Data: Optional[DisabilityStatusSubDataType] = None
    Delete: Optional[bool] = None


class DisabilityInformationDataType(BaseModel):
    Disability_Status_Information_Data: Optional[
        List[DisabilityStatusInformationDataType]
    ] = Field(None, min_items=0)
    Replace_All: Optional[bool] = None


class MaritalStatusObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str
    parent_id: Optional[str] = None
    parent_type: Optional[str] = None


class MaritalStatusObjectType(BaseModel):
    ID: Optional[List[MaritalStatusObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CountryAndNationalityObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CountryAndNationalityObjectType(BaseModel):
    ID: Optional[List[CountryAndNationalityObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EthnicityObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EthnicityObjectType(BaseModel):
    ID: Optional[List[EthnicityObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EthnicityDetailsObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EthnicityDetailsObjectType(BaseModel):
    ID: Optional[List[EthnicityDetailsObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AboriginalIndigenousIdentificationSelectionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AboriginalIndigenousIdentificationSelectionObjectType(BaseModel):
    ID: Optional[List[AboriginalIndigenousIdentificationSelectionObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class AboriginalIndigenousDetailsObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AboriginalIndigenousDetailsObjectType(BaseModel):
    ID: Optional[List[AboriginalIndigenousDetailsObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class ReligionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ReligionObjectType(BaseModel):
    ID: Optional[List[ReligionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CountrySubregionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CountrySubregionObjectType(BaseModel):
    ID: Optional[List[CountrySubregionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class HukouTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class HukouTypeObjectType(BaseModel):
    ID: Optional[List[HukouTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class MilitaryServiceReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class MilitaryServiceReferenceObjectType(BaseModel):
    ID: Optional[List[MilitaryServiceReferenceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class MilitaryStatusObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class MilitaryStatusObjectType(BaseModel):
    ID: Optional[List[MilitaryStatusObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class MilitaryServiceTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class MilitaryServiceTypeObjectType(BaseModel):
    ID: Optional[List[MilitaryServiceTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class MilitaryRankObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class MilitaryRankObjectType(BaseModel):
    ID: Optional[List[MilitaryRankObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class MilitaryDischargeTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class MilitaryDischargeTypeObjectType(BaseModel):
    ID: Optional[List[MilitaryDischargeTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class MilitaryServiceSubDataType(BaseModel):
    Military_Status_Reference: MilitaryStatusObjectType
    Military_Discharge_Date: Optional[date] = None
    Military_Status_Begin_Date: Optional[date] = None
    Military_Service_Type_Reference: Optional[MilitaryServiceTypeObjectType] = None
    Military_Rank_Reference: Optional[MilitaryRankObjectType] = None
    Notes: Optional[str] = None
    Military_Discharge_Type_Reference: Optional[MilitaryDischargeTypeObjectType] = None


class MilitaryServiceInformationDataType(BaseModel):
    Military_Service_Reference: Optional[MilitaryServiceReferenceObjectType] = None
    Military_Service_Data: Optional[MilitaryServiceSubDataType] = None
    Delete: Optional[bool] = None


class MilitaryInformationDataType(BaseModel):
    Military_Service_Information_Data: Optional[
        List[MilitaryServiceInformationDataType]
    ] = Field(None, min_items=0)
    Replace_All: Optional[bool] = None


class PoliticalAffiliationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PoliticalAffiliationObjectType(BaseModel):
    ID: Optional[List[PoliticalAffiliationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CountryCityObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str
    parent_id: Optional[str] = None
    parent_type: Optional[str] = None


class CountryCityObjectType(BaseModel):
    ID: Optional[List[CountryCityObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class BloodTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class BloodTypeObjectType(BaseModel):
    ID: Optional[List[BloodTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SocialBenefitsLocalityObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SocialBenefitsLocalityObjectType(BaseModel):
    ID: Optional[List[SocialBenefitsLocalityObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LGBTIdentificationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LGBTIdentificationObjectType(BaseModel):
    ID: Optional[List[LGBTIdentificationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SexualOrientationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SexualOrientationObjectType(BaseModel):
    ID: Optional[List[SexualOrientationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class GenderIdentityObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class GenderIdentityObjectType(BaseModel):
    ID: Optional[List[GenderIdentityObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PronounObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PronounObjectType(BaseModel):
    ID: Optional[List[PronounObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class RelativeNameReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RelativeNameReferenceObjectType(BaseModel):
    ID: Optional[List[RelativeNameReferenceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class RelativeTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RelativeTypeObjectType(BaseModel):
    ID: Optional[List[RelativeTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CountryPredefinedPersonNameComponentValueObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CountryPredefinedPersonNameComponentValueObjectType(BaseModel):
    ID: Optional[List[CountryPredefinedPersonNameComponentValueObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class PersonNamePrefixDataType(BaseModel):
    Title_Reference: Optional[
        CountryPredefinedPersonNameComponentValueObjectType
    ] = None
    Title_Descriptor: Optional[str] = None
    Salutation_Reference: Optional[
        CountryPredefinedPersonNameComponentValueObjectType
    ] = None


class LocalPersonNameDetailDataType(BaseModel):
    First_Name: Optional[str] = None
    Middle_Name: Optional[str] = None
    Last_Name: Optional[str] = None
    Secondary_Last_Name: Optional[str] = None
    First_Name_2: Optional[str] = None
    Middle_Name_2: Optional[str] = None
    Last_Name_2: Optional[str] = None
    Secondary_Last_Name_2: Optional[str] = None
    Local_Name: Optional[str] = None
    Local_Script: Optional[str] = None


class PersonNameSuffixDataType(BaseModel):
    Social_Suffix_Reference: Optional[
        CountryPredefinedPersonNameComponentValueObjectType
    ] = None
    Social_Suffix_Descriptor: Optional[str] = None
    Academic_Suffix_Reference: Optional[
        CountryPredefinedPersonNameComponentValueObjectType
    ] = None
    Hereditary_Suffix_Reference: Optional[
        CountryPredefinedPersonNameComponentValueObjectType
    ] = None
    Honorary_Suffix_Reference: Optional[
        CountryPredefinedPersonNameComponentValueObjectType
    ] = None
    Professional_Suffix_Reference: Optional[
        CountryPredefinedPersonNameComponentValueObjectType
    ] = None
    Religious_Suffix_Reference: Optional[
        CountryPredefinedPersonNameComponentValueObjectType
    ] = None
    Royal_Suffix_Reference: Optional[
        CountryPredefinedPersonNameComponentValueObjectType
    ] = None


class PersonNameDetailDataType(BaseModel):
    Country_Reference: CountryObjectType
    Prefix_Data: Optional[PersonNamePrefixDataType] = None
    First_Name: Optional[str] = None
    Middle_Name: Optional[str] = None
    Last_Name: Optional[str] = None
    Secondary_Last_Name: Optional[str] = None
    Tertiary_Last_Name: Optional[str] = None
    Local_Name_Detail_Data: Optional[LocalPersonNameDetailDataType] = None
    Suffix_Data: Optional[PersonNameSuffixDataType] = None
    Full_Name_for_Singapore_and_Malaysia: Optional[str] = None
    Formatted_Name: Optional[str] = None
    Reporting_Name: Optional[str] = None


class RelativeNameDataType(BaseModel):
    Relative_Name_Reference_Reference: Optional[RelativeNameReferenceObjectType] = None
    Relative_Type_Reference: Optional[RelativeTypeObjectType] = None
    Name_Detail_Data: Optional[PersonNameDetailDataType] = None
    Delete: Optional[bool] = None


class RelativeNameInformationDataType(BaseModel):
    Relative_Name_Data: Optional[List[RelativeNameDataType]] = Field(None, min_items=0)
    Replace_All: Optional[bool] = None


class CommonBooleanEnumerationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CommonBooleanEnumerationObjectType(BaseModel):
    ID: Optional[List[CommonBooleanEnumerationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class VeteransPreferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class VeteransPreferenceObjectType(BaseModel):
    ID: Optional[List[VeteransPreferenceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class UniformServiceReserveStatusObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class UniformServiceReserveStatusObjectType(BaseModel):
    ID: Optional[List[UniformServiceReserveStatusObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class ChangePersonalInformationDataType(BaseModel):
    Date_of_Birth: Optional[date] = None
    Birth_Country_Reference: Optional[CountryObjectType] = None
    Birth_Region_Reference: Optional[CountryRegionObjectType] = None
    Gender_Reference: Optional[GenderObjectType] = None
    Reporting_Gender_Reference: Optional[GenderObjectType] = None
    Disability_Information_Data: Optional[DisabilityInformationDataType] = None
    Marital_Status_Reference: Optional[MaritalStatusObjectType] = None
    Citizenship_Reference: Optional[List[CitizenshipStatusObjectType]] = Field(
        None, min_items=0
    )
    Primary_Nationality_Reference: Optional[CountryAndNationalityObjectType] = None
    Additional_Nationality_Reference: Optional[
        List[CountryAndNationalityObjectType]
    ] = Field(None, min_items=0)
    Ethnicity_Reference: Optional[List[EthnicityObjectType]] = Field(None, min_items=0)
    Race_Ethnicity_Details_Reference: Optional[
        List[EthnicityDetailsObjectType]
    ] = Field(None, min_items=0)
    Hispanic_or_Latino: Optional[bool] = None
    Visual_Survey_Ethnicity_Reference: Optional[List[EthnicityObjectType]] = Field(
        None, min_items=0
    )
    Hispanic_or_Latino_for_Visual_Survey: Optional[bool] = None
    Aboriginal_Indigenous_Identification_Reference: Optional[
        AboriginalIndigenousIdentificationSelectionObjectType
    ] = None
    Aboriginal_Indigenous_Identification_Details_Reference: Optional[
        List[AboriginalIndigenousDetailsObjectType]
    ] = Field(None, min_items=0)
    Religion_Reference: Optional[ReligionObjectType] = None
    Hukou_Region_Reference: Optional[CountryRegionObjectType] = None
    Hukou_Subregion_Reference: Optional[CountrySubregionObjectType] = None
    Hukou_Locality: Optional[str] = None
    Hukou_Postal_Code: Optional[str] = None
    Hukou_Type_Reference: Optional[HukouTypeObjectType] = None
    Native_Region_Reference: Optional[CountryRegionObjectType] = None
    Personnel_File_Agency: Optional[str] = None
    Military_Information_Data: Optional[MilitaryInformationDataType] = None
    Political_Affiliation_Reference: Optional[PoliticalAffiliationObjectType] = None
    Date_of_Death: Optional[date] = None
    City_of_Birth: Optional[str] = None
    City_of_Birth_Reference: Optional[CountryCityObjectType] = None
    Marital_Status_Date: Optional[date] = None
    Last_Medical_Exam_Date: Optional[date] = None
    Last_Medical_Exam_Valid_To: Optional[date] = None
    Medical_Exam_Notes: Optional[str] = None
    Blood_Type_Reference: Optional[BloodTypeObjectType] = None
    Uses_Tobacco: Optional[bool] = None
    Social_Benefits_Locality_Reference: Optional[
        SocialBenefitsLocalityObjectType
    ] = None
    LGBT_Identification_Reference: Optional[List[LGBTIdentificationObjectType]] = Field(
        None, min_items=0
    )
    Sexual_Orientation_Reference: Optional[List[SexualOrientationObjectType]] = Field(
        None, min_items=0
    )
    Gender_Identity_Reference: Optional[List[GenderIdentityObjectType]] = Field(
        None, min_items=0
    )
    Pronoun_Reference: Optional[List[PronounObjectType]] = Field(None, min_items=0)
    Relative_Name_Information_Data: Optional[RelativeNameInformationDataType] = None
    Veterans_Preference_For_RIF_Reference: Optional[
        CommonBooleanEnumerationObjectType
    ] = None
    Selective_Service_Registration_Reference: Optional[
        CommonBooleanEnumerationObjectType
    ] = None
    Veterans_Preference_Reference: Optional[List[VeteransPreferenceObjectType]] = Field(
        None, min_items=0
    )
    Active_Military_Uniformed_Service_Reference: Optional[
        CommonBooleanEnumerationObjectType
    ] = None
    Disabled_Veteran_Leave_Date_Reference: Optional[date] = None
    Uniform_Service_Reserve_Status_Reference: Optional[
        UniformServiceReserveStatusObjectType
    ] = None


class ChangePersonalInformationSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Change_Personal_Information_Data: Optional[ChangePersonalInformationDataType] = None


class EmployeeContractReasonObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmployeeContractReasonObjectType(BaseModel):
    ID: Optional[List[EmployeeContractReasonObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmployeeContractTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmployeeContractTypeObjectType(BaseModel):
    ID: Optional[List[EmployeeContractTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CollectiveAgreementObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CollectiveAgreementObjectType(BaseModel):
    ID: Optional[List[CollectiveAgreementObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmployeeContractStatusObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmployeeContractStatusObjectType(BaseModel):
    ID: Optional[List[EmployeeContractStatusObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmployeeContractReviewDataType(BaseModel):
    Contract_Review_Date: Optional[date] = None


class EmployeeContractDataType(BaseModel):
    Employee_Contract_Reason_Reference: Optional[
        List[EmployeeContractReasonObjectType]
    ] = Field(None, min_items=0)
    Employee_Contract_ID: Optional[str] = None
    Effective_Date: date
    Contract_ID: Optional[str] = None
    Contract_Type_Reference: Optional[EmployeeContractTypeObjectType] = None
    Contract_Start_Date: date
    Contract_End_Date: Optional[date] = None
    Employee_Contract_Collective_Agreement_Reference: Optional[
        List[CollectiveAgreementObjectType]
    ] = Field(None, min_items=0)
    Maximum_Weekly_Hours: Optional[float] = None
    Minimum_Weekly_Hours: Optional[float] = None
    Contract_Status_Reference: EmployeeContractStatusObjectType
    Position_Reference: Optional[PositionElementObjectType] = None
    Contract_Description: Optional[str] = None
    Date_Employee_Signed: Optional[date] = None
    Date_Employer_Signed: Optional[date] = None
    Worker_Document_Reference: Optional[List[WorkerDocumentObjectType]] = Field(
        None, min_items=0
    )
    Employee_Contract_Review_Data: Optional[EmployeeContractReviewDataType] = None


class MaintainEmployeeContractsSubDataType(BaseModel):
    Employee_Contract_Data: Optional[List[EmployeeContractDataType]] = Field(
        None, min_items=0
    )


class MaintainEmployeeContractsSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Maintain_Employee_Contracts_Data: Optional[
        MaintainEmployeeContractsSubDataType
    ] = None


class RoleeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RoleeObjectType(BaseModel):
    ID: Optional[List[RoleeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class RoleAssignerObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str
    parent_id: Optional[str] = None
    parent_type: Optional[str] = None


class RoleAssignerObjectType(BaseModel):
    ID: Optional[List[RoleAssignerObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AssignableRoleObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AssignableRoleObjectType(BaseModel):
    ID: Optional[List[AssignableRoleObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class OrganizationRoleAssignmentDataType(BaseModel):
    Role_Assigner_Reference: Optional[RoleAssignerObjectType] = None
    Organization_Role_Reference: AssignableRoleObjectType
    Role_Assignee_Reference: Optional[List[RoleeObjectType]] = Field(None, min_items=0)
    Single_Assignment_Manager_Reference: Optional[RoleeObjectType] = None


class RoleAssignmentType(BaseModel):
    Role_Assignment_Reference: Optional[UniqueIdentifierObjectType] = None
    Role_Assignment_Data: OrganizationRoleAssignmentDataType


class AssignOrganizationRolesEventDataType(BaseModel):
    Role_Assignee_Reference: Optional[RoleeObjectType] = None
    Effective_Date: Optional[date] = None
    Role_Assignment: Optional[List[RoleAssignmentType]] = Field(None, min_items=0)


class AssignOrganizationRolesSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Assign_Organization_Roles_Event_Data: Optional[
        AssignOrganizationRolesEventDataType
    ] = None


class RoleeSelectorObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RoleeSelectorObjectType(BaseModel):
    ID: Optional[List[RoleeSelectorObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AssignRolesRoleAssignmentDataType(BaseModel):
    Role_Assigner_Reference: RoleAssignerObjectType
    Assignable_Role_Reference: AssignableRoleObjectType
    Remove_Existing_Assignees_for_Assignable_Role_on_Role_Assigner: Optional[
        bool
    ] = None
    Update_Later_Dated_Assignments: Optional[bool] = None
    Assignees_to_Add_Reference: Optional[List[RoleeSelectorObjectType]] = Field(
        None, min_items=0
    )
    Assignees_to_Remove_Reference: Optional[List[RoleeSelectorObjectType]] = Field(
        None, min_items=0
    )
    Supervisory_Organization_Single_Assignment_Manager_Reference: Optional[
        RoleeSelectorObjectType
    ] = None
    Remove_Supervisory_Organization_Single_Assignment_Manager: Optional[bool] = None


class AssignRolesSubProcessDataType(BaseModel):
    Remove_All_Role_Assignments_for_Event_Target_Assignee: Optional[bool] = None
    Assign_Roles_Role_Assignment_Data: Optional[
        List[AssignRolesRoleAssignmentDataType]
    ] = Field(None, min_items=0)


class AssignRolesSubProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Assign_Roles_Sub_Process_Data: Optional[AssignRolesSubProcessDataType] = None


class HierarchicAssignerObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class HierarchicAssignerObjectType(BaseModel):
    ID: Optional[List[HierarchicAssignerObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AssignSuperiorOrganizationDataType(BaseModel):
    Proposed_Supervisory_Organization_Reference: HierarchicAssignerObjectType
    Subordinate_Supervisory_Organizations_Reference: List[
        SupervisoryOrganizationObjectType
    ] = Field(..., min_items=1)


class AssignSuperiorOrganizationSubProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Assign_Superior_Organization_Data: Optional[
        AssignSuperiorOrganizationDataType
    ] = None


class RecruitingInstructionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RecruitingInstructionObjectType(BaseModel):
    ID: Optional[List[RecruitingInstructionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobRequisitionAttachmentDataType(BaseModel):
    File_Name: str
    Comment: Optional[str] = None
    File: Optional[List[int]] = None


class JobRequisitionAttachmentsType(BaseModel):
    Job_Requisition_Attachment_Data: Optional[
        List[JobRequisitionAttachmentDataType]
    ] = Field(None, min_items=0)


class WorkerTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class WorkerTypeObjectType(BaseModel):
    ID: Optional[List[WorkerTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PositionWorkerTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PositionWorkerTypeObjectType(BaseModel):
    ID: Optional[List[PositionWorkerTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobRequisitionRemoteTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class JobRequisitionRemoteTypeObjectType(BaseModel):
    ID: Optional[List[JobRequisitionRemoteTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EvergreenJobRequisitionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EvergreenJobRequisitionObjectType(BaseModel):
    ID: Optional[List[EvergreenJobRequisitionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class QuestionnaireObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class QuestionnaireObjectType(BaseModel):
    ID: Optional[List[QuestionnaireObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobRequisitionQuestionnaireDataType(BaseModel):
    Questionnaire_for_Internal_Career_Site_Reference: Optional[
        QuestionnaireObjectType
    ] = None
    Secondary_Questionnaire_for_Internal_Career_Site_Reference: Optional[
        QuestionnaireObjectType
    ] = None
    Questionnaire_for_External_Career_Site_Reference: Optional[
        QuestionnaireObjectType
    ] = None
    Secondary_Questionnaire_for_External_Career_Site_Reference: Optional[
        QuestionnaireObjectType
    ] = None


class RecruitingAssessmentTestObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RecruitingAssessmentTestObjectType(BaseModel):
    ID: Optional[List[RecruitingAssessmentTestObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobRequisitionAssessmentDataType(BaseModel):
    Inline_Assessment_Test_Reference: Optional[
        RecruitingAssessmentTestObjectType
    ] = None
    Default_Assessment_Tests_Reference: Optional[
        List[RecruitingAssessmentTestObjectType]
    ] = Field(None, min_items=0)


class ResponsibilityQualificationProfileReplacementDataType(BaseModel):
    Responsibility_Description: str
    Required: Optional[bool] = None


class ResponsibilityQualificationReplacementType(BaseModel):
    Responsibility_Qualification_Replacement_Data: Optional[
        List[ResponsibilityQualificationProfileReplacementDataType]
    ] = Field(None, min_items=0)
    Delete: Optional[bool] = None


class WorkExperienceQualificationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class WorkExperienceQualificationObjectType(BaseModel):
    ID: Optional[List[WorkExperienceQualificationObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class WorkExperienceRatingObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class WorkExperienceRatingObjectType(BaseModel):
    ID: Optional[List[WorkExperienceRatingObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class WorkExperienceQualificationProfileReplacementDataType(BaseModel):
    Worker_Experience_Reference: WorkExperienceQualificationObjectType
    Work_Experience_Rating_Reference: Optional[WorkExperienceRatingObjectType] = None
    Required: Optional[bool] = None


class WorkExperienceQualificationReplacementType(BaseModel):
    Work_Experience_Qualification_Replacement_Data: Optional[
        List[WorkExperienceQualificationProfileReplacementDataType]
    ] = Field(None, min_items=0)
    Delete: Optional[bool] = None


class DegreeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DegreeObjectType(BaseModel):
    ID: Optional[List[DegreeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class FieldOfStudyObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class FieldOfStudyObjectType(BaseModel):
    ID: Optional[List[FieldOfStudyObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EducationQualificationProfileReplacementDataType(BaseModel):
    Degree_Reference: Optional[DegreeObjectType] = None
    Field_Of_Study_Reference: Optional[FieldOfStudyObjectType] = None
    Required: Optional[bool] = None


class EducationQualificationReplacementType(BaseModel):
    Education_Qualification_Replacement_Data: Optional[
        List[EducationQualificationProfileReplacementDataType]
    ] = Field(None, min_items=0)
    Delete: Optional[bool] = None


class LanguageObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LanguageObjectType(BaseModel):
    ID: Optional[List[LanguageObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LanguageAbilityTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LanguageAbilityTypeObjectType(BaseModel):
    ID: Optional[List[LanguageAbilityTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LanguageProficiencyObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LanguageProficiencyObjectType(BaseModel):
    ID: Optional[List[LanguageProficiencyObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LanguageAbilityProfileDataType(BaseModel):
    Language_Ability_Type_Reference: LanguageAbilityTypeObjectType
    Language_Proficiency_Reference: Optional[LanguageProficiencyObjectType] = None


class LanguageQualificationProfileReplacementDataType(BaseModel):
    Language_Reference: LanguageObjectType
    Language_Ability_Profile_Data: Optional[
        List[LanguageAbilityProfileDataType]
    ] = Field(None, min_items=0)
    Required: Optional[bool] = None


class LanguageQualificationReplacementType(BaseModel):
    Language_Qualification_Replacement_Data: Optional[
        List[LanguageQualificationProfileReplacementDataType]
    ] = Field(None, min_items=0)
    Delete: Optional[bool] = None


class CompetencyObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CompetencyObjectType(BaseModel):
    ID: Optional[List[CompetencyObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProficiencyRatingObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ProficiencyRatingObjectType(BaseModel):
    ID: Optional[List[ProficiencyRatingObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CompetencyQualificationProfileReplacementDataType(BaseModel):
    Competency_Reference: CompetencyObjectType
    Proficiency_Rating_Reference: Optional[ProficiencyRatingObjectType] = None
    Required: Optional[bool] = None


class CompetencyQualificationReplacementType(BaseModel):
    Competency_Qualification_Replacement_Data: Optional[
        List[CompetencyQualificationProfileReplacementDataType]
    ] = Field(None, min_items=0)
    Delete: Optional[bool] = None


class CertificationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CertificationObjectType(BaseModel):
    ID: Optional[List[CertificationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SpecialtyParentObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SpecialtyParentObjectType(BaseModel):
    ID: Optional[List[SpecialtyParentObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SpecialtyChildObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SpecialtyChildObjectType(BaseModel):
    ID: Optional[List[SpecialtyChildObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SpecialtyAchievementDataType(BaseModel):
    Specialty_Reference: Optional[SpecialtyParentObjectType] = None
    Subspecialty_Reference: Optional[List[SpecialtyChildObjectType]] = Field(
        None, min_items=0
    )


class CertificationQualificationProfileReplacementDataType(BaseModel):
    Country_Reference: Optional[CountryObjectType] = None
    Certification_Reference: Optional[CertificationObjectType] = None
    Name: Optional[str] = None
    Issuer: Optional[str] = None
    Required: Optional[bool] = None
    Specialty_Achievement_Reference: Optional[
        List[SpecialtyAchievementDataType]
    ] = Field(None, min_items=0)


class CertificationQualificationReplacementType(BaseModel):
    Certification_Qualification_Replacement_Data: Optional[
        List[CertificationQualificationProfileReplacementDataType]
    ] = Field(None, min_items=0)
    Delete: Optional[bool] = None


class TrainingTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class TrainingTypeObjectType(BaseModel):
    ID: Optional[List[TrainingTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class TrainingQualificationProfileReplacementDataType(BaseModel):
    Training_Name: Optional[str] = None
    Description: Optional[str] = None
    Training_Type_Reference: Optional[TrainingTypeObjectType] = None
    Required: Optional[bool] = None


class TrainingQualificationReplacementType(BaseModel):
    Training_Qualification_Replacement_Data: Optional[
        List[TrainingQualificationProfileReplacementDataType]
    ] = Field(None, min_items=0)
    Delete: Optional[bool] = None


class LocalSkillObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LocalSkillObjectType(BaseModel):
    ID: Optional[List[LocalSkillObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SkillQualificationProfileReplacementDataType(BaseModel):
    External_Skill_ID: Optional[str] = None
    Skill_Reference: Optional[LocalSkillObjectType] = None
    Name: Optional[str] = None
    Required: Optional[bool] = None
    Skill_Level: Optional[float] = None


class SkillQualificationReplacementType(BaseModel):
    Skill_Qualification_Replacement_Data: Optional[
        List[SkillQualificationProfileReplacementDataType]
    ] = Field(None, min_items=0)
    Delete: Optional[bool] = None


class QualificationDataForPositionRestrictionOrJobProfileType(BaseModel):
    Responsibility_Qualification_Replacement: Optional[
        ResponsibilityQualificationReplacementType
    ] = None
    Work_Experience_Qualification_Replacement: Optional[
        WorkExperienceQualificationReplacementType
    ] = None
    Education_Qualification_Replacement: Optional[
        EducationQualificationReplacementType
    ] = None
    Language_Qualification_Replacement: Optional[
        LanguageQualificationReplacementType
    ] = None
    Competency_Qualification_Replacement: Optional[
        CompetencyQualificationReplacementType
    ] = None
    Certification_Qualification_Replacement: Optional[
        CertificationQualificationReplacementType
    ] = None
    Training_Qualification_Replacement: Optional[
        TrainingQualificationReplacementType
    ] = None
    Skill_Qualification_Replacement: Optional[SkillQualificationReplacementType] = None


class SupplierObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SupplierObjectType(BaseModel):
    ID: Optional[List[SupplierObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SpendCategoryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SpendCategoryObjectType(BaseModel):
    ID: Optional[List[SpendCategoryObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AuditedAccountingWorktagObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str
    parent_id: Optional[str] = None
    parent_type: Optional[str] = None


class AuditedAccountingWorktagObjectType(BaseModel):
    ID: Optional[List[AuditedAccountingWorktagObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ContingentWorkerCostInformationDataType(BaseModel):
    Requester_Reference: Optional[WorkerObjectType] = None
    Company_for_Purchase_Order_Reference: Optional[CompanyObjectType] = None
    Supplier_Reference: Optional[SupplierObjectType] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Spend_Category_Reference: Optional[SpendCategoryObjectType] = None
    Pay_Rate: Optional[float] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Maximum_Amount: Optional[float] = None
    Worktags_Reference: Optional[List[AuditedAccountingWorktagObjectType]] = Field(
        None, min_items=0
    )


class OrganizationAssignmentsForJobRequisitionDataType(BaseModel):
    Company_Assignment_Reference: Optional[CompanyObjectType] = None
    Cost_Center_Assignment_Reference: Optional[CostCenterObjectType] = None
    Region_Assignment_Reference: Optional[RegionObjectType] = None
    Business_Unit_Assignment_Reference: Optional[BusinessUnitObjectType] = None
    Grant_Assignment_Reference: Optional[GrantObjectType] = None
    Program_Assignment_Reference: Optional[ProgramObjectType] = None
    Fund_Assignment_Reference: Optional[FundObjectType] = None
    Gift_Assignment_Reference: Optional[GiftObjectType] = None
    Custom_Organization_Assignment_Reference: Optional[
        List[CustomOrganizationObjectType]
    ] = Field(None, min_items=0)


class JobRequisitionOrganizationsDataForBusinessProcessType(BaseModel):
    Organization_Assignments_for_Job_Requisition_Data: Optional[
        OrganizationAssignmentsForJobRequisitionDataType
    ] = None
    Replace_All: Optional[bool] = None
    Delete: Optional[bool] = None


class JobApplicationTemplateObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class JobApplicationTemplateObjectType(BaseModel):
    ID: Optional[List[JobApplicationTemplateObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobRequisitionDataForCreateAndEditType(BaseModel):
    Job_Requisition_ID: Optional[str] = None
    Job_Posting_Title: Optional[str] = None
    Recruiting_Instruction_Reference: Optional[RecruitingInstructionObjectType] = None
    Job_Description_Summary: Optional[str] = None
    Job_Description: Optional[str] = None
    Additional_Job_Description: Optional[str] = None
    Justification: Optional[str] = None
    Job_Requisition_Attachments: Optional[List[JobRequisitionAttachmentsType]] = Field(
        None, min_items=0
    )
    Recruiting_Start_Date: Optional[date] = None
    Target_Hire_Date: Optional[date] = None
    Target_End_Date: Optional[date] = None
    Job_Profile_Reference: Optional[JobProfileObjectType] = None
    Additional_Job_Profiles_Reference: Optional[List[JobProfileObjectType]] = Field(
        None, min_items=0
    )
    Referral_Payment_Plan_Reference: Optional[OneTimePaymentPlanObjectType] = None
    Worker_Type_Reference: Optional[WorkerTypeObjectType] = None
    Worker_SubType_Reference: Optional[PositionWorkerTypeObjectType] = None
    Remote_Type_Reference: Optional[JobRequisitionRemoteTypeObjectType] = None
    Primary_Location_Reference: Optional[LocationObjectType] = None
    Primary_Job_Posting_Location_Reference: Optional[LocationObjectType] = None
    Additional_Locations_Reference: Optional[List[LocationObjectType]] = Field(
        None, min_items=0
    )
    Additional_Job_Posting_Locations_Reference: Optional[
        List[LocationObjectType]
    ] = Field(None, min_items=0)
    Position_Time_Type_Reference: Optional[PositionTimeTypeObjectType] = None
    Employee_Contract_Type_Reference: Optional[EmployeeContractTypeObjectType] = None
    Scheduled_Weekly_Hours: Optional[float] = None
    Work_Shift_Reference: Optional[WorkShiftObjectType] = None
    Spotlight_Job: Optional[bool] = None
    Confidential_Job_Requisition: Optional[bool] = None
    Link_to_Evergreen_Requisition_Reference: Optional[
        EvergreenJobRequisitionObjectType
    ] = None
    Questionnaire_Data: Optional[JobRequisitionQuestionnaireDataType] = None
    Assessment_Data: Optional[JobRequisitionAssessmentDataType] = None
    Qualification_Replacement_Data: Optional[
        QualificationDataForPositionRestrictionOrJobProfileType
    ] = None
    Contingent_Worker_Cost_Information: Optional[
        ContingentWorkerCostInformationDataType
    ] = None
    Replacement_for_Worker_Reference: Optional[List[WorkerObjectType]] = Field(
        None, min_items=0
    )
    Organization_Data: Optional[
        JobRequisitionOrganizationsDataForBusinessProcessType
    ] = None
    Use_Updated_Template_Version: Optional[bool] = None
    Job_Application_Template_Reference: Optional[
        JobApplicationTemplateObjectType
    ] = None


class FinancialsBusinessSubProcessParametersType(BaseModel):
    Skip: Optional[bool] = None
    Business_Process_Comment_Data: Optional[BusinessProcessCommentDataType] = None


class CheckPositionBudgetSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[
        FinancialsBusinessSubProcessParametersType
    ] = None


class CreateJobRequisitionSubProcessDataType(BaseModel):
    Additional_Positions_Reference: Optional[
        List[PositionRestrictionsObjectType]
    ] = Field(None, min_items=0)
    Create_Job_Requisition_Reason_Reference: Optional[
        EventClassificationSubcategoryObjectType
    ] = None
    Job_Requisition_Data: Optional[JobRequisitionDataForCreateAndEditType] = None
    Check_Position_Budget_Sub_Process_for_Create_Job_Requisition: Optional[
        CheckPositionBudgetSubBusinessProcessType
    ] = None


class CreateJobRequisitionSubProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Create_Job_Requisition_Data: Optional[CreateJobRequisitionSubProcessDataType] = None


class GeneralEventSubcategoryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class GeneralEventSubcategoryObjectType(BaseModel):
    ID: Optional[List[GeneralEventSubcategoryObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SwitchPrimaryJobDataType(BaseModel):
    Reason_Reference: GeneralEventSubcategoryObjectType
    Proposed_Primary_Job_Reference: Optional[PositionElementObjectType] = None


class SwitchPrimaryJobSubProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Switch_Primary_Job_Data: Optional[SwitchPrimaryJobDataType] = None


class AcademicAppointeeEnabledObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AcademicAppointeeEnabledObjectType(BaseModel):
    ID: Optional[List[AcademicAppointeeEnabledObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AcademicAppointmentTrackObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AcademicAppointmentTrackObjectType(BaseModel):
    ID: Optional[List[AcademicAppointmentTrackObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AcademicTrackTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AcademicTrackTypeObjectType(BaseModel):
    ID: Optional[List[AcademicTrackTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AcademicAppointmentIdentifierObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AcademicAppointmentIdentifierObjectType(BaseModel):
    ID: Optional[List[AcademicAppointmentIdentifierObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class AcademicUnitObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AcademicUnitObjectType(BaseModel):
    ID: Optional[List[AcademicUnitObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AcademicRankObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AcademicRankObjectType(BaseModel):
    ID: Optional[List[AcademicRankObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class NamedProfessorshipObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class NamedProfessorshipObjectType(BaseModel):
    ID: Optional[List[NamedProfessorshipObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AppointmentSpecialtyObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AppointmentSpecialtyObjectType(BaseModel):
    ID: Optional[List[AppointmentSpecialtyObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AcademicTenureStatusObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AcademicTenureStatusObjectType(BaseModel):
    ID: Optional[List[AcademicTenureStatusObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AcademicAppointmentSnapshotDataType(BaseModel):
    Academic_Appointment_Track_Reference: Optional[
        AcademicAppointmentTrackObjectType
    ] = None
    Appointment_Track_ID: Optional[str] = None
    Appointment_Track_Inactive: Optional[bool] = None
    Track_Type_Reference: Optional[AcademicTrackTypeObjectType] = None
    Appointment_Identifier_Reference: AcademicAppointmentIdentifierObjectType
    Position_Reference: Optional[PositionElementObjectType] = None
    Academic_Unit_Reference: AcademicUnitObjectType
    Roster_Percent: Optional[float] = None
    Appointment_Start_Date: date
    Appointment_End_Date: Optional[date] = None
    Track_Start_Date_Override: Optional[date] = None
    Rank_Reference: Optional[AcademicRankObjectType] = None
    Named_Professorship_Reference: Optional[NamedProfessorshipObjectType] = None
    Appointment_Specialty_Reference: Optional[AppointmentSpecialtyObjectType] = None
    Constructed_Title: Optional[str] = None
    Appointment_Title: str
    Adjusted_Title_Start_Date: Optional[date] = None
    Academic_Review_Date: Optional[date] = None
    Related_Academic_Unit_Reference: Optional[AcademicUnitObjectType] = None
    Tenure_Home_Reference: Optional[AcademicUnitObjectType] = None
    Tenure_Status_Reference: Optional[AcademicTenureStatusObjectType] = None
    Probationary_End_Date: Optional[date] = None
    Tenure_Award_Date: Optional[date] = None


class UpdateAcademicAppointmentDataType(BaseModel):
    Reason_Reference: GeneralEventSubcategoryObjectType
    Academic_Appointee_Reference: AcademicAppointeeEnabledObjectType
    Academic_Appointment_Data: AcademicAppointmentSnapshotDataType


class UpdateAcademicAppointmentSubProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Update_Academic_Appointment_Data: Optional[UpdateAcademicAppointmentDataType] = None


class CostingIntervalUpdateKeyType(BaseModel):
    Costing_Override_ID_Update_Key: str
    Start_Date_Update_Key: date
    Delete: Optional[bool] = None


class SalaryOverTheCapCostingAllocationDetailDataType(BaseModel):
    SOC_Order: str
    SOC_Default_from_Organization_Assignment: Optional[bool] = None
    SOC_Costing_Override_Company_Reference: Optional[CompanyObjectType] = None
    SOC_Override_Worktag_Reference: Optional[
        List[TenantedPayrollWorktagObjectType]
    ] = Field(None, min_items=0)
    SOC_Distribution_Percent: float


class CostingAllocationDetailReplacementDataType(BaseModel):
    Order: str
    Default_from_Organization_Assignment: Optional[bool] = None
    Costing_Override_Company_Reference: Optional[CompanyObjectType] = None
    Costing_Override_Worktag_Reference: Optional[
        List[TenantedPayrollWorktagObjectType]
    ] = Field(None, min_items=0)
    Distribution_Percent: float
    Salary_Over_the_Cap_Costing_Allocation_Detail_Data: Optional[
        List[SalaryOverTheCapCostingAllocationDetailDataType]
    ] = Field(None, min_items=0)


class CostingAllocationIntervalDataType(BaseModel):
    Costing_Interval_Update_Key: Optional[List[CostingIntervalUpdateKeyType]] = Field(
        None, min_items=0
    )
    Costing_Override_ID: Optional[str] = None
    Start_Date: Optional[date] = None
    End_Date: Optional[date] = None
    Costing_Allocation_Detail_Data: Optional[
        List[CostingAllocationDetailReplacementDataType]
    ] = Field(None, min_items=0)


class CostingAllocationLevelObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CostingAllocationLevelObjectType(BaseModel):
    ID: Optional[List[CostingAllocationLevelObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EarningAllObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EarningAllObjectType(BaseModel):
    ID: Optional[List[EarningAllObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AssignCostingAllocationEventDataType(BaseModel):
    Costing_Override_Data: List[CostingAllocationIntervalDataType] = Field(
        ..., min_items=1
    )
    Costing_Allocation_Level_Reference: CostingAllocationLevelObjectType
    Costing_Allocation_Earning_Reference: Optional[EarningAllObjectType] = None


class AssignCostingAllocationSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Position_Costing_Allocation_Assignment_Data: Optional[
        AssignCostingAllocationEventDataType
    ] = None


class CollectiveAgreementFactorObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CollectiveAgreementFactorObjectType(BaseModel):
    ID: Optional[List[CollectiveAgreementFactorObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CollectiveAgreementFactorOptionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CollectiveAgreementFactorOptionObjectType(BaseModel):
    ID: Optional[List[CollectiveAgreementFactorOptionObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class CollectiveAgreementFactor1DataType(BaseModel):
    Collective_Agreement_Factor_1_Reference: Optional[
        CollectiveAgreementFactorObjectType
    ] = None
    Collective_Agreement_Factor_Option_1_Reference: Optional[
        CollectiveAgreementFactorOptionObjectType
    ] = None


class CollectiveAgreementFactor2DataType(BaseModel):
    Collective_Agreement_Factor_2_Reference: Optional[
        CollectiveAgreementFactorObjectType
    ] = None
    Collective_Agreement_Factor_Option_2_Reference: Optional[
        CollectiveAgreementFactorOptionObjectType
    ] = None


class CollectiveAgreementFactor3DataType(BaseModel):
    Collective_Agreement_Factor_3_Reference: Optional[
        CollectiveAgreementFactorObjectType
    ] = None
    Collective_Agreement_Factor_Option_3_Reference: Optional[
        CollectiveAgreementFactorOptionObjectType
    ] = None


class CollectiveAgreementFactor4DataType(BaseModel):
    Collective_Agreement_Factor_4_Reference: Optional[
        CollectiveAgreementFactorObjectType
    ] = None
    Collective_Agreement_Factor_Option_4_Reference: Optional[
        CollectiveAgreementFactorOptionObjectType
    ] = None


class CollectiveAgreementFactor5DataType(BaseModel):
    Collective_Agreement_Factor_5_Reference: Optional[
        CollectiveAgreementFactorObjectType
    ] = None
    Collective_Agreement_Factor_Option_5_Reference: Optional[
        CollectiveAgreementFactorOptionObjectType
    ] = None


class CollectiveAgreementFactorOptionsDataType(BaseModel):
    Collective_Agreement_Factor_1_Data: Optional[
        CollectiveAgreementFactor1DataType
    ] = None
    Collective_Agreement_Factor_2_Data: Optional[
        CollectiveAgreementFactor2DataType
    ] = None
    Collective_Agreement_Factor_3_Data: Optional[
        CollectiveAgreementFactor3DataType
    ] = None
    Collective_Agreement_Factor_4_Data: Optional[
        CollectiveAgreementFactor4DataType
    ] = None
    Collective_Agreement_Factor_5_Data: Optional[
        CollectiveAgreementFactor5DataType
    ] = None


class AssignEmployeeCollectiveAgreementSubDataType(BaseModel):
    Collective_Agreement_Reference: CollectiveAgreementObjectType
    Factor_Options: Optional[CollectiveAgreementFactorOptionsDataType] = None


class AssignEmployeeCollectiveAgreementSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Assign_Employee_Collective_Agreement_Data: Optional[
        AssignEmployeeCollectiveAgreementSubDataType
    ] = None


class OrganizationSubtypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class OrganizationSubtypeObjectType(BaseModel):
    ID: Optional[List[OrganizationSubtypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ExternalURLObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ExternalURLObjectType(BaseModel):
    ID: Optional[List[ExternalURLObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CreateSubordinateEventDataType(BaseModel):
    Availability_Date: Optional[date] = None
    Organization_Name: Optional[str] = None
    Include_Organization_ID_in_Name: Optional[bool] = None
    Organization_Code: Optional[str] = None
    Include_Organization_Code_in_Name: Optional[bool] = None
    Include_Manager_Leader_in_Name: Optional[bool] = None
    Organization_Subtype_Reference: OrganizationSubtypeObjectType
    External_URL_Reference: Optional[ExternalURLObjectType] = None
    Primary_Location_Reference: Optional[LocationObjectType] = None


class CreateSubordinateSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[
        List[BusinessSubProcessParametersType]
    ] = Field(None, min_items=0)
    Create_Subordinate_Event_Data: Optional[
        List[CreateSubordinateEventDataType]
    ] = Field(None, min_items=0)


class StudentEmploymentEligibilitySubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None


class OnboardingSetupTemplateObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class OnboardingSetupTemplateObjectType(BaseModel):
    ID: Optional[List[OnboardingSetupTemplateObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class OnboardingSetupDataType(BaseModel):
    Onboarding_Setup_Template_Reference: Optional[
        OnboardingSetupTemplateObjectType
    ] = None


class OnboardingSetupSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Onboarding_Setup_Data: Optional[OnboardingSetupDataType] = None


class UnionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class UnionObjectType(BaseModel):
    ID: Optional[List[UnionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class UnionMembershipTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class UnionMembershipTypeObjectType(BaseModel):
    ID: Optional[List[UnionMembershipTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class StaffingInterfaceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class StaffingInterfaceObjectType(BaseModel):
    ID: Optional[List[StaffingInterfaceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class UnionMembershipDataType(BaseModel):
    Start_Date: date
    End_Date: Optional[date] = None
    Membership_Type_Reference: UnionMembershipTypeObjectType
    Related_Position_Reference: Optional[StaffingInterfaceObjectType] = None
    Notes: Optional[str] = None


class UnionMemberDataType(BaseModel):
    Worker_Reference: Optional[WorkerObjectType] = None
    Union_Reference: UnionObjectType
    Seniority_Date: Optional[date] = None
    Union_Membership_Data: List[UnionMembershipDataType] = Field(..., min_items=1)


class ManageUnionMembershipSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Union_Member_Data: Optional[UnionMemberDataType] = None


class EmployeeProbationPeriodObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmployeeProbationPeriodObjectType(BaseModel):
    ID: Optional[List[EmployeeProbationPeriodObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmployeeProbationPeriodTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmployeeProbationPeriodTypeObjectType(BaseModel):
    ID: Optional[List[EmployeeProbationPeriodTypeObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class DateAndTimeUnitObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DateAndTimeUnitObjectType(BaseModel):
    ID: Optional[List[DateAndTimeUnitObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProbationPeriodLengthDataType(BaseModel):
    Duration: float
    Unit_Reference: DateAndTimeUnitObjectType


class EmployeeProbationPeriodReasonObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmployeeProbationPeriodReasonObjectType(BaseModel):
    ID: Optional[List[EmployeeProbationPeriodReasonObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class ProbationPeriodReviewLengthType(BaseModel):
    Schedule: float
    Unit_Reference: DateAndTimeUnitObjectType


class ProbationReviewDataType(BaseModel):
    Derive_Probation_Period_Review_from_Rule: Optional[bool] = None
    Probation_Review_Date: Optional[date] = None
    Probation_Period_Review_Length: Optional[ProbationPeriodReviewLengthType] = None


class ManageEmployeeProbationPeriodSubDataType(BaseModel):
    Probation_Period_Reference: Optional[EmployeeProbationPeriodObjectType] = None
    Start_Date: date
    End_Date: Optional[date] = None
    Probation_Type_Reference: Optional[EmployeeProbationPeriodTypeObjectType] = None
    Derive_Probation_Period_from_Rule: Optional[bool] = None
    Length: Optional[ProbationPeriodLengthDataType] = None
    Probation_Reason_Reference: Optional[EmployeeProbationPeriodReasonObjectType] = None
    Extended_End_Date: Optional[date] = None
    Probation_Review: Optional[ProbationReviewDataType] = None
    Note: Optional[str] = None


class ManageProbationPeriodSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Manage_Employee_Probation_Period_Data: Optional[
        ManageEmployeeProbationPeriodSubDataType
    ] = None


class OverrideNoticePeriodDataType(BaseModel):
    Duration: Optional[float] = None
    Unit_Reference: DateAndTimeUnitObjectType
    Adjustment_Reference: Optional[UniqueIdentifierObjectType] = None


class EmployerNoticePeriodDataType(BaseModel):
    Derive_Notice_Period: bool
    Override_Notice_Period_Data: OverrideNoticePeriodDataType


class EmployeeNoticePeriodDataType(BaseModel):
    Derive_Notice_Period: bool
    Override_Notice_Period_Data: OverrideNoticePeriodDataType


class EditNoticePeriodsDataType(BaseModel):
    Employer_Notice_Period_Data: Optional[EmployerNoticePeriodDataType] = None
    Employee_Notice_Period_Data: Optional[EmployeeNoticePeriodDataType] = None


class EditNoticePeriodsSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Edit_Notice_Periods_Data: Optional[EditNoticePeriodsDataType] = None


class EditServiceDatesEventDataType(BaseModel):
    Original_Hire_Date: Optional[date] = None
    Continuous_Service_Date: Optional[date] = None
    Expected_Retirement_Date: Optional[date] = None
    Retirement_Eligibility_Date: Optional[date] = None
    End_Employment_Date: Optional[date] = None
    Seniority_Date: Optional[date] = None
    Severance_Date: Optional[date] = None
    Contract_End_Date: Optional[date] = None
    Benefits_Service_Date: Optional[date] = None
    Company_Service_Date: Optional[date] = None
    Time_Off_Service_Date: Optional[date] = None
    Vesting_Date: Optional[date] = None
    Date_Entered_Workforce: Optional[date] = None
    Days_Unemployed: Optional[float] = None
    Months_Continuous_Prior_Employment: Optional[float] = None


class EditServiceDatesSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Edit_Service_Dates_Event_Data: Optional[EditServiceDatesEventDataType] = None


class EstablishmentObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EstablishmentObjectType(BaseModel):
    ID: Optional[List[EstablishmentObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AssignEstablishmentSubProcessEventDataType(BaseModel):
    Establishment_Reference: Optional[EstablishmentObjectType] = None


class AssignEstablishmentSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Assign_Establishment_Data: Optional[
        AssignEstablishmentSubProcessEventDataType
    ] = None


class ChangeJobDataType(BaseModel):
    Worker_Reference: WorkerObjectType
    Position_Reference: Optional[PositionElementObjectType] = None
    Effective_Date: date
    Change_Job_Detail_Data: ChangeJobDetailDataType
    Propose_Compensation_Sub_Process: Optional[
        ProposeCompensationForPositionSubBusinessProcessType
    ] = None
    Request_One_Time_Payment_Sub_Process: Optional[
        RequestOneTimePaymentSubBusinessProcessType
    ] = None
    Request_Stock_Grant_Sub_Process: Optional[RequestStockSubBusinessProcessType] = None
    Change_Organization_Sub_Process: Optional[
        EditAssignPositionOrganizationSubBusinessProcessType
    ] = None
    Assign_Pay_Group_Sub_Process: Optional[AssignPayGroupSubBusinessProcessType] = None
    Assign_Matrix_Organization_Sub_Process: Optional[
        AssignMatrixOrganizationSubBusinessProcessType
    ] = None
    Change_Personal_Information_Sub_Process: Optional[
        ChangePersonalInformationSubBusinessProcessType
    ] = None
    Maintain_Employee_Contracts_Sub_Process: Optional[
        MaintainEmployeeContractsSubBusinessProcessType
    ] = None
    Assign_Organization_Roles_Sub_Process: Optional[
        AssignOrganizationRolesSubBusinessProcessType
    ] = None
    Assign_Roles_Sub_Process: Optional[AssignRolesSubProcessType] = None
    Assign_Superior_Organization_Sub_Process: Optional[
        AssignSuperiorOrganizationSubProcessType
    ] = None
    Create_Job_Requisition_Sub_Process: Optional[
        CreateJobRequisitionSubProcessType
    ] = None
    Check_Position_Budget_Sub_Process: Optional[
        CheckPositionBudgetSubBusinessProcessType
    ] = None
    Switch_Primary_Job_Sub_Process: Optional[SwitchPrimaryJobSubProcessType] = None
    Update_Academic_Appointment_Sub_Process: Optional[
        UpdateAcademicAppointmentSubProcessType
    ] = None
    Assign_Costing_Allocation_Sub_Process: Optional[
        AssignCostingAllocationSubBusinessProcessType
    ] = None
    Assign_Employee_Collective_Agreement_Sub_Process: Optional[
        AssignEmployeeCollectiveAgreementSubBusinessProcessType
    ] = None
    Create_Subordinate_Sub_Process: Optional[
        CreateSubordinateSubBusinessProcessType
    ] = None
    Student_Employment_Eligibility_Sub_Process: Optional[
        StudentEmploymentEligibilitySubBusinessProcessType
    ] = None
    Onboarding_Setup_Sub_Process: Optional[OnboardingSetupSubBusinessProcessType] = None
    Manage_Union_Membership_Sub_Process: Optional[
        ManageUnionMembershipSubBusinessProcessType
    ] = None
    Manage_Employee_Probation_Period_Sub_Business_Process: Optional[
        ManageProbationPeriodSubBusinessProcessType
    ] = None
    Edit_Notice_Periods_Sub_Process: Optional[
        EditNoticePeriodsSubBusinessProcessType
    ] = None
    Edit_Service_Dates_Sub_Process: Optional[
        EditServiceDatesSubBusinessProcessType
    ] = None
    Assign_Establishment_Sub_Process: Optional[
        AssignEstablishmentSubBusinessProcessType
    ] = None


class ChangeJobRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Change_Job_Data: ChangeJobDataType
    version: Optional[str] = None


class StudentEmploymentEligibilityRuleSetObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class StudentEmploymentEligibilityRuleSetObjectType(BaseModel):
    ID: Optional[List[StudentEmploymentEligibilityRuleSetObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class JobFamilyObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class JobFamilyObjectType(BaseModel):
    ID: Optional[List[JobFamilyObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AcademicLevelObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AcademicLevelObjectType(BaseModel):
    ID: Optional[List[AcademicLevelObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AcademicPeriodObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AcademicPeriodObjectType(BaseModel):
    ID: Optional[List[AcademicPeriodObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AcademicPeriodTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AcademicPeriodTypeObjectType(BaseModel):
    ID: Optional[List[AcademicPeriodTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ConditionRuleObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ConditionRuleObjectType(BaseModel):
    ID: Optional[List[ConditionRuleObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class StudentEmploymentEligibilityRuleSubeditDataType(BaseModel):
    Condition_Rule_Reference: ConditionRuleObjectType
    Student_Employment_Eligibility_Rule_Reference: Optional[str] = None
    Reason_for_Ineligibility: str
    Critical_Severity: Optional[bool] = None


class StudentEmploymentEligibilityRuleSetDataType(BaseModel):
    ID: Optional[str] = None
    Student_Employment_Eligibility_Rule_Set_Name: str
    Student_Employment_Eligibility_Rule_Set_Description: Optional[str] = None
    Inactive: Optional[bool] = None
    Job_Profile_Reference: Optional[List[JobProfileObjectType]] = Field(
        None, min_items=0
    )
    Job_Family_Reference: Optional[List[JobFamilyObjectType]] = Field(None, min_items=0)
    Academic_Level_Reference: Optional[List[AcademicLevelObjectType]] = Field(
        None, min_items=0
    )
    Academic_Period_Reference: Optional[List[AcademicPeriodObjectType]] = Field(
        None, min_items=0
    )
    Academic_Period_Type_Reference: Optional[
        List[AcademicPeriodTypeObjectType]
    ] = Field(None, min_items=0)
    Student_Employment_Eligibility_Rule_Subedit_Data: List[
        StudentEmploymentEligibilityRuleSubeditDataType
    ] = Field(..., min_items=1)


class PutStudentEmploymentEligibilityRuleSetResponseType(BaseModel):
    Student_Employment_Eligibility_Rule_Set_Reference: Optional[
        StudentEmploymentEligibilityRuleSetObjectType
    ] = None
    Student_Employment_Eligibility_Rule_Set_Data: Optional[
        List[StudentEmploymentEligibilityRuleSetDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class RemarkObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RemarkObjectType(BaseModel):
    ID: Optional[List[RemarkObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PARVariableTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PARVariableTypeObjectType(BaseModel):
    ID: Optional[List[PARVariableTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PARVariableDataType(BaseModel):
    Parameter_Name: str
    Parameter_Type_Reference: PARVariableTypeObjectType


class NatureOfActionAllObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class NatureOfActionAllObjectType(BaseModel):
    ID: Optional[List[NatureOfActionAllObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class RemarkDataType(BaseModel):
    ID: Optional[str] = None
    Code: Optional[str] = None
    Explanation: Optional[str] = None
    Parameter_Data: Optional[List[PARVariableDataType]] = Field(None, min_items=0)
    Nature_of_Action_Reference: Optional[List[NatureOfActionAllObjectType]] = Field(
        None, min_items=0
    )
    Inactive: Optional[bool] = None


class PutRemarkRequestType(BaseModel):
    Delete: Optional[bool] = None
    Remark_Reference: Optional[RemarkObjectType] = None
    Remark_Data: RemarkDataType
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class AddAdditionalJobEventResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Employee_Reference: Optional[WorkerObjectType] = None
    Job_Reference: Optional[PositionElementObjectType] = None
    version: Optional[str] = None


class PersonTypeCriteriaType(BaseModel):
    Include_Academic_Affiliates: Optional[bool] = None
    Include_External_Committee_Members: Optional[bool] = None
    Include_External_Student_Records: Optional[bool] = None
    Include_Student_Prospect_Records: Optional[bool] = None
    Include_Student_Records: Optional[bool] = None
    Include_Workers: Optional[bool] = None


class ChangeGovernmentIDRequestCriteriaType(BaseModel):
    Person_Type_Criteria_Data: Optional[PersonTypeCriteriaType] = None


class GetChangeGovernmentIDsRequestType(BaseModel):
    Request_References: Optional[GetChangeGovernmentIDsRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Request_Criteria_Data: Optional[ChangeGovernmentIDRequestCriteriaType] = None
    version: Optional[str] = None


class NatureOfActionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class NatureOfActionObjectType(BaseModel):
    ID: Optional[List[NatureOfActionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class NatureOfActionSeriesObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class NatureOfActionSeriesObjectType(BaseModel):
    ID: Optional[List[NatureOfActionSeriesObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class NatureOfActionDataType(BaseModel):
    ID: Optional[str] = None
    Nature_of_Action_Series_Reference: Optional[NatureOfActionSeriesObjectType] = None
    Code: Optional[str] = None
    Explanation: Optional[str] = None
    Parameter_Data: Optional[List[PARVariableDataType]] = Field(None, min_items=0)
    Don_t_Require_Legal_Authority_and_Remark: Optional[bool] = None
    Inactive: Optional[bool] = None


class PutNatureOfActionRequestType(BaseModel):
    Add_Only: Optional[bool] = None
    Nature_of_Action_Reference: Optional[NatureOfActionObjectType] = None
    Nature_of_Action_Data: NatureOfActionDataType
    Delete: Optional[bool] = None
    version: Optional[str] = None


class PARMassActionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PARMassActionObjectType(BaseModel):
    ID: Optional[List[PARMassActionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PARMassActionDataType(BaseModel):
    ID: Optional[str] = None
    Mass_Action_Initiating_Task: Optional[str] = None
    Select: Optional[bool] = None


class PutPersonnelActionRequestStatusOnMassActionRequestType(BaseModel):
    PAR_Mass_Action_Reference: Optional[PARMassActionObjectType] = None
    PAR_Mass_Action_Data: Optional[PARMassActionDataType] = None
    version: Optional[str] = None


class EmployeeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmployeeObjectType(BaseModel):
    ID: Optional[List[EmployeeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CommonYesNoObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CommonYesNoObjectType(BaseModel):
    ID: Optional[List[CommonYesNoObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class NoShowEmployeeDataType(BaseModel):
    Employee_Reference: EmployeeObjectType
    Mark_No_Show_Reference: Optional[CommonBooleanEnumerationObjectType] = None
    Eligible_Rehire_Reference: Optional[CommonYesNoObjectType] = None
    Reason_Reference: Optional[GeneralEventSubcategoryObjectType] = None


class NoShowRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    No_Show_Employee_Data: NoShowEmployeeDataType
    version: Optional[str] = None


class RetireeOrganizationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RetireeOrganizationObjectType(BaseModel):
    ID: Optional[List[RetireeOrganizationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AddRetireeStatusEventDataType(BaseModel):
    Reason_Reference: GeneralEventSubcategoryObjectType
    Retiree_Organization_Reference: RetireeOrganizationObjectType


class AddRetireeStatusDataType(BaseModel):
    Employee_Reference: EmployeeObjectType
    Retiree_Status_Date: date
    Add_Retiree_Status_Event_Data: AddRetireeStatusEventDataType


class AddRetireeStatusRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Add_Retiree_Status_Data: AddRetireeStatusDataType
    version: Optional[str] = None


class LegalAuthorityObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LegalAuthorityObjectType(BaseModel):
    ID: Optional[List[LegalAuthorityObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PutLegalAuthorityResponseType(BaseModel):
    Legal_Authority_Reference: Optional[LegalAuthorityObjectType] = None
    version: Optional[str] = None


class PutJobClassificationGroupRequestType(BaseModel):
    Job_Classification_Group_Reference: Optional[
        JobClassificationGroupObjectType
    ] = None
    Job_Classification_Group_Data: Optional[JobClassificationGroupDataType] = None
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class CollectiveAgreementRequestReferencesType(BaseModel):
    Collective_Agreement_Reference: List[CollectiveAgreementObjectType] = Field(
        ..., min_items=1
    )


class CollectiveAgreementRequestCriteriaType(BaseModel):
    pass


class CollectiveAgreementResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None


class GetCollectiveAgreementsRequestType(BaseModel):
    Request_References: Optional[CollectiveAgreementRequestReferencesType] = None
    Request_Criteria: Optional[CollectiveAgreementRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[CollectiveAgreementResponseGroupType] = None
    version: Optional[str] = None


class ApplicantObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ApplicantObjectType(BaseModel):
    ID: Optional[List[ApplicantObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LegalNameDataType(BaseModel):
    Name_Detail_Data: PersonNameDetailDataType


class PreferredNameDataType(BaseModel):
    Name_Detail_Data: PersonNameDetailDataType


class AdditionalNameTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AdditionalNameTypeObjectType(BaseModel):
    ID: Optional[List[AdditionalNameTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AdditionalNameDataType(BaseModel):
    Name_Detail_Data: PersonNameDetailDataType
    Name_Type_Reference: Optional[AdditionalNameTypeObjectType] = None


class PersonNameDataType(BaseModel):
    Legal_Name_Data: Optional[LegalNameDataType] = None
    Preferred_Name_Data: Optional[PreferredNameDataType] = None
    Additional_Name_Data: Optional[List[AdditionalNameDataType]] = Field(
        None, min_items=0
    )


class PersonDisabilityStatusDataType(BaseModel):
    Disability_Reference: DisabilityObjectType
    Disability_Status_Date: Optional[date] = None
    Disability_Date_Known: Optional[date] = None
    Disability_End_Date: Optional[date] = None
    Disability_Grade_Reference: Optional[DisabilityGradeObjectType] = None
    Disability_Degree: Optional[float] = None
    Disability_Remaining_Capacity: Optional[float] = None
    Disability_Certification_Authority_Reference: Optional[
        DisabilityCertificationAuthorityObjectType
    ] = None
    Disability_Certification_Authority: Optional[str] = None
    Disability_Certified_At: Optional[str] = None
    Disability_Certification_ID: Optional[str] = None
    Disability_Certification_Basis_Reference: Optional[
        DisabilityCertificationBasisObjectType
    ] = None
    Disability_Severity_Recognition_Date: Optional[date] = None
    Disability_FTE_Toward_Quota: Optional[float] = None
    Disability_Work_Restrictions: Optional[str] = None
    Disability_Accommodations_Requested: Optional[str] = None
    Disability_Accommodations_Provided: Optional[str] = None
    Disability_Rehabilitation_Requested: Optional[str] = None
    Disability_Rehabilitation_Provided: Optional[str] = None
    Note: Optional[str] = None
    Worker_Document_Reference: Optional[List[WorkerDocumentObjectType]] = Field(
        None, min_items=0
    )
    Disability_Status_Reference: Optional[DisabilityStatusReferenceObjectType] = None


class CountryPersonalInformationDataType(BaseModel):
    Marital_Status_Reference: Optional[MaritalStatusObjectType] = None
    Marital_Status_Date: Optional[date] = None
    Religion_Reference: Optional[ReligionObjectType] = None
    Disability_Status_Data: Optional[List[PersonDisabilityStatusDataType]] = Field(
        None, min_items=0
    )
    Ethnicity_Reference: Optional[List[EthnicityObjectType]] = Field(None, min_items=0)
    Race_Ethnicity_Details_Reference: Optional[
        List[EthnicityDetailsObjectType]
    ] = Field(None, min_items=0)
    Ethnicity_Visual_Survey_Reference: Optional[List[EthnicityObjectType]] = Field(
        None, min_items=0
    )
    Hispanic_or_Latino: Optional[bool] = None
    Hispanic_or_Latino_Visual_Survey: Optional[bool] = None
    Aboriginal_Indigenous_Identification_Reference: Optional[
        AboriginalIndigenousIdentificationSelectionObjectType
    ] = None
    Aboriginal_Indigenous_Identification_Details_Reference: Optional[
        List[AboriginalIndigenousDetailsObjectType]
    ] = Field(None, min_items=0)
    Hukou_Region_Reference: Optional[CountryRegionObjectType] = None
    Hukou_Subregion_Reference: Optional[CountrySubregionObjectType] = None
    Hukou_Locality: Optional[str] = None
    Hukou_Postal_Code: Optional[str] = None
    Hukou_Type_Reference: Optional[HukouTypeObjectType] = None
    Local_Hukou: Optional[bool] = None
    Native_Region_Reference: Optional[List[CountryRegionObjectType]] = Field(
        None, min_items=0
    )
    Native_Region_Descriptor: Optional[str] = None
    Personnel_File_Agency_for_Person: Optional[str] = None
    Political_Affiliation_Reference: Optional[PoliticalAffiliationObjectType] = None
    Social_Benefits_Locality_Reference: Optional[
        SocialBenefitsLocalityObjectType
    ] = None
    Relative_Name_Information_Data: Optional[List[RelativeNameDataType]] = Field(
        None, min_items=0
    )
    Sexual_Orientation_and_Gender_Identity_Reference: Optional[
        List[LGBTIdentificationObjectType]
    ] = Field(None, min_items=0)
    Gender_Reference: Optional[GenderObjectType] = None
    Reporting_Gender_Reference: Optional[GenderObjectType] = None
    Veterans_Preference_Reference: Optional[List[VeteransPreferenceObjectType]] = Field(
        None, min_items=0
    )
    Veterans_Preference_For_RIF_Reference: Optional[
        CommonBooleanEnumerationObjectType
    ] = None
    Selective_Service_Registration_Reference: Optional[
        CommonBooleanEnumerationObjectType
    ] = None
    Disabled_Veteran_Leave_Date_Reference: Optional[date] = None
    Active_Military_Uniformed_Service_Reference: Optional[
        CommonBooleanEnumerationObjectType
    ] = None
    Uniform_Service_Reserve_Status_Reference: Optional[
        UniformServiceReserveStatusObjectType
    ] = None


class PersonalInformationForCountryDataType(BaseModel):
    Country_Reference: CountryObjectType
    Country_Personal_Information_Data: Optional[
        List[CountryPersonalInformationDataType]
    ] = Field(None, min_items=0)


class PersonMilitaryServiceDataType(BaseModel):
    Status_Reference: MilitaryStatusObjectType
    Discharge_Date: Optional[date] = None
    Status_Begin_Date: Optional[date] = None
    Military_Service_Type_Reference: Optional[MilitaryServiceTypeObjectType] = None
    Military_Rank_Reference: Optional[MilitaryRankObjectType] = None
    Notes: Optional[str] = None
    Military_Service_Reference: Optional[MilitaryServiceReferenceObjectType] = None
    Military_Discharge_Type_Reference: Optional[MilitaryDischargeTypeObjectType] = None


class PersonalInformationCommonDataType(BaseModel):
    Personal_Information_For_Country_Data: Optional[
        List[PersonalInformationForCountryDataType]
    ] = Field(None, min_items=0)
    Birth_Date: Optional[date] = None
    Date_of_Death: Optional[date] = None
    Country_of_Birth_Reference: Optional[CountryObjectType] = None
    Country_Region_of_Birth_Reference: Optional[CountryRegionObjectType] = None
    Region_of_Birth_Descriptor: Optional[str] = None
    City_of_Birth: Optional[str] = None
    City_of_Birth_Reference: Optional[CountryCityObjectType] = None
    Citizenship_Status_Reference: Optional[List[CitizenshipStatusObjectType]] = Field(
        None, min_items=0
    )
    Primary_Nationality_Reference: Optional[CountryAndNationalityObjectType] = None
    Additional_Nationalities_Reference: Optional[
        List[CountryAndNationalityObjectType]
    ] = Field(None, min_items=0)
    Last_Medical_Exam_Valid_To: Optional[date] = None
    Last_Medical_Exam_Date: Optional[date] = None
    Medical_Exam_Notes: Optional[str] = None
    Blood_Type_Reference: Optional[BloodTypeObjectType] = None
    Military_Service_Data: Optional[List[PersonMilitaryServiceDataType]] = Field(
        None, min_items=0
    )
    Sexual_Orientation_Reference: Optional[List[SexualOrientationObjectType]] = Field(
        None, min_items=0
    )
    Gender_Identity_Reference: Optional[List[GenderIdentityObjectType]] = Field(
        None, min_items=0
    )
    Pronoun_Reference: Optional[List[PronounObjectType]] = Field(None, min_items=0)


class VisaIDTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class VisaIDTypeObjectType(BaseModel):
    ID: Optional[List[VisaIDTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class VisaIDDataType(BaseModel):
    ID: Optional[str] = None
    ID_Type_Reference: Optional[VisaIDTypeObjectType] = None
    Country_Reference: Optional[CountryObjectType] = None
    Issued_Date: Optional[date] = None
    Expiration_Date: Optional[date] = None
    Verification_Date: Optional[date] = None
    Verified_By_Reference: Optional[WorkerObjectType] = None


class VisaIdentifierReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class VisaIdentifierReferenceObjectType(BaseModel):
    ID: Optional[List[VisaIdentifierReferenceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class VisaIDType(BaseModel):
    Visa_ID_Reference: Optional[UniqueIdentifierObjectType] = None
    Visa_ID_Data: Optional[VisaIDDataType] = None
    Visa_ID_Shared_Reference: Optional[VisaIdentifierReferenceObjectType] = None
    Delete: Optional[bool] = None


class PassportIDTypeAllObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PassportIDTypeAllObjectType(BaseModel):
    ID: Optional[List[PassportIDTypeAllObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PassportIDDataType(BaseModel):
    ID: Optional[str] = None
    ID_Type_Reference: Optional[PassportIDTypeAllObjectType] = None
    Country_Reference: Optional[CountryObjectType] = None
    Issued_Date: Optional[date] = None
    Expiration_Date: Optional[date] = None
    Verification_Date: Optional[date] = None
    Verified_By_Reference: Optional[WorkerObjectType] = None


class PassportIdentifierReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PassportIdentifierReferenceObjectType(BaseModel):
    ID: Optional[List[PassportIdentifierReferenceObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class PassportIDType(BaseModel):
    Passport_ID_Reference: Optional[UniqueIdentifierObjectType] = None
    Passport_ID_Data: Optional[PassportIDDataType] = None
    Passport_ID_Shared_Reference: Optional[PassportIdentifierReferenceObjectType] = None
    Delete: Optional[bool] = None


class LicenseIdentifierObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LicenseIdentifierObjectType(BaseModel):
    ID: Optional[List[LicenseIdentifierObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LicenseIDTypeAllObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LicenseIDTypeAllObjectType(BaseModel):
    ID: Optional[List[LicenseIDTypeAllObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AuthorityObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AuthorityObjectType(BaseModel):
    ID: Optional[List[AuthorityObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LicenseIDDataType(BaseModel):
    ID: Optional[str] = None
    ID_Type_Reference: Optional[LicenseIDTypeAllObjectType] = None
    Country_Reference: Optional[CountryObjectType] = None
    Country_Region_Reference: Optional[CountryRegionObjectType] = None
    Country_Region_Descriptor: Optional[str] = None
    Authority_Reference: Optional[AuthorityObjectType] = None
    License_Class: Optional[str] = None
    Issued_Date: Optional[date] = None
    Expiration_Date: Optional[date] = None
    Verification_Date: Optional[date] = None
    Verified_By_Reference: Optional[WorkerObjectType] = None


class LicenseIdentifierReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LicenseIdentifierReferenceObjectType(BaseModel):
    ID: Optional[List[LicenseIdentifierReferenceObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class LicenseIDType(BaseModel):
    License_ID_Reference: Optional[LicenseIdentifierObjectType] = None
    License_ID_Data: Optional[LicenseIDDataType] = None
    License_ID_Shared_Reference: Optional[LicenseIdentifierReferenceObjectType] = None
    Delete: Optional[bool] = None


class CustomIDTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CustomIDTypeObjectType(BaseModel):
    ID: Optional[List[CustomIDTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class OrganizationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class OrganizationObjectType(BaseModel):
    ID: Optional[List[OrganizationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CustomIDDataType(BaseModel):
    ID: Optional[str] = None
    ID_Type_Reference: Optional[CustomIDTypeObjectType] = None
    Issued_Date: Optional[date] = None
    Expiration_Date: Optional[date] = None
    Organization_ID_Reference: Optional[OrganizationObjectType] = None
    Custom_Description: Optional[str] = None


class CustomIdentifierReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CustomIdentifierReferenceObjectType(BaseModel):
    ID: Optional[List[CustomIdentifierReferenceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CustomIDType(BaseModel):
    Custom_ID_Reference: Optional[UniqueIdentifierObjectType] = None
    Custom_ID_Data: Optional[CustomIDDataType] = None
    Custom_ID_Shared_Reference: Optional[CustomIdentifierReferenceObjectType] = None
    Delete: Optional[bool] = None


class PersonIdentificationDataType(BaseModel):
    National_ID: Optional[List[NationalIDType]] = Field(None, min_items=0)
    Government_ID: Optional[List[GovernmentIDType]] = Field(None, min_items=0)
    Visa_ID: Optional[List[VisaIDType]] = Field(None, min_items=0)
    Passport_ID: Optional[List[PassportIDType]] = Field(None, min_items=0)
    License_ID: Optional[List[LicenseIDType]] = Field(None, min_items=0)
    Custom_ID: Optional[List[CustomIDType]] = Field(None, min_items=0)


class AddressLineInformationDataType(BaseModel):
    Value: Optional[str] = None
    Descriptor: Optional[str] = None
    Type: Optional[str] = None


class SubmunicipalityInformationDataType(BaseModel):
    Value: Optional[str] = None
    Address_Component_Name: Optional[str] = None
    Type: Optional[str] = None


class SubregionInformationDataType(BaseModel):
    Value: Optional[str] = None
    Descriptor: Optional[str] = None
    Type: Optional[str] = None


class CommunicationUsageTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CommunicationUsageTypeObjectType(BaseModel):
    ID: Optional[List[CommunicationUsageTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CommunicationUsageTypeDataType(BaseModel):
    Type_Reference: CommunicationUsageTypeObjectType
    Primary: Optional[bool] = None


class CommunicationUsageBehaviorObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CommunicationUsageBehaviorObjectType(BaseModel):
    ID: Optional[List[CommunicationUsageBehaviorObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class CommunicationUsageBehaviorTenantedObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CommunicationUsageBehaviorTenantedObjectType(BaseModel):
    ID: Optional[List[CommunicationUsageBehaviorTenantedObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class CommunicationMethodUsageInformationDataType(BaseModel):
    Type_Data: List[CommunicationUsageTypeDataType] = Field(..., min_items=1)
    Use_For_Reference: Optional[List[CommunicationUsageBehaviorObjectType]] = Field(
        None, min_items=0
    )
    Use_For_Tenanted_Reference: Optional[
        List[CommunicationUsageBehaviorTenantedObjectType]
    ] = Field(None, min_items=0)
    Comments: Optional[str] = None
    Public: Optional[bool] = None


class AddressReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AddressReferenceObjectType(BaseModel):
    ID: Optional[List[AddressReferenceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AddressInformationDataType(BaseModel):
    Country_Reference: Optional[CountryObjectType] = None
    Last_Modified: Optional[datetime] = None
    Address_Line_Data: Optional[List[AddressLineInformationDataType]] = Field(
        None, min_items=0
    )
    Municipality: Optional[str] = None
    Country_City_Reference: Optional[CountryCityObjectType] = None
    Submunicipality_Data: Optional[List[SubmunicipalityInformationDataType]] = Field(
        None, min_items=0
    )
    Country_Region_Reference: Optional[CountryRegionObjectType] = None
    Country_Region_Descriptor: Optional[str] = None
    Subregion_Data: Optional[List[SubregionInformationDataType]] = Field(
        None, min_items=0
    )
    Postal_Code: Optional[str] = None
    Usage_Data: Optional[List[CommunicationMethodUsageInformationDataType]] = Field(
        None, min_items=0
    )
    Number_of_Days: Optional[float] = None
    Municipality_Local: Optional[str] = None
    Address_Reference: Optional[AddressReferenceObjectType] = None
    Address_ID: Optional[str] = None
    Formatted_Address: Optional[str] = None
    Address_Format_Type: Optional[str] = None
    Defaulted_Business_Site_Address: Optional[bool] = None
    Delete: Optional[bool] = None
    Do_Not_Replace_All: Optional[bool] = None
    Effective_Date: Optional[date] = None


class PhoneDeviceTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PhoneDeviceTypeObjectType(BaseModel):
    ID: Optional[List[PhoneDeviceTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PhoneReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PhoneReferenceObjectType(BaseModel):
    ID: Optional[List[PhoneReferenceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PhoneInformationDataType(BaseModel):
    Country_ISO_Code: Optional[str] = None
    International_Phone_Code: Optional[str] = None
    Phone_Number: Optional[str] = None
    Phone_Extension: Optional[str] = None
    Phone_Device_Type_Reference: Optional[PhoneDeviceTypeObjectType] = None
    Usage_Data: Optional[List[CommunicationMethodUsageInformationDataType]] = Field(
        None, min_items=0
    )
    Phone_Reference: Optional[PhoneReferenceObjectType] = None
    ID: Optional[str] = None
    Area_Code: Optional[str] = None
    Tenant_Formatted_Phone: Optional[str] = None
    International_Formatted_Phone: Optional[str] = None
    Phone_Number_Without_Area_Code: Optional[str] = None
    National_Formatted_Phone: Optional[str] = None
    E164_Formatted_Phone: Optional[str] = None
    Workday_Traditional_Formatted_Phone: Optional[str] = None
    Delete: Optional[bool] = None
    Do_Not_Replace_All: Optional[bool] = None


class EmailReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmailReferenceObjectType(BaseModel):
    ID: Optional[List[EmailReferenceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmailAddressInformationDataType(BaseModel):
    Email_Address: Optional[str] = None
    Email_Comment: Optional[str] = None
    Usage_Data: Optional[List[CommunicationMethodUsageInformationDataType]] = Field(
        None, min_items=0
    )
    Email_Reference: Optional[EmailReferenceObjectType] = None
    ID: Optional[str] = None
    Delete: Optional[bool] = None
    Do_Not_Replace_All: Optional[bool] = None


class InstantMessengerTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class InstantMessengerTypeObjectType(BaseModel):
    ID: Optional[List[InstantMessengerTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class InstantMessengerReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class InstantMessengerReferenceObjectType(BaseModel):
    ID: Optional[List[InstantMessengerReferenceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class InstantMessengerInformationDataType(BaseModel):
    Instant_Messenger_Address: Optional[str] = None
    Instant_Messenger_Type_Reference: Optional[InstantMessengerTypeObjectType] = None
    Instant_Messenger_Comment: Optional[str] = None
    Usage_Data: Optional[List[CommunicationMethodUsageInformationDataType]] = Field(
        None, min_items=0
    )
    Instant_Messenger_Reference: Optional[InstantMessengerReferenceObjectType] = None
    ID: Optional[str] = None
    Delete: Optional[bool] = None
    Do_Not_Replace_All: Optional[bool] = None


class WebAddressReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class WebAddressReferenceObjectType(BaseModel):
    ID: Optional[List[WebAddressReferenceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class WebAddressInformationDataType(BaseModel):
    Web_Address: Optional[str] = None
    Web_Address_Comment: Optional[str] = None
    Usage_Data: Optional[List[CommunicationMethodUsageInformationDataType]] = Field(
        None, min_items=0
    )
    Web_Address_Reference: Optional[WebAddressReferenceObjectType] = None
    ID: Optional[str] = None
    Delete: Optional[bool] = None
    Do_Not_Replace_All: Optional[bool] = None


class ContactInformationDataType(BaseModel):
    Address_Data: Optional[List[AddressInformationDataType]] = Field(None, min_items=0)
    Phone_Data: Optional[List[PhoneInformationDataType]] = Field(None, min_items=0)
    Email_Address_Data: Optional[List[EmailAddressInformationDataType]] = Field(
        None, min_items=0
    )
    Instant_Messenger_Data: Optional[List[InstantMessengerInformationDataType]] = Field(
        None, min_items=0
    )
    Web_Address_Data: Optional[List[WebAddressInformationDataType]] = Field(
        None, min_items=0
    )


class PersonalInformationDataType(BaseModel):
    Universal_ID: Optional[str] = None
    Name_Data: Optional[PersonNameDataType] = None
    Personal_Information_Data: Optional[
        List[PersonalInformationCommonDataType]
    ] = Field(None, min_items=0)
    Identification_Data: Optional[PersonIdentificationDataType] = None
    Contact_Data: Optional[ContactInformationDataType] = None
    Tobacco_Use: Optional[bool] = None


class JobHistoryQualificationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class JobHistoryQualificationObjectType(BaseModel):
    ID: Optional[List[JobHistoryQualificationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobHistoryCompanyObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class JobHistoryCompanyObjectType(BaseModel):
    ID: Optional[List[JobHistoryCompanyObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobHistoryAchievementDataType(BaseModel):
    Job_History_ID: Optional[str] = None
    Remove_Job_History: Optional[bool] = None
    Job_Title: Optional[str] = None
    Company: Optional[str] = None
    Job_History_Company_Reference: Optional[JobHistoryCompanyObjectType] = None
    Start_Date: Optional[date] = None
    End_Date: Optional[date] = None
    Responsibilities_and_Achievements: Optional[str] = None
    Location: Optional[str] = None
    Job_Reference: Optional[str] = None
    Contact: Optional[str] = None


class JobHistoryType(BaseModel):
    Job_History_Reference: Optional[JobHistoryQualificationObjectType] = None
    Job_History_Data: List[JobHistoryAchievementDataType] = Field(..., min_items=1)


class ProficiencyRatingBehaviorObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ProficiencyRatingBehaviorObjectType(BaseModel):
    ID: Optional[List[ProficiencyRatingBehaviorObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CompetencyAchievementDataV10Type(BaseModel):
    Competency_Level_Behavior_Reference: Optional[
        ProficiencyRatingBehaviorObjectType
    ] = None
    Competency_Level_Behavior_Descriptor: Optional[str] = None
    Assessment_Comment: Optional[str] = None
    Assessed_On: Optional[date] = None
    Assessed_By_Person_Reference: Optional[RoleObjectType] = None
    Assessed_By_Worker_Descriptor: Optional[str] = None
    Competency_Reference: CompetencyObjectType
    Competency_Descriptor: Optional[str] = None


class CertificationQualificationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CertificationQualificationObjectType(BaseModel):
    ID: Optional[List[CertificationQualificationObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class SpecialtyAchievementDataWithDatesType(BaseModel):
    Specialty_Reference: Optional[SpecialtyParentObjectType] = None
    Start_Date: Optional[date] = None
    End_Date: Optional[date] = None
    Subspecialty_Reference: Optional[List[SpecialtyChildObjectType]] = Field(
        None, min_items=0
    )


class CertificationAttachmentDataType(BaseModel):
    File_Name: str
    Comment: Optional[str] = None
    File: Optional[List[int]] = None
    Document_Category_Reference: DocumentCategoryAllObjectType
    Content_Type: Optional[str] = None


class CertificationAchievementDataType(BaseModel):
    Certification_ID: Optional[str] = None
    Remove_Certification: Optional[bool] = None
    Certification_Reference: Optional[CertificationObjectType] = None
    Country_Reference: Optional[CountryObjectType] = None
    Certification_Name: Optional[str] = None
    Issuer: Optional[str] = None
    Certification_Number: Optional[str] = None
    Issued_Date: Optional[date] = None
    Expiration_Date: Optional[date] = None
    Examination_Score: Optional[str] = None
    Examination_Date: Optional[date] = None
    Specialty_Achievement_Data: Optional[
        List[SpecialtyAchievementDataWithDatesType]
    ] = Field(None, min_items=0)
    Worker_Document_Data: Optional[List[CertificationAttachmentDataType]] = Field(
        None, min_items=0
    )


class CertificationAchievementType(BaseModel):
    Certification_Reference: Optional[CertificationQualificationObjectType] = None
    Certification_Data: List[CertificationAchievementDataType] = Field(..., min_items=1)


class TrainingObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class TrainingObjectType(BaseModel):
    ID: Optional[List[TrainingObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class TrainingAchievementDataType(BaseModel):
    Training_ID: Optional[str] = None
    Remove_Training: Optional[bool] = None
    Training: Optional[str] = None
    Description: Optional[str] = None
    Training_Type_Reference: Optional[TrainingTypeObjectType] = None
    Completion_Date: Optional[date] = None
    Training_Duration: Optional[str] = None


class TrainingType(BaseModel):
    Training_Reference: Optional[TrainingObjectType] = None
    Training_Data: Optional[List[TrainingAchievementDataType]] = Field(
        None, min_items=0
    )


class AwardObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AwardObjectType(BaseModel):
    ID: Optional[List[AwardObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AwardAndActivityTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AwardAndActivityTypeObjectType(BaseModel):
    ID: Optional[List[AwardAndActivityTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AwardAndActivityAchievementDataType(BaseModel):
    Award_and_Activity_ID: Optional[str] = None
    Remove_Award_and_Activity: Optional[bool] = None
    Award_and_Activity_Type_Reference: Optional[AwardAndActivityTypeObjectType] = None
    Title: Optional[str] = None
    Sponsor_Issuer: Optional[str] = None
    Start_Date: Optional[date] = None
    End_Date: Optional[date] = None
    Description: Optional[str] = None
    URL: Optional[str] = None
    Related_Position_Reference: Optional[PositionElementObjectType] = None


class AwardAndActivityType(BaseModel):
    Award_and_Activity_Reference: Optional[AwardObjectType] = None
    Award_and_Activity_Data: Optional[AwardAndActivityAchievementDataType] = None


class ProfessionalAffiliationQualificationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ProfessionalAffiliationQualificationObjectType(BaseModel):
    ID: Optional[List[ProfessionalAffiliationQualificationObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class ProfessionalAffiliationReferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ProfessionalAffiliationReferenceObjectType(BaseModel):
    ID: Optional[List[ProfessionalAffiliationReferenceObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class ProfessionalAffiliationTypeAllObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ProfessionalAffiliationTypeAllObjectType(BaseModel):
    ID: Optional[List[ProfessionalAffiliationTypeAllObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class ProfessionalAffiliationRelationshipTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ProfessionalAffiliationRelationshipTypeObjectType(BaseModel):
    ID: Optional[List[ProfessionalAffiliationRelationshipTypeObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class ProfessionalAffiliationOrganizationDataType(BaseModel):
    Professional_Affiliation_ID: Optional[str] = None
    Remove_Professional_Affiliation: Optional[bool] = None
    Professional_Affiliation_Reference: Optional[
        ProfessionalAffiliationReferenceObjectType
    ] = None
    Professional_Affiliation: Optional[str] = None
    Professional_Affiliation_Type_Reference: Optional[
        ProfessionalAffiliationTypeAllObjectType
    ] = None
    Affiliation: Optional[str] = None
    Professional_Affiliation_Relationship_Type_Reference: Optional[
        ProfessionalAffiliationRelationshipTypeObjectType
    ] = None
    Begin_Date: Optional[date] = None
    End_Date: Optional[date] = None
    Contact_Information_Data: Optional[List[ContactInformationDataType]] = Field(
        None, min_items=0
    )


class ProfessionalAffiliationSkillType(BaseModel):
    Organization_Professional_Affiliation_Reference: Optional[
        ProfessionalAffiliationQualificationObjectType
    ] = None
    Organization_Professional_Affiliation_Data: Optional[
        List[ProfessionalAffiliationOrganizationDataType]
    ] = Field(None, min_items=0)


class EducationQualificationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EducationQualificationObjectType(BaseModel):
    ID: Optional[List[EducationQualificationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SchoolObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SchoolObjectType(BaseModel):
    ID: Optional[List[SchoolObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SchoolTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SchoolTypeObjectType(BaseModel):
    ID: Optional[List[SchoolTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DegreeCompletedObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DegreeCompletedObjectType(BaseModel):
    ID: Optional[List[DegreeCompletedObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EducationAttachmentDataType(BaseModel):
    File_Name: str
    Comment: Optional[str] = None
    File: Optional[List[int]] = None
    Document_Category_Reference: DocumentCategoryAllObjectType


class EducationAchievementDataType(BaseModel):
    Education_ID: Optional[str] = None
    Remove_Education: Optional[bool] = None
    Country_Reference: Optional[CountryObjectType] = None
    School_Reference: Optional[SchoolObjectType] = None
    School_Name: Optional[str] = None
    School_Type_Reference: Optional[SchoolTypeObjectType] = None
    Location: Optional[str] = None
    Degree_Reference: Optional[DegreeObjectType] = None
    Degree_Completed_Reference: Optional[DegreeCompletedObjectType] = None
    Date_Degree_Received: Optional[date] = None
    Field_Of_Study_Reference: Optional[FieldOfStudyObjectType] = None
    Grade_Average: Optional[str] = None
    First_Year_Attended: Optional[date] = None
    Last_Year_Attended: Optional[date] = None
    Is_Highest_Level_of_Education: Optional[bool] = None
    First_Day_Attended: Optional[date] = None
    Last_Day_Attended: Optional[date] = None
    Education_Attachment_Data: Optional[List[EducationAttachmentDataType]] = Field(
        None, min_items=0
    )


class EducationType(BaseModel):
    Education_Reference: Optional[EducationQualificationObjectType] = None
    Education_Data: Optional[List[EducationAchievementDataType]] = Field(
        None, min_items=0
    )


class WorkExperienceDataType(BaseModel):
    Experience_Reference: Optional[WorkExperienceQualificationObjectType] = None
    Remove_Experience: Optional[bool] = None
    Experience_Rating_Reference: Optional[WorkExperienceRatingObjectType] = None
    Experience_Comment: Optional[str] = None


class LanguageAbilityDataType(BaseModel):
    Language_Proficiency_Reference: Optional[LanguageProficiencyObjectType] = None
    Language_Ability_Type_Reference: LanguageAbilityTypeObjectType


class LanguageAbilityType(BaseModel):
    Language_Ability_Data: List[LanguageAbilityDataType] = Field(..., min_items=1)


class LanguageAchievementDataType(BaseModel):
    Language_Reference: LanguageObjectType
    Remove_Language: Optional[bool] = None
    Native_Language: Optional[bool] = None
    Language_Ability: Optional[List[LanguageAbilityType]] = Field(None, min_items=0)
    Assessed_On: Optional[date] = None
    Note: Optional[str] = None
    Assessed_by_Worker_Reference: Optional[RoleObjectType] = None


class InternalProjectExperienceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class InternalProjectExperienceObjectType(BaseModel):
    ID: Optional[List[InternalProjectExperienceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class InternalProjectExperienceDataType(BaseModel):
    Internal_Project_Experience_ID: Optional[str] = None
    Remove_Internal_Project_Experience: Optional[bool] = None
    Internal_Project: Optional[str] = None
    Description: Optional[str] = None
    Start_Date: Optional[date] = None
    End_Date: Optional[date] = None
    Project_Leader: Optional[str] = None


class InternalProjectExperienceType(BaseModel):
    Internal_Project_Experience_Reference: Optional[
        InternalProjectExperienceObjectType
    ] = None
    Internal_Project_Experience_Data: Optional[
        List[InternalProjectExperienceDataType]
    ] = Field(None, min_items=0)


class PersonQualificationDataType(BaseModel):
    External_Job_History: Optional[List[JobHistoryType]] = Field(None, min_items=0)
    Competency: Optional[List[CompetencyAchievementDataV10Type]] = Field(
        None, min_items=0
    )
    Certification: Optional[List[CertificationAchievementType]] = Field(
        None, min_items=0
    )
    Training: Optional[List[TrainingType]] = Field(None, min_items=0)
    Award_and_Activity: Optional[List[AwardAndActivityType]] = Field(None, min_items=0)
    Organization_Membership: Optional[List[ProfessionalAffiliationSkillType]] = Field(
        None, min_items=0
    )
    Education: Optional[List[EducationType]] = Field(None, min_items=0)
    Work_Experience: Optional[List[WorkExperienceDataType]] = Field(None, min_items=0)
    Language: Optional[List[LanguageAchievementDataType]] = Field(None, min_items=0)
    Internal_Project_Experience: Optional[List[InternalProjectExperienceType]] = Field(
        None, min_items=0
    )


class ApplicantSourceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ApplicantSourceObjectType(BaseModel):
    ID: Optional[List[ApplicantSourceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PositionGroupObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PositionGroupObjectType(BaseModel):
    ID: Optional[List[PositionGroupObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class RecruitingDataType(BaseModel):
    Applicant_Entered_Date: Optional[date] = None
    Applicant_Comments: Optional[str] = None
    Eligible_For_Hire_Reference: Optional[CommonYesNoObjectType] = None
    Eligible_for_Rehire_Comments: Optional[str] = None
    Applicant_Has_Marked_as_No_Show_Reference: Optional[
        CommonBooleanEnumerationObjectType
    ] = None
    Applicant_Source_Reference: Optional[ApplicantSourceObjectType] = None
    Referred_by_Worker_Reference: Optional[List[WorkerObjectType]] = Field(
        None, min_items=0
    )
    Positions_Considered_for_Reference: Optional[List[PositionGroupObjectType]] = Field(
        None, min_items=0
    )


class ApplicantResumeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ApplicantResumeObjectType(BaseModel):
    ID: Optional[List[ApplicantResumeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AttachmentDataWWSType(BaseModel):
    File_ID: Optional[str] = None
    File: Optional[List[int]] = None
    FileName: Optional[str] = None
    Comments: Optional[str] = None


class PreHireResumeDetailDataType(BaseModel):
    Resume_Reference: Optional[ApplicantResumeObjectType] = None
    Resume_Data: Optional[AttachmentDataWWSType] = None


class PreHireResumeDataType(BaseModel):
    Resume: Optional[List[PreHireResumeDetailDataType]] = Field(None, min_items=0)


class BackgroundCheckStatusObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class BackgroundCheckStatusObjectType(BaseModel):
    ID: Optional[List[BackgroundCheckStatusObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class BackgroundCheckOverallStatusDataType(BaseModel):
    Status_Date: date
    Status_Reference: BackgroundCheckStatusObjectType
    Status_Comment: Optional[str] = None


class IDType(BaseModel):
    Value: Optional[str] = None
    System_ID: Optional[str] = None


class ExternalIntegrationIDDataType(BaseModel):
    ID: List[IDType] = Field(..., min_items=1)


class IntegrationDocumentFieldObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str
    parent_id: Optional[str] = None
    parent_type: Optional[str] = None


class IntegrationDocumentFieldObjectType(BaseModel):
    ID: Optional[List[IntegrationDocumentFieldObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DocumentFieldResultDataType(BaseModel):
    Field_Reference: Optional[IntegrationDocumentFieldObjectType] = None
    Value: Optional[str] = None


class PreHireDataWWSType(BaseModel):
    Applicant_ID: Optional[str] = None
    Personal_Data: Optional[PersonalInformationDataType] = None
    Qualification_Data: Optional[PersonQualificationDataType] = None
    Recruiting_Data: Optional[RecruitingDataType] = None
    Resume_Data: Optional[PreHireResumeDataType] = None
    Background_Check_Data: Optional[List[BackgroundCheckOverallStatusDataType]] = Field(
        None, min_items=0
    )
    External_Integration_ID_Data: Optional[ExternalIntegrationIDDataType] = None
    Document_Field_Result_Data: Optional[List[DocumentFieldResultDataType]] = Field(
        None, min_items=0
    )


class ApplicantInformationHVType(BaseModel):
    Applicant_Reference: Optional[ApplicantObjectType] = None
    Applicant_Data: Optional[List[PreHireDataWWSType]] = Field(None, min_items=0)


class ImportApplicantRequestType(BaseModel):
    Applicant: Optional[List[ApplicantInformationHVType]] = Field(None, min_items=0)
    version: Optional[str] = None


class ExceptionDataType(BaseModel):
    Classification: Optional[str] = None
    Message: Optional[str] = None


class ApplicationInstanceExceptionsDataType(BaseModel):
    Exception_Data: Optional[List[ExceptionDataType]] = Field(None, min_items=0)


class ApplicationInstanceRelatedExceptionsDataType(BaseModel):
    Exceptions_Data: Optional[List[ApplicationInstanceExceptionsDataType]] = Field(
        None, min_items=0
    )


class PutApplicantResponseType(BaseModel):
    Applicant_Reference: Optional[ApplicantObjectType] = None
    Exceptions_Response_Data: Optional[
        List[ApplicationInstanceRelatedExceptionsDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class CitizenshipStatusRequestReferencesType(BaseModel):
    Citizenship_Status_Reference: List[CitizenshipStatusObjectType] = Field(
        ..., min_items=1
    )


class GetCitizenshipStatusesRequestType(BaseModel):
    Request_References: Optional[CitizenshipStatusRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class CreditableServiceTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CreditableServiceTypeObjectType(BaseModel):
    ID: Optional[List[CreditableServiceTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CreditableServiceDataType(BaseModel):
    Creditable_Service_Type_Reference: CreditableServiceTypeObjectType
    Years: Optional[float] = None
    Months: Optional[float] = None
    Days: Optional[float] = None
    Details: Optional[str] = None


class CreditableServiceChangeDataType(BaseModel):
    Employee_Reference: EmployeeObjectType
    Effective_Date: date
    Creditable_Service_Data: List[CreditableServiceDataType] = Field(..., min_items=1)


class EditCreditableServiceRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Creditable_Service_Change_Data: Optional[CreditableServiceChangeDataType] = None
    version: Optional[str] = None


class JobFamilyBaseObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class JobFamilyBaseObjectType(BaseModel):
    ID: Optional[List[JobFamilyBaseObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmploymentSystemObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmploymentSystemObjectType(BaseModel):
    ID: Optional[List[EmploymentSystemObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class RetirementSpecialPopulationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RetirementSpecialPopulationObjectType(BaseModel):
    ID: Optional[List[RetirementSpecialPopulationObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class SensitivityAndRiskObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SensitivityAndRiskObjectType(BaseModel):
    ID: Optional[List[SensitivityAndRiskObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CybersecurityAreaObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CybersecurityAreaObjectType(BaseModel):
    ID: Optional[List[CybersecurityAreaObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SecurityClearanceLevelObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SecurityClearanceLevelObjectType(BaseModel):
    ID: Optional[List[SecurityClearanceLevelObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PositionGroupRestrictionDataType(BaseModel):
    Availability_Date: Optional[date] = None
    Earliest_Hire_Date: Optional[date] = None
    Job_Family_Reference: Optional[List[JobFamilyBaseObjectType]] = Field(
        None, min_items=0
    )
    Job_Profile_Reference: Optional[List[JobProfileObjectType]] = Field(
        None, min_items=0
    )
    Location_Reference: Optional[List[LocationObjectType]] = Field(None, min_items=0)
    Worker_Type_Reference: Optional[WorkerTypeObjectType] = None
    Time_Type_Reference: Optional[PositionTimeTypeObjectType] = None
    Position_Worker_Type_Reference: Optional[
        List[PositionWorkerTypeObjectType]
    ] = Field(None, min_items=0)
    Employment_System_Reference: Optional[EmploymentSystemObjectType] = None
    Retirement_Special_Population_Reference: Optional[
        RetirementSpecialPopulationObjectType
    ] = None
    Sensitivity_and_Risk_Reference: Optional[SensitivityAndRiskObjectType] = None
    Cybersecurity_Area_Reference: Optional[CybersecurityAreaObjectType] = None
    Security_Clearance_Level_Reference: Optional[
        SecurityClearanceLevelObjectType
    ] = None
    Time_Type_Subtype_Reference: Optional[TimeTypeSubtypeObjectType] = None


class CompensatableDefaultGuidelinesDataType(BaseModel):
    Compensation_Package_Reference: Optional[CompensationPackageObjectType] = None
    Compensation_Grade_Reference: Optional[CompensationGradeObjectType] = None
    Compensation_Grade_Profile_Reference: Optional[
        CompensationGradeProfileObjectType
    ] = None
    Compensation_Step_Reference: Optional[CompensationStepObjectType] = None


class ProposedBasePayPlanAssignmentDataType(BaseModel):
    Pay_Plan_Reference: Optional[SalaryPayPlanObjectType] = None
    Amount: float
    Percent_Change: float
    Amount_Change: float
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Expected_End_Date: Optional[date] = None
    Actual_End_Date: Optional[date] = None


class ProposedBasePayPlanAssignmentContainerDataType(BaseModel):
    Pay_Plan_Sub_Data: Optional[List[ProposedBasePayPlanAssignmentDataType]] = Field(
        None, min_items=0
    )
    Replace: Optional[bool] = None


class CompensationDefaultDataType(BaseModel):
    Primary_Compensation_Basis: Optional[float] = None
    Primary_Compensation_Basis_Amount_Change: Optional[float] = None
    Primary_Compensation_Basis_Percent_Change: Optional[float] = None
    Guidelines_Data: Optional[CompensatableDefaultGuidelinesDataType] = None
    Pay_Plan_Data: Optional[ProposedBasePayPlanAssignmentContainerDataType] = None
    Unit_Salary_Plan_Data: Optional[
        ProposedSalaryUnitPlanAssignmentContainerDataType
    ] = None
    Allowance_Plan_NonUnit_Based_Data: Optional[
        ProposedAllowancePlanAssignmentContainerDataType
    ] = None
    Allowance_Plan_Unit_Based_Data: Optional[
        ProposedAllowanceUnitPlanAssignmentContainerDataType
    ] = None
    Bonus_Plan_Data: Optional[ProposedBonusPlanAssignmentContainerDataType] = None
    Merit_Plan_Data: Optional[ProposedMeritPlanAssignmentContainerDataType] = None
    Commission_Plan_Data: Optional[
        ProposedCommissionPlanAssignmentContainerDataType
    ] = None
    Stock_Plan_Data: Optional[ProposedStockPlanAssignmentContainerDataType] = None
    Period_Salary_Plan_Data: Optional[
        ProposedPeriodSalaryPlanAssignmentContainerDataType
    ] = None
    Calculated_Plan_Data: Optional[
        ProposedCalculatedPlanAssignmentContainerDataType
    ] = None


class RequestCompensationDefaultSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Compensation_Default_Data: Optional[CompensationDefaultDataType] = None


class EditHiringRestrictionsDataType(BaseModel):
    Supervisory_Organization_Reference: SupervisoryOrganizationObjectType
    Hiring_Restrictions_Edit_Reason_Reference: Optional[
        GeneralEventSubcategoryObjectType
    ] = None
    Position_Group_Restrictions_Data: PositionGroupRestrictionDataType
    Request_Default_Compensation_Sub_Process: Optional[
        RequestCompensationDefaultSubBusinessProcessType
    ] = None


class EditHiringRestrictionsRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Edit_Hiring_Restrictions_Data: EditHiringRestrictionsDataType
    version: Optional[str] = None


class StudentEmploymentEligibilityRuleSetRequestReferencesType(BaseModel):
    Student_Employment_Eligibility_Rule_Set_Request_Reference: List[
        StudentEmploymentEligibilityRuleSetObjectType
    ] = Field(..., min_items=1)


class StudentEmploymentEligibilityRuleSetResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None


class StudentEmploymentEligibilityRuleSetType(BaseModel):
    Student_Employment_Eligibility_Rule_Set_Reference: Optional[
        StudentEmploymentEligibilityRuleSetObjectType
    ] = None
    Student_Employment_Eligibility_Rule_Set_Data: Optional[
        List[StudentEmploymentEligibilityRuleSetDataType]
    ] = Field(None, min_items=0)


class StudentEmploymentEligibilityRuleSetResponseDataType(BaseModel):
    Student_Employment_Eligibility_Rule_Set: Optional[
        List[StudentEmploymentEligibilityRuleSetType]
    ] = Field(None, min_items=0)


class GetStudentEmploymentEligibilityRuleSetResponseType(BaseModel):
    Request_Criteria: Optional[
        StudentEmploymentEligibilityRuleSetRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[
        StudentEmploymentEligibilityRuleSetResponseGroupType
    ] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[StudentEmploymentEligibilityRuleSetResponseDataType] = None
    version: Optional[str] = None


class ChangeOrganizationAssignmentsDataType(BaseModel):
    Position_Reference: StaffingInterfaceObjectType
    Worker_Reference: Optional[WorkerObjectType] = None
    Position_Organization_Assignments_Data: AssignPositionOrganizationEventDataType
    Check_Position_Budget_Sub_Process: Optional[
        CheckPositionBudgetSubBusinessProcessType
    ] = None
    Effective_Date: Optional[date] = None


class ChangeOrganizationAssignmentsRequestHVType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Change_Organization_Assignments_Data: ChangeOrganizationAssignmentsDataType


class ImportChangeOrganizationAssignmentRequestType(BaseModel):
    Change_Organizaton_Assignments_HV: Optional[
        List[ChangeOrganizationAssignmentsRequestHVType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class EditServiceDatesBusinessProcessDataType(BaseModel):
    Worker_Reference: WorkerObjectType
    Edit_Service_Dates_Event_Data: EditServiceDatesEventDataType


class EditServiceDatesRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Edit_Service_Dates_Data: EditServiceDatesBusinessProcessDataType
    version: Optional[str] = None


class ProbationPeriodRulesTableObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ProbationPeriodRulesTableObjectType(BaseModel):
    ID: Optional[List[ProbationPeriodRulesTableObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProbationPeriodsForCountryRequestReferencesType(BaseModel):
    Maintain_Probation_Periods_For_Country_Reference: List[
        ProbationPeriodRulesTableObjectType
    ] = Field(..., min_items=1)


class ProbationPeriodsForCountryRequestCriteriaType(BaseModel):
    Country_Reference: Optional[List[CountryObjectType]] = Field(None, min_items=0)


class MaximumProbationPeriodDataType(BaseModel):
    Maximum_Probation_Duration: Optional[float] = None
    Maximum_Probation_Unit_Reference: Optional[DateAndTimeUnitObjectType] = None


class ReviewProbationPeriodDataType(BaseModel):
    Review_Probation_Duration: Optional[float] = None
    Review_Probation_Unit_Reference: Optional[DateAndTimeUnitObjectType] = None


class ProbationPeriodForCountryDataType(BaseModel):
    ID: Optional[str] = None
    Order: Optional[str] = None
    Probation_Period_Eligibility_Rule_Reference: ConditionRuleObjectType
    Probation_Period_Duration: Optional[float] = None
    Probation_Period_Unit_Reference: Optional[DateAndTimeUnitObjectType] = None
    Maximum_Probation_Period_Data: Optional[
        List[MaximumProbationPeriodDataType]
    ] = Field(None, min_items=0)
    Review_Probation_Period_Data: Optional[List[ReviewProbationPeriodDataType]] = Field(
        None, min_items=0
    )
    Inactive: Optional[bool] = None


class MaintainProbationPeriodsForCountryDataType(BaseModel):
    Country_Reference: CountryObjectType
    Probation_Period_For_Country_Data: Optional[
        List[ProbationPeriodForCountryDataType]
    ] = Field(None, min_items=0)


class ProbationPeriodsForCountryGetDataType(BaseModel):
    Maintain_Probation_Periods_For_Country_Reference: Optional[
        ProbationPeriodRulesTableObjectType
    ] = None
    Maintain_Probation_Periods_For_Country_Data: Optional[
        MaintainProbationPeriodsForCountryDataType
    ] = None


class ProbationPeriodsForCountryResponseDataType(BaseModel):
    Maintain_Probation_Periods_For_Country: Optional[
        List[ProbationPeriodsForCountryGetDataType]
    ] = Field(None, min_items=0)


class GetMaintainProbationPeriodsForCountryResponseType(BaseModel):
    Request_References: Optional[ProbationPeriodsForCountryRequestReferencesType] = None
    Request_Criteria: Optional[ProbationPeriodsForCountryRequestCriteriaType] = None
    Response_Data: Optional[ProbationPeriodsForCountryResponseDataType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    version: Optional[str] = None


class ConditionRuleCategoryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ConditionRuleCategoryObjectType(BaseModel):
    ID: Optional[List[ConditionRuleCategoryObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AndOrOperatorsObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AndOrOperatorsObjectType(BaseModel):
    ID: Optional[List[AndOrOperatorsObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class RelationalOperatorObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RelationalOperatorObjectType(BaseModel):
    ID: Optional[List[RelationalOperatorObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ConditionEntryOptionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ConditionEntryOptionObjectType(BaseModel):
    ID: Optional[List[ConditionEntryOptionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ExternalFieldObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ExternalFieldObjectType(BaseModel):
    ID: Optional[List[ExternalFieldObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class TimeZoneObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class TimeZoneObjectType(BaseModel):
    ID: Optional[List[TimeZoneObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class FilterDateTimeZoneDataType(BaseModel):
    Filter_DateTime: Optional[datetime] = None
    Filter_TimeZone_Reference: Optional[TimeZoneObjectType] = None


class InstanceIDType(BaseModel):
    Value: Optional[str] = None
    parent_id: Optional[str] = None
    parent_type: Optional[str] = None
    type: Optional[str] = None


class InstanceObjectType(BaseModel):
    ID: Optional[List[InstanceIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ConditionItemDataWWSType(BaseModel):
    Order: str
    And_Or_Operator_Reference: AndOrOperatorsObjectType
    Open_Parentheses: Optional[str] = None
    Relational_Operator_Reference: RelationalOperatorObjectType
    Condition_Entry_Option_Reference: Optional[ConditionEntryOptionObjectType] = None
    Close_Parentheses: Optional[str] = None
    Source_External_Field_Reference: Optional[ExternalFieldObjectType] = None
    Source_Condition_Rule_Reference: Optional[ConditionRuleObjectType] = None
    Filter_Boolean: Optional[bool] = None
    Filter_Date: Optional[date] = None
    Filter_DateTimeZone: Optional[FilterDateTimeZoneDataType] = None
    Filter_Time: Optional[time] = None
    Filter_Number: Optional[float] = None
    Filter_Text: Optional[str] = None
    Target_External_Field_Reference: Optional[ExternalFieldObjectType] = None
    Target_Instance_Reference: Optional[List[InstanceObjectType]] = Field(
        None, min_items=0
    )


class ConditionRuleDataWWSType(BaseModel):
    Condition_Rule_ID: Optional[str] = None
    Rule_Description: str
    Comment: Optional[str] = None
    Condition_Rule_Category_Reference: Optional[
        List[ConditionRuleCategoryObjectType]
    ] = Field(None, min_items=0)
    Condition_Item_Data: List[ConditionItemDataWWSType] = Field(..., min_items=1)
    Countries_Reference: Optional[List[CountryObjectType]] = Field(None, min_items=0)


class JobOverlapRoutingExclusionRuleDataType(BaseModel):
    Condition_Rule_Data: Optional[List[ConditionRuleDataWWSType]] = Field(
        None, min_items=0
    )


class PutJobOverlapRoutingExclusionRuleRequestType(BaseModel):
    Job_Overlap_Routing_Exclusion_Rule_Reference: Optional[
        ConditionRuleObjectType
    ] = None
    Job_Overlap_Routing_Exclusion_Rule_Data: Optional[
        JobOverlapRoutingExclusionRuleDataType
    ] = None
    version: Optional[str] = None


class NoticePeriodsSetupTableObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class NoticePeriodsSetupTableObjectType(BaseModel):
    ID: Optional[List[NoticePeriodsSetupTableObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PutMaintainNoticePeriodsForCountryResponseType(BaseModel):
    Country_Reference: Optional[List[CountryObjectType]] = Field(None, min_items=0)
    Maintain_Notice_Periods_For_Country_Reference: Optional[
        NoticePeriodsSetupTableObjectType
    ] = None
    version: Optional[str] = None


class PositionMatrixOrganizationDetailDataType(BaseModel):
    Effective_Date: date
    Matrix_Organization_Reference: MatrixOrganizationObjectType


class PositionMatrixOrganizationDataType(BaseModel):
    Position_Reference: PositionElementObjectType
    Position_Matrix_Organization_Detail_Data: PositionMatrixOrganizationDetailDataType


class AssignMatrixOrganizationBusinessProcessDataType(BaseModel):
    Worker_Reference: WorkerObjectType
    Position_Matrix_Organization_Data: PositionMatrixOrganizationDataType


class AssignMatrixOrganizationRequestHVType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Assign_Matrix_Organization_Business_Process_Data: AssignMatrixOrganizationBusinessProcessDataType


class ImportAssignMatrixOrganizationRequestType(BaseModel):
    Assign_Matrix_Organization_Information_HV: Optional[
        List[AssignMatrixOrganizationRequestHVType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class PutHireEventProposedWorkerIDResponseType(BaseModel):
    Hire_Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Worker_ID: Optional[str] = None
    version: Optional[str] = None


class EndAdditionalJobSubcategoryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EndAdditionalJobSubcategoryObjectType(BaseModel):
    ID: Optional[List[EndAdditionalJobSubcategoryObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class EndAdditionalJobEventDataType(BaseModel):
    Last_Day_of_Work: date
    Reason_Reference: EndAdditionalJobSubcategoryObjectType
    Pay_Through_Date: Optional[date] = None
    Notify_Employee_By_Date: Optional[date] = None
    Close_Position: Optional[bool] = None
    Job_Overlap_Allowed: Optional[bool] = None


class EndAcademicAppointmentDataType(BaseModel):
    Academic_Appointee_Reference: Optional[AcademicAppointeeEnabledObjectType] = None
    Academic_Appointment_Track_Reference: Optional[
        AcademicAppointmentTrackObjectType
    ] = None
    Reason_Reference: GeneralEventSubcategoryObjectType
    Track_End_Date: date


class EndAcademicAppointmentSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    End_Academic_Appointment_Data: Optional[EndAcademicAppointmentDataType] = None


class EndAdditionalJobDataType(BaseModel):
    Employee_Reference: EmployeeObjectType
    Position_Reference: PositionElementObjectType
    End_Additional_Job_Date: date
    End_Additional_Job_Event_Data: EndAdditionalJobEventDataType
    Assign_Organization_Roles_Sub_Process: Optional[
        AssignOrganizationRolesSubBusinessProcessType
    ] = None
    Create_Job_Requisition_Sub_Process: Optional[
        CreateJobRequisitionSubProcessType
    ] = None
    Check_Position_Budget_Sub_Process: Optional[
        CheckPositionBudgetSubBusinessProcessType
    ] = None
    End_Academic_Appointment_Sub_Process: Optional[
        EndAcademicAppointmentSubBusinessProcessType
    ] = None
    Manage_Union_Membership_Sub_Process: Optional[
        ManageUnionMembershipSubBusinessProcessType
    ] = None
    Switch_Primary_Job_Sub_Process: Optional[SwitchPrimaryJobSubProcessType] = None
    Assign_Roles: Optional[AssignRolesSubProcessType] = None


class EndAdditionalJobRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    End_Additional_Job_Data: EndAdditionalJobDataType


class EndAdditionalJobRequestRootType(EndAdditionalJobRequestType):
    version: Optional[str] = None


class NatureOfActionsSecondaryRequestReferenceType(BaseModel):
    Nature_of_Action_Series_Reference: Optional[
        List[NatureOfActionSeriesObjectType]
    ] = Field(None, min_items=0)


class NatureOfActionsRequestReferencesType(BaseModel):
    Nature_of_Action_Reference: Optional[List[NatureOfActionObjectType]] = Field(
        None, min_items=0
    )
    Nature_of_Actions_Secondary_Request_Reference: Optional[
        List[NatureOfActionsSecondaryRequestReferenceType]
    ] = Field(None, min_items=0)


class GetNatureOfActionsRequestType(BaseModel):
    Request_References: Optional[NatureOfActionsRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class EffectiveDatedWebServiceAdditionalDataType(BaseModel):
    Any: Optional[List[Dict[str, Any]]] = Field(None, min_items=0)


class EditPositionRestrictionsAdditionalDataResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Position_Restrictions_Reference: Optional[PositionGroupObjectType] = None
    Effective_Date: Optional[date] = None
    Additional_Data: Optional[List[EffectiveDatedWebServiceAdditionalDataType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class GlobalStaffingEligibilityRulesRequestReferencesType(BaseModel):
    Global_Staffing_Eligibility_Rule_Reference: Optional[
        List[ConditionRuleObjectType]
    ] = Field(None, min_items=0)


class GetGlobalStaffingEligibilityRulesWithoutDependenciesRequestType(BaseModel):
    Request_References: Optional[
        GlobalStaffingEligibilityRulesRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class NoticePeriodEligibilityRuleRequestReferencesType(BaseModel):
    Notice_Period_Eligibility_Rule_Reference: List[ConditionRuleObjectType] = Field(
        ..., min_items=1
    )


class NoticePeriodEligibilityRuleDataType(BaseModel):
    Condition_Rule_Data: Optional[ConditionRuleDataWWSType] = None


class NoticePeriodEligibilityRuleType(BaseModel):
    Notice_Period_Eligibility_Rule_Reference: Optional[ConditionRuleObjectType] = None
    Notice_Period_Eligibility_Rule_Data: Optional[
        List[NoticePeriodEligibilityRuleDataType]
    ] = Field(None, min_items=0)


class NoticePeriodEligibilityRuleResponseDataType(BaseModel):
    Notice_Period_Eligibility_Rule: Optional[
        List[NoticePeriodEligibilityRuleType]
    ] = Field(None, min_items=0)


class GetNoticePeriodEligibilityRulesWithoutDependenciesResponseType(BaseModel):
    Request_References: Optional[
        NoticePeriodEligibilityRuleRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[NoticePeriodEligibilityRuleResponseDataType] = None
    version: Optional[str] = None


class EditWorkerAdditionalDataResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Worker_Reference: Optional[WorkerObjectType] = None
    Effective_Date: Optional[date] = None
    Additional_Data: Optional[List[EffectiveDatedWebServiceAdditionalDataType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class RemoveMatrixOrganizationDetailDataType(BaseModel):
    Effective_Date: date
    Matrix_Organization_Reference: MatrixOrganizationObjectType


class RemoveMatrixOrganizationPositionDataType(BaseModel):
    Position_Reference: PositionElementObjectType
    Remove_Matrix_Organization_Detail_Data: RemoveMatrixOrganizationDetailDataType


class RemoveMatrixOrganizationBusinessProcessDataType(BaseModel):
    Worker_Reference: WorkerObjectType
    Remove_Matrix_Organization_Position_Data: RemoveMatrixOrganizationPositionDataType


class ImportRemoveMatrixOrganizationRequestHVType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Remove_Matrix_Organization_Business_Process_Data: RemoveMatrixOrganizationBusinessProcessDataType


class ImportRemoveMatrixOrganizationRequestType(BaseModel):
    Remove_Matrix_Organization_Information_HV: Optional[
        List[ImportRemoveMatrixOrganizationRequestHVType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class EditPositonRestrictionResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Position_Reference: Optional[PositionGroupObjectType] = None
    version: Optional[str] = None


class ProbationPeriodEligibilityRuleRequestReferencesType(BaseModel):
    Probation_Period_Eligibility_Rule_Reference: Optional[
        List[ConditionRuleObjectType]
    ] = Field(None, min_items=0)


class ProbationPeriodEligibilityRuleDataType(BaseModel):
    Condition_Rule_Data: Optional[ConditionRuleDataWWSType] = None


class ProbationPeriodEligibilityRuleGetDataType(BaseModel):
    Probation_Period_Eligibility_Rule_Reference: Optional[
        ConditionRuleObjectType
    ] = None
    Probation_Period_Eligibility_Rule_Data: Optional[
        List[ProbationPeriodEligibilityRuleDataType]
    ] = Field(None, min_items=0)


class ProbationPeriodEligibilityRuleResponseDataType(BaseModel):
    Probation_Period_Eligibility_Rule: Optional[
        List[ProbationPeriodEligibilityRuleGetDataType]
    ] = Field(None, min_items=0)


class GetProbationPeriodEligibilityRulesResponseType(BaseModel):
    Request_References: Optional[
        ProbationPeriodEligibilityRuleRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[ProbationPeriodEligibilityRuleResponseDataType] = None
    version: Optional[str] = None


class EmployeeContractObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmployeeContractObjectType(BaseModel):
    ID: Optional[List[EmployeeContractObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmployeeContractCustomObjectDataType(BaseModel):
    Effective_Date: date
    Employee_Contract_Reference: EmployeeContractObjectType
    Business_Object_Additional_Data: EffectiveDatedWebServiceAdditionalDataType


class EditEmployeeContractAdditionalDataRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Employee_Contract_Custom_Object_Data: Optional[
        List[EmployeeContractCustomObjectDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class GetProbationPeriodEligibilityRulesWithoutDependenciesRequestType(BaseModel):
    Request_References: Optional[
        ProbationPeriodEligibilityRuleRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class PutAssignMatrixOrganizationResponseType(BaseModel):
    Matrix_Organization_Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class PositionRequestReferencesType(BaseModel):
    Positions_Reference: List[PositionElementObjectType] = Field(..., min_items=1)
    Skip_Non_Existing_Instances: Optional[bool] = None
    Ignore_Invalid_References: Optional[bool] = None


class EffectiveAndUpdatedDateTimeDataType(BaseModel):
    Updated_From: Optional[datetime] = None
    Updated_Through: Optional[datetime] = None
    Effective_From: Optional[datetime] = None
    Effective_Through: Optional[datetime] = None


class TransactionLogTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class TransactionLogTypeObjectType(BaseModel):
    ID: Optional[List[TransactionLogTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class TransactionTypeReferencesType(BaseModel):
    Transaction_Type_Reference: Optional[List[TransactionLogTypeObjectType]] = Field(
        None, min_items=0
    )


class SubscriberObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SubscriberObjectType(BaseModel):
    ID: Optional[List[SubscriberObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class TransactionLogCriteriaType(BaseModel):
    Transaction_Date_Range_Data: Optional[EffectiveAndUpdatedDateTimeDataType] = None
    Transaction_Type_References: Optional[TransactionTypeReferencesType] = None
    Subscriber_Reference: Optional[SubscriberObjectType] = None


class EventObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EventObjectType(BaseModel):
    ID: Optional[List[EventObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ExternalFieldAndParameterInitializationProviderObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ExternalFieldAndParameterInitializationProviderObjectType(BaseModel):
    ID: Optional[
        List[ExternalFieldAndParameterInitializationProviderObjectIDType]
    ] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class FieldAndParameterCriteriaDataType(BaseModel):
    Provider_Reference: List[
        ExternalFieldAndParameterInitializationProviderObjectType
    ] = Field(..., min_items=1)


class PositionRequestCriteriaType(BaseModel):
    Transaction_Log_Criteria_Data: Optional[List[TransactionLogCriteriaType]] = Field(
        None, min_items=0
    )
    Supervisory_Organization_Reference: Optional[
        List[SupervisoryOrganizationObjectType]
    ] = Field(None, min_items=0)
    Job_Requisition_Reference: Optional[List[JobRequisitionObjectType]] = Field(
        None, min_items=0
    )
    Exclude_Filled_Positions: Optional[bool] = None
    Exclude_NonRecruitable_Positions: Optional[bool] = None
    Ignore_Future_Positions: Optional[bool] = None
    Include_Closed_Positions: Optional[bool] = None
    Show_Only_Closed_Positions: Optional[bool] = None
    Event_Reference: Optional[EventObjectType] = None
    Field_And_Parameter_Criteria_Data: Optional[
        FieldAndParameterCriteriaDataType
    ] = None
    Location_Reference: Optional[List[LocationObjectType]] = Field(None, min_items=0)
    Additional_Locations_Reference: Optional[List[LocationObjectType]] = Field(
        None, min_items=0
    )


class PositionResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None
    Include_Position_Definition_Data: Optional[bool] = None
    Include_Position_Restrictions_Data: Optional[bool] = None
    Include_Position_Restriction_Working_Hours_Details_Data: Optional[bool] = None
    Include_Default_Compensation_Data: Optional[bool] = None
    Include_Default_Position_Organization_Assignment_Data: Optional[bool] = None
    Include_Worker_For_Filled_Positions_Data: Optional[bool] = None
    Include_Qualifications: Optional[bool] = None
    Include_Job_Requisition_Data: Optional[bool] = None
    Include_Job_Requisition_Attachments: Optional[bool] = None


class WorkerEventObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class WorkerEventObjectType(BaseModel):
    ID: Optional[List[WorkerEventObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DifficultyToFillObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DifficultyToFillObjectType(BaseModel):
    ID: Optional[List[DifficultyToFillObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PositionDetailsDataType(BaseModel):
    Position_ID: Optional[str] = None
    Job_Posting_Title: Optional[str] = None
    Academic_Tenure_Eligible: Optional[bool] = None
    Job_Description_Summary: Optional[str] = None
    Job_Description: Optional[str] = None
    Position_Status_Reference: Optional[List[WorkerEventObjectType]] = Field(
        None, min_items=0
    )
    Available_For_Hire: Optional[bool] = None
    Available_for_Recruiting: Optional[bool] = None
    Hiring_Freeze: Optional[bool] = None
    Work_Shift_Required: Optional[bool] = None
    Available_for_Overlap: Optional[bool] = None
    Earliest_Overlap_Date: Optional[date] = None
    Critical_Job: Optional[bool] = None
    Difficulty_to_Fill_Reference: Optional[DifficultyToFillObjectType] = None


class ManagementLevelObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ManagementLevelObjectType(BaseModel):
    ID: Optional[List[ManagementLevelObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobCategoryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class JobCategoryObjectType(BaseModel):
    ID: Optional[List[JobCategoryObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobProfileExemptDataType(BaseModel):
    Location_Context_Reference: LocationContextObjectType
    Job_Exempt: Optional[bool] = None
    Delete: Optional[bool] = None


class JobProfileSummaryDataType(BaseModel):
    Job_Profile_Reference: Optional[JobProfileObjectType] = None
    Job_Profile_Name: Optional[str] = None
    Management_Level_Reference: Optional[ManagementLevelObjectType] = None
    Job_Category_Reference: Optional[JobCategoryObjectType] = None
    Job_Family_Reference: Optional[List[JobFamilyBaseObjectType]] = Field(
        None, min_items=0
    )
    Work_Shift_Required: Optional[bool] = None
    Job_Profile_Exempt_Data: Optional[List[JobProfileExemptDataType]] = Field(
        None, min_items=0
    )
    Critical_Job: Optional[bool] = None
    Difficulty_to_Fill_Reference: Optional[DifficultyToFillObjectType] = None


class PositionGroupRestrictionSummaryDataType(BaseModel):
    Availability_Date: Optional[date] = None
    Earliest_Hire_Date: Optional[date] = None
    Job_Family_Reference: Optional[List[JobFamilyBaseObjectType]] = Field(
        None, min_items=0
    )
    Job_Profile_Restriction_Summary_Data: Optional[
        List[JobProfileSummaryDataType]
    ] = Field(None, min_items=0)
    Location_Reference: Optional[List[LocationObjectType]] = Field(None, min_items=0)
    Worker_Type_Reference: Optional[WorkerTypeObjectType] = None
    Time_Type_Reference: Optional[PositionTimeTypeObjectType] = None
    Position_Worker_Type_Reference: Optional[
        List[PositionWorkerTypeObjectType]
    ] = Field(None, min_items=0)


class WorkingHoursDetailsDataType(BaseModel):
    Default_Hours: Optional[float] = None
    Scheduled_Hours: Optional[float] = None


class DefaultPositionOrganizationAssignmentsDataType(BaseModel):
    Company_Assignments_Reference: Optional[List[CompanyObjectType]] = Field(
        None, min_items=0
    )
    Cost_Center_Assignments_Reference: Optional[List[CostCenterObjectType]] = Field(
        None, min_items=0
    )
    Region_Assignments_Reference: Optional[List[RegionObjectType]] = Field(
        None, min_items=0
    )
    Custom_Organization_Assignments_Reference: Optional[
        List[CustomOrganizationObjectType]
    ] = Field(None, min_items=0)


class PositionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PositionObjectType(BaseModel):
    ID: Optional[List[PositionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class WorkerForFilledPositionType(BaseModel):
    Worker_Reference: Optional[WorkerObjectType] = None
    Position_Reference: Optional[PositionObjectType] = None


class TalentQualificationEnabledObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class TalentQualificationEnabledObjectType(BaseModel):
    ID: Optional[List[TalentQualificationEnabledObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class CompetencyProfileForJobDataType(BaseModel):
    Competency_Reference: Optional[CompetencyObjectType] = None
    Proficiency_Rating_Reference: Optional[ProficiencyRatingObjectType] = None
    Required: Optional[bool] = None
    Qualification_Source_Reference: Optional[
        TalentQualificationEnabledObjectType
    ] = None


class CompetencyProfileForJobType(BaseModel):
    Competency_Profile_Reference: Optional[UniqueIdentifierObjectType] = None
    Competency_Profile_Data: Optional[CompetencyProfileForJobDataType] = None


class CertificationProfileForJobDataType(BaseModel):
    Country_Reference: Optional[CountryObjectType] = None
    Certification_Reference: Optional[CertificationObjectType] = None
    Certification_Name: Optional[str] = None
    Certification_Issuer: Optional[str] = None
    Required: Optional[bool] = None
    Qualification_Source_Reference: Optional[
        TalentQualificationEnabledObjectType
    ] = None
    Specialty_Achievement_Data: Optional[List[SpecialtyAchievementDataType]] = Field(
        None, min_items=0
    )


class CertificationProfileForJobType(BaseModel):
    Certification_Profile_Reference: Optional[UniqueIdentifierObjectType] = None
    Certification_Profile_Data: Optional[CertificationProfileForJobDataType] = None


class EducationProfileForJobDataType(BaseModel):
    Degree_Reference: DegreeObjectType
    Field_Of_Study_Reference: Optional[FieldOfStudyObjectType] = None
    Required: Optional[bool] = None
    Qualification_Source_Reference: Optional[
        TalentQualificationEnabledObjectType
    ] = None


class EducationProfileForJobType(BaseModel):
    Education_Profile_Reference: Optional[UniqueIdentifierObjectType] = None
    Education_Profile_Data: Optional[EducationProfileForJobDataType] = None


class LanguageProfileForJobDataType(BaseModel):
    Language_Reference: Optional[LanguageObjectType] = None
    Language_Ability_Data: Optional[List[LanguageAbilityDataType]] = Field(
        None, min_items=0
    )
    Required: Optional[bool] = None
    Qualification_Source_Reference: Optional[
        TalentQualificationEnabledObjectType
    ] = None


class LanguageProfileForJobType(BaseModel):
    Language_Profile_Reference: Optional[UniqueIdentifierObjectType] = None
    Language_Profile_Data: Optional[LanguageProfileForJobDataType] = None


class ResponsibilityProfileForJobDataType(BaseModel):
    Responsibility: Optional[str] = None
    Required: Optional[bool] = None
    Qualification_Source_Reference: Optional[
        TalentQualificationEnabledObjectType
    ] = None


class ResponsibilityProfileForJobType(BaseModel):
    Responsibility_Profile_Reference: Optional[UniqueIdentifierObjectType] = None
    Responsibility_Profile_Data: Optional[ResponsibilityProfileForJobDataType] = None


class TrainingProfileForJobDataType(BaseModel):
    Training_Name: Optional[str] = None
    Description: Optional[str] = None
    Training_Type_Reference: Optional[TrainingTypeObjectType] = None
    Required: Optional[bool] = None
    Qualification_Source_Reference: Optional[
        TalentQualificationEnabledObjectType
    ] = None


class TrainingProfileForJobType(BaseModel):
    Training_Profile_Reference: Optional[UniqueIdentifierObjectType] = None
    Training_Profile_Data: Optional[TrainingProfileForJobDataType] = None


class WorkExperienceProfileForJobDataType(BaseModel):
    Work_Experience_Reference: Optional[WorkExperienceQualificationObjectType] = None
    Work_Experience_Rating_Reference: Optional[WorkExperienceRatingObjectType] = None
    Required: Optional[bool] = None
    Qualification_Source_Reference: Optional[
        TalentQualificationEnabledObjectType
    ] = None


class WorkExperienceForJobType(BaseModel):
    Worker_Experience_Profile_Reference: Optional[UniqueIdentifierObjectType] = None
    Work_Experience_Data: Optional[WorkExperienceProfileForJobDataType] = None


class SkillObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SkillObjectType(BaseModel):
    ID: Optional[List[SkillObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SkillProfileForJobDataType(BaseModel):
    Skill_Reference: Optional[SkillObjectType] = None
    Name: Optional[str] = None
    Required: Optional[bool] = None
    Qualification_Source_Reference: Optional[
        TalentQualificationEnabledObjectType
    ] = None


class SkillProfileForJobType(BaseModel):
    Skill_Profile_Reference: Optional[UniqueIdentifierObjectType] = None
    Skill_Profile_Data: Optional[SkillProfileForJobDataType] = None


class QualificationsFromPositionRestrictionsDataType(BaseModel):
    Competency_Data: Optional[List[CompetencyProfileForJobType]] = Field(
        None, min_items=0
    )
    Certification_Data: Optional[List[CertificationProfileForJobType]] = Field(
        None, min_items=0
    )
    Education_Data: Optional[List[EducationProfileForJobType]] = Field(
        None, min_items=0
    )
    Language_Data: Optional[List[LanguageProfileForJobType]] = Field(None, min_items=0)
    Responsibility_Data: Optional[List[ResponsibilityProfileForJobType]] = Field(
        None, min_items=0
    )
    Training_Data: Optional[List[TrainingProfileForJobType]] = Field(None, min_items=0)
    Work_Experience_Data: Optional[List[WorkExperienceForJobType]] = Field(
        None, min_items=0
    )
    Skill_Data: Optional[List[SkillProfileForJobType]] = Field(None, min_items=0)


class JobRequisitionStatusObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class JobRequisitionStatusObjectType(BaseModel):
    ID: Optional[List[JobRequisitionStatusObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class RecruitingInstructionDataType(BaseModel):
    Recruiting_Instruction_Reference: Optional[RecruitingInstructionObjectType] = None
    Do_Not_Send_To_Recruiting_System: Optional[bool] = None
    Name: Optional[str] = None


class JobRequisitionDataType(BaseModel):
    Job_Requisition_Reference: Optional[JobRequisitionObjectType] = None
    Job_Requisition_ID: Optional[str] = None
    Job_Requisition_Status_Reference: Optional[JobRequisitionStatusObjectType] = None
    Job_Posting_Title: Optional[str] = None
    Recruiting_Instruction_Data: Optional[RecruitingInstructionDataType] = None
    Academic_Tenure_Eligible: Optional[bool] = None
    Number_of_Openings: Optional[float] = None
    Job_Description_Summary: Optional[str] = None
    Justification: Optional[str] = None
    Job_Requisition_Attachments: Optional[JobRequisitionAttachmentsType] = None
    Recruiting_Start_Date: Optional[date] = None
    Target_Hire_Date: Optional[date] = None
    Target_End_Date: Optional[date] = None
    Job_Profile_Reference: Optional[JobProfileObjectType] = None
    Worker_Type_Reference: Optional[WorkerTypeObjectType] = None
    Position_Worker_Type_Reference: Optional[PositionWorkerTypeObjectType] = None
    Primary_Location_Reference: Optional[LocationObjectType] = None
    Additional_Locations_Reference: Optional[List[LocationObjectType]] = Field(
        None, min_items=0
    )
    Position_Time_Type_Reference: Optional[PositionTimeTypeObjectType] = None
    Scheduled_Weekly_Hours: Optional[float] = None
    Work_Shift_Reference: Optional[WorkShiftObjectType] = None
    Spotlight_Job: Optional[bool] = None
    Qualification_Data: Optional[
        QualificationDataForPositionRestrictionOrJobProfileType
    ] = None
    Replacement_for_Worker_Reference: Optional[List[WorkerObjectType]] = Field(
        None, min_items=0
    )


class PositionDataType(BaseModel):
    Supervisory_Organization_Reference: SupervisoryOrganizationObjectType
    Effective_Date: Optional[date] = None
    Position_Definition_Data: Optional[PositionDetailsDataType] = None
    Position_Restrictions_Data: Optional[PositionGroupRestrictionSummaryDataType] = None
    Position_Restriction_Working_Hours_Details_Data: Optional[
        WorkingHoursDetailsDataType
    ] = None
    Default_Compensation_Data: Optional[CompensationDefaultDataType] = None
    Default_Position_Organization_Assignments_Data: Optional[
        DefaultPositionOrganizationAssignmentsDataType
    ] = None
    Worker_For_Filled_Position: Optional[WorkerForFilledPositionType] = None
    Qualification_Data: Optional[QualificationsFromPositionRestrictionsDataType] = None
    Integration_Field_Override_Data: Optional[
        List[DocumentFieldResultDataType]
    ] = Field(None, min_items=0)
    Job_Requisition_Data: Optional[JobRequisitionDataType] = None
    Closed: Optional[bool] = None


class PositionRestrictionType(BaseModel):
    Position_Reference: Optional[PositionRestrictionsObjectType] = None
    Position_Data: Optional[PositionDataType] = None


class PositionsResponseDataType(BaseModel):
    Position: Optional[List[PositionRestrictionType]] = Field(None, min_items=0)


class InvalidReferenceIDDataType(BaseModel):
    Invalid_Reference_ID: Optional[str] = None
    Invalid_Reference_ID_Type: Optional[str] = None


class InvalidReferenceIDResponseType(BaseModel):
    Invalid_Reference: Optional[List[InvalidReferenceIDDataType]] = Field(
        None, min_items=0
    )


class GetPositionsResponseType(BaseModel):
    Request_References: Optional[List[PositionRequestReferencesType]] = Field(
        None, min_items=0
    )
    Request_Criteria: Optional[List[PositionRequestCriteriaType]] = Field(
        None, min_items=0
    )
    Response_Filter: Optional[List[ResponseFilterType]] = Field(None, min_items=0)
    Response_Group: Optional[List[PositionResponseGroupType]] = Field(None, min_items=0)
    Response_Results: Optional[List[ResponseResultsType]] = Field(None, min_items=0)
    Response_Data: Optional[List[PositionsResponseDataType]] = Field(None, min_items=0)
    Invalid_Reference_ID_Response: Optional[
        List[InvalidReferenceIDResponseType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class EndInternationalAssignmentEventDataType(BaseModel):
    Last_Day_of_Work: date
    Reason_Reference: EndAdditionalJobSubcategoryObjectType
    Pay_Through_Date: Optional[date] = None
    Notify_Employee_By_Date: Optional[date] = None
    Close_Position: Optional[bool] = None
    Job_Overlap_Allowed: Optional[bool] = None


class EndInternationalAssignmentDataType(BaseModel):
    Employee_Reference: EmployeeObjectType
    Position_Reference: PositionElementObjectType
    End_International_Assignment_Date: date
    End_International_Assignment_Event_Data: EndInternationalAssignmentEventDataType
    Create_Job_Requisition_Sub_Process: Optional[
        CreateJobRequisitionSubProcessType
    ] = None
    Check_Position_Budget_Sub_Process: Optional[
        CheckPositionBudgetSubBusinessProcessType
    ] = None
    Assign_Roles: Optional[AssignRolesSubProcessType] = None


class EndInternationalAssignmentForEmployeeEventRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    End_International_Assignment_Data: EndInternationalAssignmentDataType
    version: Optional[str] = None


class ChangePersonalInformationResponseType(BaseModel):
    Personal_Information_Change_Event_Reference: Optional[
        UniqueIdentifierObjectType
    ] = None
    Personal_Information_Data: Optional[ChangePersonalInformationDataType] = None
    version: Optional[str] = None


class GetChangeLicensesRequestReferencesType(BaseModel):
    Person_Reference: Optional[List[RoleObjectType]] = Field(None, min_items=0)
    Universal_ID_Reference: Optional[List[UniversalIdentifierObjectType]] = Field(
        None, min_items=0
    )


class LicenseIdentificationDataType(BaseModel):
    License_ID: Optional[List[LicenseIDType]] = Field(None, min_items=0)
    Replace_All: Optional[bool] = None


class ChangeLicensesBusinessProcessDataType(BaseModel):
    Person_Reference: Optional[RoleObjectType] = None
    Universal_ID_Reference: Optional[UniversalIdentifierObjectType] = None
    License_Identification_Data: LicenseIdentificationDataType


class ChangeLicensesResponseWrapperType(BaseModel):
    Person_Reference: Optional[RoleObjectType] = None
    Change_Licenses_Data: Optional[List[ChangeLicensesBusinessProcessDataType]] = Field(
        None, min_items=0
    )


class ChangeLicensesResponseDataType(BaseModel):
    Change_Licenses: Optional[List[ChangeLicensesResponseWrapperType]] = Field(
        None, min_items=0
    )


class GetChangeLicensesResponseType(BaseModel):
    Request_References: Optional[List[GetChangeLicensesRequestReferencesType]] = Field(
        None, min_items=0
    )
    Response_Filter: Optional[List[ResponseFilterType]] = Field(None, min_items=0)
    Response_Results: Optional[List[ResponseResultsType]] = Field(None, min_items=0)
    Response_Data: Optional[List[ChangeLicensesResponseDataType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class DependentObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DependentObjectType(BaseModel):
    ID: Optional[List[DependentObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class RelatedPersonForWorkerObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RelatedPersonForWorkerObjectType(BaseModel):
    ID: Optional[List[RelatedPersonForWorkerObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class RelatedPersonRelationshipObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RelatedPersonRelationshipObjectType(BaseModel):
    ID: Optional[List[RelatedPersonRelationshipObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DependentPersonalInformationDataType(BaseModel):
    Person_Name_Data: Optional[PersonNameDataType] = None
    Contact_Information_Data: Optional[ContactInformationDataType] = None
    Person_Identification_Data: Optional[PersonIdentificationDataType] = None
    Date_of_Birth: Optional[date] = None
    Date_of_Death: Optional[date] = None
    Gender_Reference: Optional[GenderObjectType] = None
    Uses_Tobacco: Optional[bool] = None
    FullTime_Student: Optional[bool] = None
    Student_Status_Start_Date: Optional[date] = None
    Student_Status_End_Date: Optional[date] = None
    Disabled: Optional[bool] = None
    Inactive_Date: Optional[date] = None


class BenefitCoverageTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class BenefitCoverageTypeObjectType(BaseModel):
    ID: Optional[List[BenefitCoverageTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class QualifiedDomesticRelationsOrderReplacementDataType(BaseModel):
    Benefit_Coverage_Type_Reference: BenefitCoverageTypeObjectType
    Start_Date: date
    End_Date: date


class PutDependentDataType(BaseModel):
    Dependent_ID: Optional[str] = None
    Employee_Reference: Optional[EmployeeObjectType] = None
    Existing_Related_Person_Reference: Optional[RelatedPersonForWorkerObjectType] = None
    Related_Person_Relationship_Reference: Optional[
        RelatedPersonRelationshipObjectType
    ] = None
    Use_Employee_Address: Optional[bool] = None
    Use_Employee_Phone: Optional[bool] = None
    Irrevocable: Optional[bool] = None
    Dependent_Personal_Information_Data: Optional[
        DependentPersonalInformationDataType
    ] = None
    Court_Order_Replacement_Data: Optional[
        List[QualifiedDomesticRelationsOrderReplacementDataType]
    ] = Field(None, min_items=0)


class PutDependentRequestType(BaseModel):
    Dependent_Reference: Optional[DependentObjectType] = None
    Dependent_Data: PutDependentDataType
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class HireEmployeeEventResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Employee_Reference: Optional[WorkerObjectType] = None
    Position_Reference: Optional[PositionElementObjectType] = None
    Applicant_Reference: Optional[ApplicantObjectType] = None
    Exceptions_Response_Data: Optional[
        List[ApplicationInstanceRelatedExceptionsDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class RemoveRetireeStatusResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class CorrectHireEmployeeResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class SwitchPrimaryJobRequestDataType(BaseModel):
    Worker_Reference: WorkerObjectType
    Effective_Date: date
    Switch_Primary_Job_Data: SwitchPrimaryJobDataType


class SwitchPrimaryJobRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Switch_Primary_Position_Request_Data: SwitchPrimaryJobRequestDataType
    version: Optional[str] = None


class ChangeLicenseIDRequestCriteriaType(BaseModel):
    Person_Type_Criteria_Data: Optional[PersonTypeCriteriaType] = None


class GetChangeLicensesRequestType(BaseModel):
    Request_References: Optional[GetChangeLicensesRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Request_Criteria_Data: Optional[ChangeLicenseIDRequestCriteriaType] = None
    version: Optional[str] = None


class GetChangePreferredNameRequestReferencesType(BaseModel):
    Person_Reference: Optional[List[RoleObjectType]] = Field(None, min_items=0)
    Universal_ID_Reference: Optional[List[UniversalIdentifierObjectType]] = Field(
        None, min_items=0
    )


class ChangePreferredNameRequestCriteriaType(BaseModel):
    Person_Type_Criteria_Data: Optional[PersonTypeCriteriaType] = None


class GetChangePreferredNameRequestType(BaseModel):
    Request_References: Optional[GetChangePreferredNameRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Request_Criteria_Data: Optional[ChangePreferredNameRequestCriteriaType] = None
    version: Optional[str] = None


class AssignOrganizationResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class CorrectContractContingentWorkerDataType(BaseModel):
    Event_Effective_Date: Optional[date] = None
    Conversion_Position_Start_Date: Optional[date] = None


class CorrectContractContingentWorkerRequestType(BaseModel):
    Event_Reference: UniqueIdentifierObjectType
    Comment: Optional[str] = None
    Correct_Contract_Contingent_Worker_Data: CorrectContractContingentWorkerDataType
    version: Optional[str] = None


class PARMassActionRequestReferencesType(BaseModel):
    PAR_Mass_Action_Reference: List[PARMassActionObjectType] = Field(..., min_items=1)


class PARMassActionType(BaseModel):
    PAR_Mass_Action_Reference: Optional[PARMassActionObjectType] = None
    PAR_Mass_Action_Data: Optional[List[PARMassActionDataType]] = Field(
        None, min_items=0
    )


class PARMassActionResponseDataType(BaseModel):
    PAR_Mass_Action: Optional[List[PARMassActionType]] = Field(None, min_items=0)


class GetPersonnelActionRequestStatusOnMassActionResponseType(BaseModel):
    Request_References: Optional[PARMassActionRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[PARMassActionResponseDataType] = None
    version: Optional[str] = None


class StaffingFieldDefaultsConditionRuleRequestReferencesType(BaseModel):
    Staffing_Field_Defaults_Condition_Rule_Reference: List[
        ConditionRuleObjectType
    ] = Field(..., min_items=1)


class StaffingFieldDefaultsConditionRuleRequestCriteriaType(BaseModel):
    Rule_Description: Optional[str] = None


class StaffingFieldDefaultsConditionRuleResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None


class GetStaffingFieldDefaultsConditionRulesRequestType(BaseModel):
    Request_References: Optional[
        StaffingFieldDefaultsConditionRuleRequestReferencesType
    ] = None
    Request_Criteria: Optional[
        StaffingFieldDefaultsConditionRuleRequestCriteriaType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[StaffingFieldDefaultsConditionRuleResponseGroupType] = None
    version: Optional[str] = None


class JobFamilyGroupRequestReferencesType(BaseModel):
    Job_Family_Group_Reference: List[JobFamilyObjectType] = Field(..., min_items=1)
    Skip_Non_Existing_Instances: Optional[bool] = None


class JobFamilyGroupResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None
    Include_Job_Profile_Info_Data: Optional[bool] = None


class GetJobFamilyGroupsRequestType(BaseModel):
    Request_References: Optional[JobFamilyGroupRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[JobFamilyGroupResponseGroupType] = None
    version: Optional[str] = None


class ProcessingFaultType(BaseModel):
    Detail_Message: Optional[str] = None


class NoticePeriodsForCountryRequestReferencesType(BaseModel):
    Maintain_Notice_Periods_For_Country_Reference: List[
        NoticePeriodsSetupTableObjectType
    ] = Field(..., min_items=1)


class NoticePeriodsForCountryRequestCriteriaType(BaseModel):
    Country_Reference: Optional[List[CountryObjectType]] = Field(None, min_items=0)


class GetMaintainNoticePeriodsForCountryRequestType(BaseModel):
    Request_References: Optional[NoticePeriodsForCountryRequestReferencesType] = None
    Request_Criteria: Optional[NoticePeriodsForCountryRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class ClosePositionResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Position_or_Headcount_Reference: Optional[PositionGroupObjectType] = None
    version: Optional[str] = None


class WorkerCustomObjectDataType(BaseModel):
    Effective_Date: date
    Worker_Reference: WorkerObjectType
    Business_Object_Additional_Data: EffectiveDatedWebServiceAdditionalDataType


class EditWorkerAdditionalDataRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Worker_Custom_Object_Data: WorkerCustomObjectDataType
    version: Optional[str] = None


class EndContingentWorkerContractResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class StartInternationalAssignmentResponseType(BaseModel):
    Start_International_Assignment_Reference: Optional[
        UniqueIdentifierObjectType
    ] = None
    Employee_Reference: Optional[WorkerObjectType] = None
    Job_Reference: Optional[PositionElementObjectType] = None
    version: Optional[str] = None


class GetStaffingFieldDefaultsConditionRulesWithoutDependenciesRequestType(BaseModel):
    Request_References: Optional[
        List[StaffingFieldDefaultsConditionRuleRequestReferencesType]
    ] = Field(None, min_items=0)
    Request_Criteria: Optional[
        List[StaffingFieldDefaultsConditionRuleRequestCriteriaType]
    ] = Field(None, min_items=0)
    Response_Filter: Optional[List[ResponseFilterType]] = Field(None, min_items=0)
    Response_Group: Optional[
        List[StaffingFieldDefaultsConditionRuleResponseGroupType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class AssignOrganizationRolesResponseType(BaseModel):
    Assign_Roles_Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class StudentEmploymentEligibilityRuleDataType(BaseModel):
    Condition_Rule_Data: List[ConditionRuleDataWWSType] = Field(..., min_items=1)


class PutStudentEmploymentEligibilityRuleRequestType(BaseModel):
    Student_Employment_Eligibility_Rule_Reference: Optional[
        ConditionRuleObjectType
    ] = None
    Student_Employment_Eligibility_Rule_Data: StudentEmploymentEligibilityRuleDataType
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class JobOverlapRoutingExclusionRuleRequestReferencesType(BaseModel):
    Job_Overlap_Routing_Exclusion_Rule_Reference: List[ConditionRuleObjectType] = Field(
        ..., min_items=1
    )


class JobOverlapRoutingExclusionRuleRequestCriteriaType(BaseModel):
    Rule_Description: Optional[str] = None


class JobOverlapRoutingExclusionRuleResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None


class JobOverlapRoutingExclusionRuleType(BaseModel):
    Job_Overlap_Routing_Exclusion_Rule_Reference: Optional[
        ConditionRuleObjectType
    ] = None
    Job_Overlap_Routing_Exclusion_Rule_Data: Optional[
        List[JobOverlapRoutingExclusionRuleDataType]
    ] = Field(None, min_items=0)


class JobOverlapRoutingExclusionRuleResponseDataType(BaseModel):
    Job_Overlap_Routing_Exclusion_Rule: Optional[
        List[JobOverlapRoutingExclusionRuleType]
    ] = Field(None, min_items=0)


class GetJobOverlapRoutingExclusionRulesResponseType(BaseModel):
    Request_References: Optional[
        JobOverlapRoutingExclusionRuleRequestReferencesType
    ] = None
    Request_Criteria: Optional[JobOverlapRoutingExclusionRuleRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[JobOverlapRoutingExclusionRuleResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[JobOverlapRoutingExclusionRuleResponseDataType] = None
    version: Optional[str] = None


class GlobalStaffingEligibilityRuleDataType(BaseModel):
    Condition_Rule_Data: Optional[ConditionRuleDataWWSType] = None


class PutGlobalStaffingEligibilityRuleRequestType(BaseModel):
    Global_Staffing_Eligibility_Rule_Reference: Optional[ConditionRuleObjectType] = None
    Global_Staffing_Eligibility_Rule_Data: Optional[
        GlobalStaffingEligibilityRuleDataType
    ] = None
    Add_Only: Optional[bool] = None
    Delete: Optional[bool] = None
    version: Optional[str] = None


class StudentEmploymentEligibilityEventObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class StudentEmploymentEligibilityEventObjectType(BaseModel):
    ID: Optional[List[StudentEmploymentEligibilityEventObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class StudentEmploymentEligibilityEventRequestReferencesType(BaseModel):
    Student_Employment_Eligibility_Event_Reference: List[
        StudentEmploymentEligibilityEventObjectType
    ] = Field(..., min_items=1)


class StudentEmploymentEligibilityEventResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None


class ActionEventObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ActionEventObjectType(BaseModel):
    ID: Optional[List[ActionEventObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class StudentEmploymentEligibilityEventType(BaseModel):
    Student_Employment_Eligibility_Event_Reference: Optional[
        StudentEmploymentEligibilityEventObjectType
    ] = None
    PreHire_Reference: Optional[ApplicantObjectType] = None
    Worker_Reference: Optional[WorkerObjectType] = None
    Proposed_Worker_ID: Optional[str] = None
    Parent_Event_Reference: Optional[ActionEventObjectType] = None
    Employee_Type_Reference: Optional[EmployeeTypeObjectType] = None
    Supervisory_Organization_Reference: Optional[
        SupervisoryOrganizationObjectType
    ] = None
    Manager_Reference: Optional[WorkerObjectType] = None
    Event_Effective_Date: Optional[date] = None
    Total_Scheduled_Hours: Optional[float] = None
    Job_Requisition_Reference: Optional[JobRequisitionObjectType] = None
    Position_Restriction_Reference: Optional[PositionRestrictionsObjectType] = None
    Position_Details_Data: Optional[List[PositionDetailsSubDataType]] = Field(
        None, min_items=0
    )


class StudentEmploymentEligibilityEventResponseDataType(BaseModel):
    Student_Employment_Eligibility_Event: Optional[
        List[StudentEmploymentEligibilityEventType]
    ] = Field(None, min_items=0)


class GetStudentEmploymentEligibilityDataResponseType(BaseModel):
    Request_References: Optional[
        StudentEmploymentEligibilityEventRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[StudentEmploymentEligibilityEventResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[StudentEmploymentEligibilityEventResponseDataType] = None
    version: Optional[str] = None


class AcademicCurricularDivisionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AcademicCurricularDivisionObjectType(BaseModel):
    ID: Optional[List[AcademicCurricularDivisionObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class StudentAcademicStandingObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class StudentAcademicStandingObjectType(BaseModel):
    ID: Optional[List[StudentAcademicStandingObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class StudentLoadStatusObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class StudentLoadStatusObjectType(BaseModel):
    ID: Optional[List[StudentLoadStatusObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class OtherUnitTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class OtherUnitTypeObjectType(BaseModel):
    ID: Optional[List[OtherUnitTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ClassStandingDefinitionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ClassStandingDefinitionObjectType(BaseModel):
    ID: Optional[List[ClassStandingDefinitionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class StudentObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class StudentObjectType(BaseModel):
    ID: Optional[List[StudentObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class StudentPersonalProfileDataType(BaseModel):
    Date_of_Birth: Optional[date] = None
    Gender_Reference: Optional[GenderObjectType] = None
    Ethnicity_Reference: Optional[List[EthnicityObjectType]] = Field(None, min_items=0)
    Race_Ethnicity_Details_Reference: Optional[
        List[EthnicityDetailsObjectType]
    ] = Field(None, min_items=0)
    Citizenship_Status_Reference: Optional[List[CitizenshipStatusObjectType]] = Field(
        None, min_items=0
    )
    Hispanic_or_Latino: Optional[bool] = None
    Aboriginal_Indigenous_Identification_Reference: Optional[
        AboriginalIndigenousIdentificationSelectionObjectType
    ] = None
    Aboriginal_Indigenous_Identification_Details_Reference: Optional[
        List[AboriginalIndigenousDetailsObjectType]
    ] = Field(None, min_items=0)
    Religion_Reference: Optional[ReligionObjectType] = None


class GenericMilitaryServiceSubDataType(BaseModel):
    Military_Status_Reference: MilitaryStatusObjectType
    Military_Discharge_Date: Optional[date] = None
    Military_Status_Begin_Date: Optional[date] = None
    Military_Service_Type_Reference: Optional[MilitaryServiceTypeObjectType] = None
    Military_Rank_Reference: Optional[MilitaryRankObjectType] = None
    Notes: Optional[str] = None


class GenericMilitaryServiceInformationDataType(BaseModel):
    Military_Service_Reference: Optional[MilitaryServiceReferenceObjectType] = None
    Military_Service_Data: Optional[GenericMilitaryServiceSubDataType] = None
    Delete: Optional[bool] = None


class GenericMilitaryInformationDataType(BaseModel):
    Military_Service_Information_Data: Optional[
        List[GenericMilitaryServiceInformationDataType]
    ] = Field(None, min_items=0)
    Replace_All: Optional[bool] = None


class StudentApplicationDetailsPersonalInformationSubeditDataType(BaseModel):
    Marital_Status_Reference: Optional[List[MaritalStatusObjectType]] = Field(
        None, min_items=0
    )
    Country_of_Birth_Reference: Optional[CountryObjectType] = None
    Region_of_Birth_Reference: Optional[CountryRegionObjectType] = None
    City_of_Birth: Optional[str] = None
    Generic_Military_Service_Data: Optional[
        List[GenericMilitaryInformationDataType]
    ] = Field(None, min_items=0)


class ExternalStudentPersonDataType(BaseModel):
    Person_Name_Data: Optional[PersonNameDataType] = None
    Contact_Information_Data: Optional[ContactInformationDataType] = None
    Personal_Profile_Data: Optional[StudentPersonalProfileDataType] = None
    Person_Identification_Data: Optional[PersonIdentificationDataType] = None
    Personal_Information_Data: Optional[
        StudentApplicationDetailsPersonalInformationSubeditDataType
    ] = None


class StudentPhotoDataType(BaseModel):
    Filename: str
    File: List[int]


class ExternalStudentStudentSubeditDataType(BaseModel):
    Student_ID: str
    Worker_Reference: Optional[WorkerObjectType] = None
    Pre_Hire_Reference: Optional[ApplicantObjectType] = None
    Student_Person_Data: Optional[ExternalStudentPersonDataType] = None
    Student_Photo_Data: Optional[StudentPhotoDataType] = None


class ExternalStudentStudentDataType(BaseModel):
    Student_Reference: Optional[StudentObjectType] = None
    External_Student_Student_Subedit_Data: Optional[
        ExternalStudentStudentSubeditDataType
    ] = None


class ExternalAcademicRecordDataType(BaseModel):
    Student_Active: Optional[bool] = None
    Do_Not_Release_Directory_Information: Optional[bool] = None
    Academic_Unit_Reference: AcademicCurricularDivisionObjectType
    Academic_Level_Reference: Optional[AcademicLevelObjectType] = None
    Expected_Graduation_Date: Optional[date] = None
    WorkStudy_Eligible: Optional[bool] = None
    GPA: Optional[float] = None
    Academic_Standing_Reference: Optional[StudentAcademicStandingObjectType] = None
    Student_Load_Status_Reference: Optional[StudentLoadStatusObjectType] = None
    Enrolled_Units: Optional[float] = None
    Enrolled_Unit_Type_Reference: Optional[OtherUnitTypeObjectType] = None
    Class_Standing_Reference: Optional[ClassStandingDefinitionObjectType] = None
    External_Student_Student_Data: ExternalStudentStudentDataType


class ImportExternalStudentRequestType(BaseModel):
    ID: Optional[str] = None
    External_Student_Data: Optional[List[ExternalAcademicRecordDataType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class ClosePositionEventDataType(BaseModel):
    Reason_Reference: Optional[GeneralEventSubcategoryObjectType] = None
    Close_Date: date


class ClosePositionDataType(BaseModel):
    Position_Reference: PositionRestrictionsObjectType
    Close_Event_Data: List[ClosePositionEventDataType] = Field(..., min_items=1)


class ClosePositionRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Close_Restriction_Data: ClosePositionDataType
    version: Optional[str] = None


class StudentEmploymentEligibilityRuleRequestReferencesType(BaseModel):
    Student_Employment_Eligibility_Rule_Reference: List[
        ConditionRuleObjectType
    ] = Field(..., min_items=1)


class StudentEmploymentEligibilityRuleResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None


class GetStudentEmploymentEligibilityRulesRequestType(BaseModel):
    Request_References: Optional[
        StudentEmploymentEligibilityRuleRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[StudentEmploymentEligibilityRuleResponseGroupType] = None
    version: Optional[str] = None


class GetStudentEmploymentEligibilityRuleSetRequestType(BaseModel):
    Request_References: Optional[
        StudentEmploymentEligibilityRuleSetRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[
        StudentEmploymentEligibilityRuleSetResponseGroupType
    ] = None
    version: Optional[str] = None


class JobProfileForJobFamilyDataType(BaseModel):
    Job_Profile_Reference: Optional[JobProfileObjectType] = None
    Delete: Optional[bool] = None


class JobFamilyDataType(BaseModel):
    ID: Optional[str] = None
    Effective_Date: Optional[date] = None
    Name: Optional[str] = None
    Summary: Optional[str] = None
    Inactive: Optional[bool] = None
    Job_Profile_Data: Optional[List[JobProfileForJobFamilyDataType]] = Field(
        None, min_items=0
    )
    Integration_Field_Override_Data: Optional[
        List[DocumentFieldResultDataType]
    ] = Field(None, min_items=0)


class PutJobFamilyRequestType(BaseModel):
    Job_Family_Reference: Optional[JobFamilyObjectType] = None
    Job_Family_Data: Optional[JobFamilyDataType] = None
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class DeleteWorkerDocumentResponseType(BaseModel):
    Worker_Reference: Optional[WorkerObjectType] = None
    version: Optional[str] = None


class CreatePositionResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Position_Reference: Optional[PositionGroupObjectType] = None
    version: Optional[str] = None


class TerminateEmployeeEventResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class RemoveRetireeStatusEventDataType(BaseModel):
    End_Retirement_Reason_Reference: GeneralEventSubcategoryObjectType


class RemoveRetireeStatusDataType(BaseModel):
    Employee_Reference: EmployeeObjectType
    End_Retirement_Date: date
    Remove_Retiree_Status_Event_Data: RemoveRetireeStatusEventDataType


class RemoveRetireeStatusRequestType(BaseModel):
    Business_Process_Parameters: BusinessProcessParametersType
    Remove_Retiree_Status_Data: Optional[RemoveRetireeStatusDataType] = None
    version: Optional[str] = None


class FSEWorkerCategoryCriteriaRequestReferencesType(BaseModel):
    FSE_Worker_Category_Criteria_Reference: List[
        FSEWorkerCategoryCriteriaObjectType
    ] = Field(..., min_items=1)


class GetFSEWorkerCategoryCriteriasRequestType(BaseModel):
    Request_References: Optional[FSEWorkerCategoryCriteriaRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class PutApplicantRequestType(BaseModel):
    Applicant_Reference: Optional[ApplicantObjectType] = None
    Applicant_Data: PreHireDataWWSType
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class EmployeeContractRulesTableObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmployeeContractRulesTableObjectType(BaseModel):
    ID: Optional[List[EmployeeContractRulesTableObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class EmployeeContractRuleDataType(BaseModel):
    Order: Optional[str] = None
    Global_Staffing_Eligibility_Rule_Reference: ConditionRuleObjectType
    Maximum_Contract_Renewals_Allowed: Optional[float] = None
    Allow_Unlimited_Renewals: Optional[bool] = None
    Count_Extensions_as_Renewals: Optional[bool] = None
    Maximum_Combined_Contract_Duration: Optional[float] = None
    Maximum_Combined_Contract_Unit_Reference: Optional[DateAndTimeUnitObjectType] = None
    Schedule_Review_Duration: Optional[float] = None
    Schedule_Review_Unit_Reference: Optional[DateAndTimeUnitObjectType] = None
    Inactive: Optional[bool] = None


class EmployeeContractRulesForCountryDataType(BaseModel):
    Country_Reference: CountryObjectType
    Employee_Contract_Rule_Data: Optional[List[EmployeeContractRuleDataType]] = Field(
        None, min_items=0
    )


class PutMaintainEmployeeContractRulesForCountryRequestType(BaseModel):
    Maintain_Employee_Contract_Rules_For_Country_Reference: Optional[
        EmployeeContractRulesTableObjectType
    ] = None
    Maintain_Employee_Contract_Rules_For_Country_Data: EmployeeContractRulesForCountryDataType
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class GetMaintainProbationPeriodsForCountryRequestType(BaseModel):
    Request_References: Optional[ProbationPeriodsForCountryRequestReferencesType] = None
    Request_Criteria: Optional[ProbationPeriodsForCountryRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class ApplicantRequestReferencesType(BaseModel):
    Applicant_Reference: List[ApplicantObjectType] = Field(..., min_items=1)


class FormerWorkerObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class FormerWorkerObjectType(BaseModel):
    ID: Optional[List[FormerWorkerObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ApplicantRequestCriteriaType(BaseModel):
    Worker_Reference: Optional[WorkerObjectType] = None
    Former_Worker_Reference: Optional[FormerWorkerObjectType] = None
    Email_Address: Optional[str] = None
    Field_And_Parameter_Criteria_Data: Optional[
        FieldAndParameterCriteriaDataType
    ] = None


class ApplicantResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None
    Include_Personal_Information: Optional[bool] = None
    Show_All_Personal_Information: Optional[bool] = None
    Include_Recruiting_Information: Optional[bool] = None
    Include_Qualification_Profile: Optional[bool] = None
    Include_Resume: Optional[bool] = None
    Include_Background_Check: Optional[bool] = None
    Include_External_Integration_ID_Data: Optional[bool] = None


class ApplicantWWSType(BaseModel):
    Applicant_Reference: Optional[ApplicantObjectType] = None
    Applicant_Data: Optional[PreHireDataWWSType] = None


class ApplicantsResponseDataType(BaseModel):
    Applicant: Optional[List[ApplicantWWSType]] = Field(None, min_items=0)


class GetApplicantsResponseType(BaseModel):
    Request_References: Optional[ApplicantRequestReferencesType] = None
    Request_Criteria: Optional[ApplicantRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[ApplicantResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[ApplicantsResponseDataType] = None
    version: Optional[str] = None


class AssignRolesResponseType(BaseModel):
    Assign_Roles_Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class CollectiveAgreementRuleDataType(BaseModel):
    Collective_Agreement_Eligibility_Rule_Reference: Optional[
        ConditionRuleObjectType
    ] = None


class CollectiveAgreementFactorsMappingType(BaseModel):
    Factor1_Reference: Optional[CollectiveAgreementFactorObjectType] = None
    Factor2_Reference: Optional[CollectiveAgreementFactorObjectType] = None
    Factor3_Reference: Optional[CollectiveAgreementFactorObjectType] = None
    Factor4_Reference: Optional[CollectiveAgreementFactorObjectType] = None
    Factor5_Reference: Optional[CollectiveAgreementFactorObjectType] = None


class CollectiveAgreementClassificationParameterObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CollectiveAgreementClassificationParameterObjectType(BaseModel):
    ID: Optional[List[CollectiveAgreementClassificationParameterObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class CollectiveAgreementClassificationParametersType(BaseModel):
    Collective_Agreement_Classification_Parameter_Reference: Optional[
        CollectiveAgreementClassificationParameterObjectType
    ] = None
    ID: Optional[str] = None
    Factor_Option1_Reference: Optional[CollectiveAgreementFactorOptionObjectType] = None
    Factor_Option2_Reference: Optional[CollectiveAgreementFactorOptionObjectType] = None
    Factor_Option3_Reference: Optional[CollectiveAgreementFactorOptionObjectType] = None
    Factor_Option4_Reference: Optional[CollectiveAgreementFactorOptionObjectType] = None
    Factor_Option5_Reference: Optional[CollectiveAgreementFactorOptionObjectType] = None
    Inactive: Optional[bool] = None


class CollectiveAgreementDataType(BaseModel):
    Agreement: str
    ID: str
    Code: Optional[str] = None
    Start_Date: Optional[date] = None
    End_Date: Optional[date] = None
    Restricted_to_Countries_Reference: Optional[List[CountryObjectType]] = Field(
        None, min_items=0
    )
    Location_Reference: Optional[List[LocationObjectType]] = Field(None, min_items=0)
    Collective_Agreement_Eligibility_Rule: Optional[
        CollectiveAgreementRuleDataType
    ] = None
    Union_Reference: Optional[List[UnionObjectType]] = Field(None, min_items=0)
    Note: Optional[str] = None
    Inactive: Optional[bool] = None
    Collective_Agreement_Factors_Mapping: Optional[
        CollectiveAgreementFactorsMappingType
    ] = None
    Collective_Agreement_Classification_Parameters: Optional[
        List[CollectiveAgreementClassificationParametersType]
    ] = Field(None, min_items=0)


class CollectiveAgreementType(BaseModel):
    Collective_Agreement_Reference: Optional[CollectiveAgreementObjectType] = None
    Collective_Agreement_Data: Optional[List[CollectiveAgreementDataType]] = Field(
        None, min_items=0
    )


class CollectiveAgreementResponseDataType(BaseModel):
    Collective_Agreement: Optional[List[CollectiveAgreementType]] = Field(
        None, min_items=0
    )


class GetCollectiveAgreementsResponseType(BaseModel):
    Request_References: Optional[CollectiveAgreementRequestReferencesType] = None
    Request_Criteria: Optional[CollectiveAgreementRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[CollectiveAgreementResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[CollectiveAgreementResponseDataType] = None
    version: Optional[str] = None


class GetChangePassportsAndVisasRequestReferencesType(BaseModel):
    Person_Reference: Optional[List[RoleObjectType]] = Field(None, min_items=0)
    Universal_ID_Reference: Optional[List[UniversalIdentifierObjectType]] = Field(
        None, min_items=0
    )


class PassportsAndVisasIdentificationDataType(BaseModel):
    Passport_ID: Optional[List[PassportIDType]] = Field(None, min_items=0)
    Visa_ID: Optional[List[VisaIDType]] = Field(None, min_items=0)
    Replace_All: Optional[bool] = None


class ChangePassportsAndVisasBusinessProcessDataType(BaseModel):
    Person_Reference: Optional[RoleObjectType] = None
    Universal_ID_Reference: Optional[UniversalIdentifierObjectType] = None
    Passports_and_Visas_Identification_Data: PassportsAndVisasIdentificationDataType


class ChangePassportsAndVisasResponseWrapperType(BaseModel):
    Person_Reference: Optional[RoleObjectType] = None
    Change_Passports_and_Visas_Data: Optional[
        List[ChangePassportsAndVisasBusinessProcessDataType]
    ] = Field(None, min_items=0)


class ChangePassportsAndVisasResponseDataType(BaseModel):
    Change_Passports_and_Visas: Optional[
        List[ChangePassportsAndVisasResponseWrapperType]
    ] = Field(None, min_items=0)


class GetChangePassportsAndVisasResponseType(BaseModel):
    Request_References: Optional[
        List[GetChangePassportsAndVisasRequestReferencesType]
    ] = Field(None, min_items=0)
    Response_Filter: Optional[List[ResponseFilterType]] = Field(None, min_items=0)
    Response_Results: Optional[List[ResponseResultsType]] = Field(None, min_items=0)
    Response_Data: Optional[List[ChangePassportsAndVisasResponseDataType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class ProbationPeriodOutcomeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ProbationPeriodOutcomeObjectType(BaseModel):
    ID: Optional[List[ProbationPeriodOutcomeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ProbationPeriodOutcomeRequestReferencesType(BaseModel):
    Probation_Period_Outcome_Reference: List[ProbationPeriodOutcomeObjectType] = Field(
        ..., min_items=1
    )


class ProbationPeriodOutcomeRequestCriteriaType(BaseModel):
    pass


class ProbationPeriodOutcomeDataType(BaseModel):
    ID: Optional[str] = None
    Probation_Period_Outcome_Name: str
    Probation_Period_Action_Reference: List[ProbationPeriodActionObjectType] = Field(
        ..., min_items=1
    )
    Inactive: Optional[bool] = None
    Country_Reference: CountryObjectType


class ProbationPeriodOutcomesDataType(BaseModel):
    Probation_Period_Outcome_Reference: Optional[
        ProbationPeriodOutcomeObjectType
    ] = None
    Probation_Period_Outcome_Data: Optional[
        List[ProbationPeriodOutcomeDataType]
    ] = Field(None, min_items=0)


class ProbationPeriodOutcomeResponseDataType(BaseModel):
    Probation_Period_Outcome: Optional[List[ProbationPeriodOutcomesDataType]] = Field(
        None, min_items=0
    )


class GetProbationPeriodOutcomeResponseType(BaseModel):
    Request_References: Optional[ProbationPeriodOutcomeRequestReferencesType] = None
    Request_Criteria: Optional[ProbationPeriodOutcomeRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Data: Optional[ProbationPeriodOutcomeResponseDataType] = None
    Response_Results: Optional[ResponseResultsType] = None
    version: Optional[str] = None


class WorkingTimeDefaultingEligibilityTableObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class WorkingTimeDefaultingEligibilityTableObjectType(BaseModel):
    ID: Optional[List[WorkingTimeDefaultingEligibilityTableObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class WorkingTimeDefaultDetailsDataType(BaseModel):
    ID: Optional[str] = None
    Working_Time_Default_Value: float
    Working_Time_Scheduled_Value: Optional[float] = None


class WorkingTimeForCountryRowDataType(BaseModel):
    ID: Optional[str] = None
    Order: str
    Working_Time_Eligibility_Rule_Reference: ConditionRuleObjectType
    Working_Time_Default_Details_Data: Optional[
        WorkingTimeDefaultDetailsDataType
    ] = None


class WorkingTimeDefaultingEligibilityTableDataType(BaseModel):
    ID: Optional[str] = None
    Country_Reference: CountryObjectType
    Working_Time_For_Country_Row_Data: Optional[
        List[WorkingTimeForCountryRowDataType]
    ] = Field(None, min_items=0)


class PutMaintainWorkingTimeForCountryRequestType(BaseModel):
    Maintain_Working_Time_For_Country_Reference: Optional[
        WorkingTimeDefaultingEligibilityTableObjectType
    ] = None
    Maintain_Working_Time_For_Country_Data: WorkingTimeDefaultingEligibilityTableDataType
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class StudentEmploymentEligibilityRuleType(BaseModel):
    Student_Employment_Eligibility_Rule_Reference: Optional[
        ConditionRuleObjectType
    ] = None
    Student_Employment_Eligibility_Rule_Data: Optional[
        List[StudentEmploymentEligibilityRuleDataType]
    ] = Field(None, min_items=0)


class StudentEmploymentEligibilityRuleResponseDataType(BaseModel):
    Student_Employment_Eligibility_Rule: Optional[
        List[StudentEmploymentEligibilityRuleType]
    ] = Field(None, min_items=0)


class GetStudentEmploymentEligibilityRulesResponseType(BaseModel):
    Request_References: Optional[
        StudentEmploymentEligibilityRuleRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[StudentEmploymentEligibilityRuleResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[StudentEmploymentEligibilityRuleResponseDataType] = None
    version: Optional[str] = None


class GlobalStaffingEligibilityRuleType(BaseModel):
    Global_Staffing_Eligibility_Rule_Reference: Optional[ConditionRuleObjectType] = None
    Global_Staffing_Eligibility_Rule_Data: Optional[
        List[GlobalStaffingEligibilityRuleDataType]
    ] = Field(None, min_items=0)


class GlobalStaffingEligibilityRuleResponseDataType(BaseModel):
    Global_Staffing_Eligibility_Rule: Optional[
        List[GlobalStaffingEligibilityRuleType]
    ] = Field(None, min_items=0)


class GetGlobalStaffingEligibilityRulesWithoutDependenciesResponseType(BaseModel):
    Request_References: Optional[
        GlobalStaffingEligibilityRulesRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[GlobalStaffingEligibilityRuleResponseDataType] = None
    version: Optional[str] = None


class StudentEmploymentEligibilityReasonDataType(BaseModel):
    Reason_for_Ineligibility: Optional[str] = None
    Critical: Optional[bool] = None


class StudentEmploymentEligibilityEventDataType(BaseModel):
    Eligible: Optional[bool] = None
    Student_Employment_Eligibility_Reason_Data: Optional[
        List[StudentEmploymentEligibilityReasonDataType]
    ] = Field(None, min_items=0)


class PutStudentEmploymentEligibilityStatusRequestType(BaseModel):
    Student_Employment_Eligibility_Event_Reference: StudentEmploymentEligibilityEventObjectType
    Student_Employment_Eligibility_Event_Data: Optional[
        StudentEmploymentEligibilityEventDataType
    ] = None
    version: Optional[str] = None


class StaffObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class StaffObjectType(BaseModel):
    ID: Optional[List[StaffObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class MoveWorkersByOrganizationPositionDataType(BaseModel):
    Position_to_Move_Reference: StaffingInterfaceObjectType
    Worker_for_Position_Reference: Optional[WorkerObjectType] = None


class MoveWorkersByOrganizationDataType(BaseModel):
    Effective_Date: date
    From_Organization_Reference: StaffObjectType
    Move_Workers_By_Organization_Position_Data: List[
        MoveWorkersByOrganizationPositionDataType
    ] = Field(..., min_items=1)
    To_Organization_Reference: StaffObjectType


class MoveWorkersByOrganizationRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Move_Workers_By_Organization_Data: MoveWorkersByOrganizationDataType
    version: Optional[str] = None


class TerminationSubcategoryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class TerminationSubcategoryObjectType(BaseModel):
    ID: Optional[List[TerminationSubcategoryObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LocalTerminationReasonObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LocalTerminationReasonObjectType(BaseModel):
    ID: Optional[List[LocalTerminationReasonObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class TerminateEventDataType(BaseModel):
    Last_Day_of_Work: Optional[date] = None
    Primary_Reason_Reference: TerminationSubcategoryObjectType
    Secondary_Reason_Reference: Optional[
        List[TerminationSubcategoryObjectType]
    ] = Field(None, min_items=0)
    Local_Termination_Reason_Reference: Optional[
        LocalTerminationReasonObjectType
    ] = None
    Pay_Through_Date: Optional[date] = None
    Resignation_Date: Optional[date] = None
    Agreement_Signature_Date: Optional[date] = None
    Dismissal_Process_Start_Date: Optional[date] = None
    Notification_Date: Optional[date] = None
    Notice_Period_Start_Date: Optional[date] = None
    Regrettable_Reference: Optional[CommonYesNoObjectType] = None
    Eligible_for_Hire_Reference: Optional[CommonYesNoObjectType] = None
    Close_Position: Optional[bool] = None
    Job_Overlap_Allowed: Optional[bool] = None
    Last_Date_for_Which_Paid: Optional[date] = None
    Expected_Date_of_Return: Optional[date] = None
    Not_Returning: Optional[bool] = None
    Return_Unknown: Optional[bool] = None
    Worker_Document_Data: Optional[
        List[WorkerDocumentForStaffingEventDataType]
    ] = Field(None, min_items=0)


class COBRAEligibilityReasonObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class COBRAEligibilityReasonObjectType(BaseModel):
    ID: Optional[List[COBRAEligibilityReasonObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class COBRAParticipantObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class COBRAParticipantObjectType(BaseModel):
    ID: Optional[List[COBRAParticipantObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class BenefitPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class BenefitPlanObjectType(BaseModel):
    ID: Optional[List[BenefitPlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ReviewCOBRAEligibilityDataType(BaseModel):
    COBRA_Eligible: Optional[bool] = None
    Reason_Reference: Optional[COBRAEligibilityReasonObjectType] = None
    COBRA_Eligible_Date: Optional[date] = None
    Qualifying_Event_Date: Optional[date] = None
    Coverage_End_Date: Optional[date] = None
    Participant_Reference: Optional[List[COBRAParticipantObjectType]] = Field(
        None, min_items=0
    )
    Benefit_Plan_Reference: Optional[BenefitPlanObjectType] = None


class ReviewCOBRAEligibilitySubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Review_COBRA_Eligibility_Data: Optional[
        List[ReviewCOBRAEligibilityDataType]
    ] = Field(None, min_items=0)


class ReviewPayrollInterfaceDataExtractBusinessSubProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None


class AddRetireeStatusSubProcessDetailsType(BaseModel):
    Retirement_Date: date
    Retirement_Reason_Reference: GeneralEventSubcategoryObjectType
    Retiree_Organization_Reference: RetireeOrganizationObjectType


class AddRetireeStatusSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Add_Retiree_Status_Details: Optional[AddRetireeStatusSubProcessDetailsType] = None


class EndCollectiveAgreementAssignmentDataType(BaseModel):
    Effective_Date: date


class EndCollectiveAgreementAssignmentSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    End_Collective_Agreement_Assignment_Data: Optional[
        EndCollectiveAgreementAssignmentDataType
    ] = None


class EndPayrollInputsSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None


class EndAdditionalJobSubDataType(BaseModel):
    Employee_Reference: EmployeeObjectType
    Position_Reference: PositionElementObjectType
    End_Additional_Job_Date: date
    End_Additional_Job_Event_Data: Optional[EndAdditionalJobEventDataType] = None


class EndAdditionalJobSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    End_Additional_Job_Sub_Data: Optional[EndAdditionalJobSubDataType] = None


class TerminateEmployeeDataType(BaseModel):
    Employee_Reference: EmployeeObjectType
    Termination_Date: date
    Terminate_Event_Data: TerminateEventDataType
    Request_One_Time_Payment_Sub_Process: Optional[
        RequestOneTimePaymentSubBusinessProcessType
    ] = None
    Review_COBRA_Eligibility_Sub_Process: Optional[
        ReviewCOBRAEligibilitySubBusinessProcessType
    ] = None
    Review_Payroll_Interface_Event_Sub_Process: Optional[
        ReviewPayrollInterfaceDataExtractBusinessSubProcessType
    ] = None
    Edit_Service_Dates_Sub_Process: Optional[
        EditServiceDatesSubBusinessProcessType
    ] = None
    Add_Retiree_Status_Sub_Process: Optional[
        AddRetireeStatusSubBusinessProcessType
    ] = None
    Maintain_Employee_Contracts_Sub_Business_Process: Optional[
        MaintainEmployeeContractsSubBusinessProcessType
    ] = None
    Check_Position_Budget_Sub_Process: Optional[
        CheckPositionBudgetSubBusinessProcessType
    ] = None
    Assign_Organization_Roles_Sub_Process: Optional[
        AssignOrganizationRolesSubBusinessProcessType
    ] = None
    Create_Job_Requisition_Sub_Process: Optional[
        CreateJobRequisitionSubProcessType
    ] = None
    End_Academic_Appointment_Sub_Process: Optional[
        EndAcademicAppointmentSubBusinessProcessType
    ] = None
    Assign_Costing_Allocation_Sub_Process: Optional[
        AssignCostingAllocationSubBusinessProcessType
    ] = None
    Manage_Union_Membership_Sub_Process: Optional[
        ManageUnionMembershipSubBusinessProcessType
    ] = None
    End_Collective_Agreement_Assignment_Sub_Process: Optional[
        EndCollectiveAgreementAssignmentSubBusinessProcessType
    ] = None
    End_Payroll_Inputs_Sub_Process: Optional[
        EndPayrollInputsSubBusinessProcessType
    ] = None
    End_Additional_Job_Sub_Process: Optional[
        List[EndAdditionalJobSubBusinessProcessType]
    ] = Field(None, min_items=0)
    Assign_Roles: Optional[AssignRolesSubProcessType] = None
    Manage_Employee_Probation_Period_Sub_Business_Process: Optional[
        ManageProbationPeriodSubBusinessProcessType
    ] = None


class TerminateEmployeeRequestHVType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Terminate_Employee_Data: TerminateEmployeeDataType


class ImportTerminateEmployeeRequestType(BaseModel):
    Terminate_Employee_Information_HV: Optional[
        List[TerminateEmployeeRequestHVType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class PutMaintainWorkingTimeForCountryResponseType(BaseModel):
    Working_Time_Defaulting_Eligibility_Table_Reference: Optional[
        WorkingTimeDefaultingEligibilityTableObjectType
    ] = None
    Application_Instance_Related_Exceptions_Data: Optional[
        List[ApplicationInstanceRelatedExceptionsDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class PutJobFamilyResponseType(BaseModel):
    Job_Family_Reference: Optional[JobFamilyObjectType] = None
    version: Optional[str] = None


class PutRemarkResponseType(BaseModel):
    Remark_Reference: Optional[RemarkObjectType] = None
    version: Optional[str] = None


class GetApplicantsRequestType(BaseModel):
    Request_References: Optional[ApplicantRequestReferencesType] = None
    Request_Criteria: Optional[ApplicantRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[ApplicantResponseGroupType] = None
    version: Optional[str] = None


class JobFamilyRequestReferencesType(BaseModel):
    Job_Family_Reference: List[JobFamilyObjectType] = Field(..., min_items=1)
    Skip_Non_Existing_Instances: Optional[bool] = None


class JobFamiliesRequestCriteriaType(BaseModel):
    Field_And_Parameter_Criteria_Data: Optional[
        FieldAndParameterCriteriaDataType
    ] = None
    Include_InActive_Job_Families: Optional[bool] = None


class JobFamilyResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None
    Include_Job_Profile_Info_Data: Optional[bool] = None


class GetJobFamiliesRequestType(BaseModel):
    Request_References: Optional[JobFamilyRequestReferencesType] = None
    Request_Criteria: Optional[JobFamiliesRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[JobFamilyResponseGroupType] = None
    version: Optional[str] = None


class BusinessProcessTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class BusinessProcessTypeObjectType(BaseModel):
    ID: Optional[List[BusinessProcessTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class StaffingFieldDefaultsSectionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class StaffingFieldDefaultsSectionObjectType(BaseModel):
    ID: Optional[List[StaffingFieldDefaultsSectionObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class StaffingFieldDefaultsConditionRuleDataType(BaseModel):
    Business_Process_Type_Reference: Optional[
        List[BusinessProcessTypeObjectType]
    ] = Field(None, min_items=0)
    Staffing_Field_Defaults_Section_Reference: Optional[
        StaffingFieldDefaultsSectionObjectType
    ] = None
    Condition_Rule_Data: ConditionRuleDataWWSType


class PutStaffingFieldDefaultsConditionRulesRequestType(BaseModel):
    Staffing_Field_Defaults_Condition_Rule_Reference: Optional[
        ConditionRuleObjectType
    ] = None
    Staffing_Field_Defaults_Condition_Rule_Data: StaffingFieldDefaultsConditionRuleDataType
    version: Optional[str] = None


class WorkerRequestReferencesType(BaseModel):
    Worker_Reference: List[WorkerObjectType] = Field(..., min_items=1)
    Skip_Non_Existing_Instances: Optional[bool] = None
    Ignore_Invalid_References: Optional[bool] = None


class TransactionLogObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class TransactionLogObjectType(BaseModel):
    ID: Optional[List[TransactionLogObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class WorkerByNationalIDRequestCriteriaType(BaseModel):
    Identifier_ID: str
    National_ID_Type_Reference: NationalIDTypeObjectType
    Country_Reference: CountryObjectType


class EligibilityCriteriaDataType(BaseModel):
    Field_Reference: IntegrationDocumentFieldObjectType
    As_Of_Effective_Date: Optional[date] = None
    As_Of_Entry_DateTime: Optional[datetime] = None


class WorkerRequestCriteriaType(BaseModel):
    Transaction_Log_Criteria_Data: Optional[List[TransactionLogCriteriaType]] = Field(
        None, min_items=0
    )
    Organization_Reference: Optional[List[OrganizationObjectType]] = Field(
        None, min_items=0
    )
    Country_Reference: Optional[List[CountryObjectType]] = Field(None, min_items=0)
    Include_Subordinate_Organizations: Optional[bool] = None
    Position_Reference: Optional[List[PositionElementObjectType]] = Field(
        None, min_items=0
    )
    Event_Reference: Optional[TransactionLogObjectType] = None
    Benefit_Plan_Reference: Optional[List[BenefitPlanObjectType]] = Field(
        None, min_items=0
    )
    Field_And_Parameter_Criteria_Data: Optional[
        FieldAndParameterCriteriaDataType
    ] = None
    National_ID_Criteria_Data: Optional[
        List[WorkerByNationalIDRequestCriteriaType]
    ] = Field(None, min_items=0)
    Exclude_Inactive_Workers: Optional[bool] = None
    Exclude_Employees: Optional[bool] = None
    Exclude_Contingent_Workers: Optional[bool] = None
    Eligibility_Criteria_Data: Optional[List[EligibilityCriteriaDataType]] = Field(
        None, min_items=0
    )
    Universal_ID_Reference: Optional[List[UniversalIdentifierObjectType]] = Field(
        None, min_items=0
    )


class WorkerResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None
    Include_Personal_Information: Optional[bool] = None
    Show_All_Personal_Information: Optional[bool] = None
    Include_Additional_Jobs: Optional[bool] = None
    Include_Employment_Information: Optional[bool] = None
    Include_Compensation: Optional[bool] = None
    Include_Organizations: Optional[bool] = None
    Exclude_Organization_Support_Role_Data: Optional[bool] = None
    Exclude_Location_Hierarchies: Optional[bool] = None
    Exclude_Cost_Centers: Optional[bool] = None
    Exclude_Cost_Center_Hierarchies: Optional[bool] = None
    Exclude_Companies: Optional[bool] = None
    Exclude_Company_Hierarchies: Optional[bool] = None
    Exclude_Matrix_Organizations: Optional[bool] = None
    Exclude_Pay_Groups: Optional[bool] = None
    Exclude_Regions: Optional[bool] = None
    Exclude_Region_Hierarchies: Optional[bool] = None
    Exclude_Supervisory_Organizations: Optional[bool] = None
    Exclude_Teams: Optional[bool] = None
    Exclude_Custom_Organizations: Optional[bool] = None
    Include_Roles: Optional[bool] = None
    Include_Management_Chain_Data: Optional[bool] = None
    Include_Multiple_Managers_in_Management_Chain_Data: Optional[bool] = None
    Include_Benefit_Enrollments: Optional[bool] = None
    Include_Benefit_Eligibility: Optional[bool] = None
    Include_Related_Persons: Optional[bool] = None
    Include_Qualifications: Optional[bool] = None
    Include_Employee_Review: Optional[bool] = None
    Include_Goals: Optional[bool] = None
    Include_Development_Items: Optional[bool] = None
    Include_Skills: Optional[bool] = None
    Include_Photo: Optional[bool] = None
    Include_Worker_Documents: Optional[bool] = None
    Include_Transaction_Log_Data: Optional[bool] = None
    Include_Subevents_for_Corrected_Transaction: Optional[bool] = None
    Include_Subevents_for_Rescinded_Transaction: Optional[bool] = None
    Include_Succession_Profile: Optional[bool] = None
    Include_Talent_Assessment: Optional[bool] = None
    Include_Employee_Contract_Data: Optional[bool] = None
    Include_Contracts_for_Terminated_Workers: Optional[bool] = None
    Include_Collective_Agreement_Data: Optional[bool] = None
    Include_Probation_Period_Data: Optional[bool] = None
    Include_Extended_Employee_Contract_Details: Optional[bool] = None
    Include_Feedback_Received: Optional[bool] = None
    Include_User_Account: Optional[bool] = None
    Include_Career: Optional[bool] = None
    Include_Account_Provisioning: Optional[bool] = None
    Include_Background_Check_Data: Optional[bool] = None
    Include_Contingent_Worker_Tax_Authority_Form_Information: Optional[bool] = None
    Exclude_Funds: Optional[bool] = None
    Exclude_Fund_Hierarchies: Optional[bool] = None
    Exclude_Grants: Optional[bool] = None
    Exclude_Grant_Hierarchies: Optional[bool] = None
    Exclude_Business_Units: Optional[bool] = None
    Exclude_Business_Unit_Hierarchies: Optional[bool] = None
    Exclude_Programs: Optional[bool] = None
    Exclude_Program_Hierarchies: Optional[bool] = None
    Exclude_Gifts: Optional[bool] = None
    Exclude_Gift_Hierarchies: Optional[bool] = None


class GetWorkersRequestType(BaseModel):
    Request_References: Optional[WorkerRequestReferencesType] = None
    Request_Criteria: Optional[WorkerRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[WorkerResponseGroupType] = None
    version: Optional[str] = None


class GetNoticePeriodsRequestReferencesType(BaseModel):
    Notice_Period_Target_Reference: EmployeeObjectType


class NoticePeriodTargetObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class NoticePeriodTargetObjectType(BaseModel):
    ID: Optional[List[NoticePeriodTargetObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class NoticePeriodDataType(BaseModel):
    Notice_Period_Reference: Optional[UniqueIdentifierObjectType] = None
    Notice_Period_Duration: Optional[float] = None
    Notice_Period_Unit_Reference: Optional[DateAndTimeUnitObjectType] = None
    Date_And_Time_Adjustment_Reference: Optional[UniqueIdentifierObjectType] = None
    Notice_Period_Is_Custom: Optional[bool] = None
    Overridden_Notice_Period_Reference: Optional[UniqueIdentifierObjectType] = None


class NoticePeriodDataEmployerType(BaseModel):
    Notice_Period_Data: Optional[List[NoticePeriodDataType]] = Field(None, min_items=0)


class NoticePeriodDataEmployeeType(BaseModel):
    Notice_Period_Data: Optional[List[NoticePeriodDataType]] = Field(None, min_items=0)


class NoticePeriodDataForNoticePeriodTargetType(BaseModel):
    Notice_Period_Target_Reference: Optional[NoticePeriodTargetObjectType] = None
    Location_Reference: Optional[LocationObjectType] = None
    Employer_Notice_Period_Data: Optional[List[NoticePeriodDataEmployerType]] = Field(
        None, min_items=0
    )
    Employee_Notice_Period_Data: Optional[List[NoticePeriodDataEmployeeType]] = Field(
        None, min_items=0
    )


class GetNoticePeriodsResponseDataType(BaseModel):
    Notice_Period_Data_for_Notice_Period_Target: Optional[
        List[NoticePeriodDataForNoticePeriodTargetType]
    ] = Field(None, min_items=0)


class GetNoticePeriodsForWorkerResponseType(BaseModel):
    Request_References: Optional[GetNoticePeriodsRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[GetNoticePeriodsResponseDataType] = None
    version: Optional[str] = None


class GetNoticePeriodEligibilityRulesRequestType(BaseModel):
    Request_References: Optional[
        NoticePeriodEligibilityRuleRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class ChangeWorkSpaceResponseType(BaseModel):
    Work_Space_Change_Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class EditCreditableServiceResponseType(BaseModel):
    Creditable_Service_Change_Reference: Optional[UniqueIdentifierObjectType] = None
    Creditable_Service_Data: Optional[List[CreditableServiceDataType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class GetGlobalStaffingEligibilityRulesRequestType(BaseModel):
    Request_References: Optional[
        GlobalStaffingEligibilityRulesRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class PutWorkerDocumentResponseType(BaseModel):
    Worker_Document_Reference: Optional[WorkerDocumentObjectType] = None
    version: Optional[str] = None


class PositionRestrictionsCustomObjectDataType(BaseModel):
    Effective_Date: Optional[date] = None
    Position_Restrictions_Reference: Optional[PositionRestrictionsObjectType] = None
    Business_Object_Additional_Data: Optional[
        List[EffectiveDatedWebServiceAdditionalDataType]
    ] = Field(None, min_items=0)


class EditPositionRestrictionsAdditionalDataRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Position_Restrictions_Custom_Object_Data: PositionRestrictionsCustomObjectDataType
    version: Optional[str] = None


class PutStaffingFieldDefaultsConditionRulesResponseType(BaseModel):
    Staffing_Field_Defaults_Condition_Rule_Reference: Optional[
        ConditionRuleObjectType
    ] = None
    version: Optional[str] = None


class GetProbationPeriodEligibilityRulesRequestType(BaseModel):
    Request_References: Optional[
        ProbationPeriodEligibilityRuleRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class CorrectContractContingentWorkerResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class ContractContingentWorkerResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Contingent_Worker_Reference: Optional[WorkerObjectType] = None
    Position_Reference: Optional[PositionElementObjectType] = None
    Applicant_Reference: Optional[ApplicantObjectType] = None
    Exceptions_Response_Data: Optional[
        List[ApplicationInstanceRelatedExceptionsDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class RemarkRequestReferencesType(BaseModel):
    Remark_Reference: List[RemarkObjectType] = Field(..., min_items=1)


class GetRemarksRequestType(BaseModel):
    Request_References: Optional[RemarkRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class AcademicAffiliateObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AcademicAffiliateObjectType(BaseModel):
    ID: Optional[List[AcademicAffiliateObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CreateApplicantDataType(BaseModel):
    Applicant_ID: Optional[str] = None
    Personal_Data: Optional[PersonalInformationDataType] = None
    External_Integration_ID_Data: Optional[ExternalIntegrationIDDataType] = None


class HireEmployeeEventDataType(BaseModel):
    Employee_ID: Optional[str] = None
    Position_ID: Optional[str] = None
    Hire_Reason_Reference: Optional[GeneralEventSubcategoryObjectType] = None
    Employee_Type_Reference: Optional[PositionWorkerTypeObjectType] = None
    First_Day_of_Work: Optional[date] = None
    Time_of_Hire: Optional[time] = None
    Continuous_Service_Date: Optional[date] = None
    Probation_Start_Date: Optional[date] = None
    Probation_End_Date: Optional[date] = None
    Employment_End_Date: Optional[date] = None
    Benefits_Service_Date: Optional[date] = None
    Company_Service_Date: Optional[date] = None
    Conversion_Position_Start_Date: Optional[date] = None
    Position_Details: PositionDetailsSubDataType
    Employee_External_ID_Data: Optional[ExternalIDDataType] = None


class CompensationProposedForEmploymentDataType(BaseModel):
    Primary_Compensation_Basis: Optional[float] = None
    Compensation_Guidelines_Data: Optional[CompensatableGuidelinesDataType] = None
    Pay_Plan_Data: Optional[ProposedBasePayPlanJobAssignmentContainerDataType] = None
    Unit_Salary_Plan_Data: Optional[
        ProposedSalaryUnitPlanAssignmentContainerDataType
    ] = None
    Allowance_Plan_Data: Optional[
        ProposedAllowancePlanAssignmentContainerDataType
    ] = None
    Unit_Allowance_Plan_Data: Optional[
        ProposedAllowanceUnitPlanAssignmentContainerDataType
    ] = None
    Bonus_Plan_Data: Optional[ProposedBonusPlanAssignmentContainerDataType] = None
    Merit_Plan_Data: Optional[ProposedMeritPlanAssignmentContainerDataType] = None
    Commission_Plan_Data: Optional[
        ProposedCommissionPlanAssignmentContainerDataType
    ] = None
    Stock_Plan_Data: Optional[ProposedStockPlanAssignmentContainerDataType] = None
    Period_Salary_Plan_Data: Optional[
        ProposedPeriodSalaryPlanAssignmentContainerDataType
    ] = None
    Calculated_Plan_Data: Optional[
        ProposedCalculatedPlanAssignmentContainerDataType
    ] = None


class ProposeCompensationForEmploymentSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Propose_Compensation_for_Hire_Data: Optional[
        CompensationProposedForEmploymentDataType
    ] = None


class UpdateIDInformationSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Person_Identification_Data: Optional[List[PersonIdentificationDataType]] = Field(
        None, min_items=0
    )


class EditGovernmentIDsSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Government_Identification_Data: Optional[
        List[GovernmentIdentificationDataType]
    ] = Field(None, min_items=0)


class EditPassportsAndVisasSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Passports_and_Visas_Identification_Data: Optional[
        List[PassportsAndVisasIdentificationDataType]
    ] = Field(None, min_items=0)


class EditLicensesSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    License_Identification_Data: Optional[List[LicenseIdentificationDataType]] = Field(
        None, min_items=0
    )


class CustomIdentificationDataType(BaseModel):
    Custom_ID: Optional[List[CustomIDType]] = Field(None, min_items=0)
    Replace_All: Optional[bool] = None


class EditCustomIDsSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Custom_Identification_Data: Optional[List[CustomIdentificationDataType]] = Field(
        None, min_items=0
    )


class EventDrivenIntegrationSetupDataType(BaseModel):
    Enable_Event_Driven_Integration_for_Third_Party_Payroll: Optional[bool] = None


class TransmitDataToThirdPartyPayrollSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Event_Driven_Integration_Setup_Data: Optional[
        EventDrivenIntegrationSetupDataType
    ] = None


class OneTimePaymentForReferralSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Effective_Date: Optional[date] = None
    Reason_Reference: Optional[EventClassificationSubcategoryObjectType] = None


class LocaleObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LocaleObjectType(BaseModel):
    ID: Optional[List[LocaleObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class UserLanguageObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class UserLanguageObjectType(BaseModel):
    ID: Optional[List[UserLanguageObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class IntegrationSystemAuditedObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class IntegrationSystemAuditedObjectType(BaseModel):
    ID: Optional[List[IntegrationSystemAuditedObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class NotificationCategorizableObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class NotificationCategorizableObjectType(BaseModel):
    ID: Optional[List[NotificationCategorizableObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class UserNotificationFrequencyConfigurationDataType(BaseModel):
    Channel_Reference: UniqueIdentifierObjectType
    Delivery_Frequency_Reference: UniqueIdentifierObjectType


class NotificationSubTypeConfigurationType(BaseModel):
    Notification_Sub_Type_Reference: Optional[
        NotificationCategorizableObjectType
    ] = None
    User_Notification_Frequency_Configuration: Optional[
        List[UserNotificationFrequencyConfigurationDataType]
    ] = Field(None, min_items=0)


class NotificationSubCategoryConfigurationsForUsersType(BaseModel):
    Notification_Sub_Type_Configuration: Optional[
        List[NotificationSubTypeConfigurationType]
    ] = Field(None, min_items=0)


class SystemUserDataType(BaseModel):
    User_Name: str
    Session_Timeout_Minutes: Optional[float] = None
    Account_Disabled: Optional[bool] = None
    Account_Expiration_Date: Optional[datetime] = None
    Account_Locked: Optional[bool] = None
    Required_New_Password_At_Next_Login: Optional[bool] = None
    Show_User_Name_in_Browser_Window: Optional[bool] = None
    Display_XML_Icon_on_Reports: Optional[bool] = None
    Enable_Workbox: Optional[bool] = None
    Locale_Reference: Optional[LocaleObjectType] = None
    User_Language_Reference: Optional[UserLanguageObjectType] = None
    Preferred_Search_Scope_Reference: Optional[UniqueIdentifierObjectType] = None
    Delegated_Authentication_Integration_System_Reference: Optional[
        IntegrationSystemAuditedObjectType
    ] = None
    Allow_MixedLanguage_Transactions: Optional[bool] = None
    Notification_Sub_Type_Configurations: Optional[
        List[NotificationSubCategoryConfigurationsForUsersType]
    ] = Field(None, min_items=0)
    Password: Optional[str] = None
    Generate_Random_Password: Optional[bool] = None
    Exempt_from_Delegated_Authentication: Optional[bool] = None
    Passcode_Exempt: Optional[bool] = None
    Passcode_Grace_Period_Enabled: Optional[bool] = None
    Passcode_Grace_Period_Login_Remaining_Count: Optional[float] = None
    OpenID_Identifier: Optional[str] = None
    OpenID_Internal_Identifier: Optional[str] = None
    OpenID_Connect_Internal_Identifier: Optional[str] = None
    Simplified_View: Optional[bool] = None


class CreateWorkdayAccountSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Create_Workday_Account_Data: Optional[SystemUserDataType] = None


class CreateProvisioningEventSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None


class BenefitLifeEventTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class BenefitLifeEventTypeObjectType(BaseModel):
    ID: Optional[List[BenefitLifeEventTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CreateBenefitLifeEventDataType(BaseModel):
    Life_Event_Type_Reference: BenefitLifeEventTypeObjectType
    Life_Event_Date: Optional[date] = None
    Submit_Elections_By: Optional[date] = None


class CreateBenefitLifeEventSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Create_Benefit_Life_Event_Data: Optional[CreateBenefitLifeEventDataType] = None


class EditCreditableServiceSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Creditable_Service_Data: Optional[List[CreditableServiceDataType]] = Field(
        None, min_items=0
    )


class RemoveRetireeStatusSubProcessDetailsType(BaseModel):
    End_Retirement_Date: date
    Reason_Reference: GeneralEventSubcategoryObjectType


class RemoveRetireeStatusSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Remove_Retiree_Status_Details: Optional[
        RemoveRetireeStatusSubProcessDetailsType
    ] = None


class EditBackgroundCheckDataType(BaseModel):
    Status_Date: date
    Status_Reference: BackgroundCheckStatusObjectType
    Status_Comment: Optional[str] = None


class EditBackgroundCheckSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Edit_Background_Check_Data: Optional[EditBackgroundCheckDataType] = None


class GenericDisabilityStatusSubDataType(BaseModel):
    Disability_Reference: DisabilityObjectType
    Disability_Status_Date: Optional[date] = None
    Disability_Date_Known: Optional[date] = None
    Disability_End_Date: Optional[date] = None
    Disability_Grade_Reference: Optional[DisabilityGradeObjectType] = None
    Disability_Degree: Optional[float] = None
    Disability_Remaining_Capacity: Optional[float] = None
    Disability_Certification_Authority_Reference: Optional[
        DisabilityCertificationAuthorityObjectType
    ] = None
    Disability_Authority: Optional[str] = None
    Disability_Certified_At: Optional[str] = None
    Disability_Certification_ID: Optional[str] = None
    Disability_Certification_Basis_Reference: Optional[
        DisabilityCertificationBasisObjectType
    ] = None
    Disability_Severity_Recognition_Date: Optional[date] = None
    Disability_FTE_Toward_Quota: Optional[float] = None
    Disability_Work_Restrictions: Optional[str] = None
    Disability_Accommodations_Requested: Optional[str] = None
    Disability_Accommodations_Provided: Optional[str] = None
    Disability_Rehabilitation_Requested: Optional[str] = None
    Disability_Rehabilitation_Provided: Optional[str] = None
    Note: Optional[str] = None
    Worker_Document_Reference: Optional[List[WorkerDocumentObjectType]] = Field(
        None, min_items=0
    )


class GenericDisabilityStatusInformationDataType(BaseModel):
    Disability_Status_Reference: Optional[DisabilityStatusReferenceObjectType] = None
    Disability_Status_Data: Optional[GenericDisabilityStatusSubDataType] = None
    Delete: Optional[bool] = None


class GenericDisabilityInformationDataType(BaseModel):
    Disability_Status_Information_Data: Optional[
        List[GenericDisabilityStatusInformationDataType]
    ] = Field(None, min_items=0)
    Replace_All: Optional[bool] = None


class GenericPersonalInformationDataType(BaseModel):
    Gender_Reference: Optional[GenderObjectType] = None
    Date_of_Birth: Optional[date] = None
    Date_of_Death: Optional[date] = None
    Birth_Country_Reference: Optional[CountryObjectType] = None
    Birth_Region_Reference: Optional[CountryRegionObjectType] = None
    City_of_Birth: Optional[str] = None
    Marital_Status_Reference: Optional[MaritalStatusObjectType] = None
    Marital_Status_Date: Optional[date] = None
    Ethnicity_Reference: Optional[List[EthnicityObjectType]] = Field(None, min_items=0)
    Hispanic_or_Latino: Optional[bool] = None
    Religion_Reference: Optional[ReligionObjectType] = None
    Citizenship_Reference: Optional[List[CitizenshipStatusObjectType]] = Field(
        None, min_items=0
    )
    Nationality_Reference: Optional[CountryAndNationalityObjectType] = None
    Hukou_Region_Reference: Optional[CountryRegionObjectType] = None
    Hukou_Subregion_Reference: Optional[CountrySubregionObjectType] = None
    Hukou_Locality: Optional[str] = None
    Hukou_Postal_Code: Optional[str] = None
    Hukou_Type_Reference: Optional[HukouTypeObjectType] = None
    Native_Region_Reference: Optional[CountryRegionObjectType] = None
    Personnel_File_Agency: Optional[str] = None
    Political_Affiliation_Reference: Optional[PoliticalAffiliationObjectType] = None
    Social_Benefits_Locality_Reference: Optional[
        SocialBenefitsLocalityObjectType
    ] = None
    Last_Medical_Exam_Date: Optional[date] = None
    Last_Medical_Exam_Valid_To: Optional[date] = None
    Medical_Exam_Notes: Optional[str] = None
    Disability_Information_Data: Optional[
        List[GenericDisabilityInformationDataType]
    ] = Field(None, min_items=0)
    Military_Information_Data: Optional[
        List[GenericMilitaryInformationDataType]
    ] = Field(None, min_items=0)
    Uses_Tobacco: Optional[bool] = None


class PersonPhotoDataType(BaseModel):
    Filename: Optional[str] = None
    File: List[int]


class CreateAcademicAffiliateDataType(BaseModel):
    ID: Optional[str] = None
    Person_Name_Data: Optional[PersonNameDataType] = None
    Contact_Information_Data: Optional[ContactInformationDataType] = None
    Personal_Information_Data: Optional[GenericPersonalInformationDataType] = None
    Person_Identification_Data: Optional[PersonIdentificationDataType] = None
    Person_Photo_Data: Optional[PersonPhotoDataType] = None
    Location_Contexts_Reference: Optional[List[LocationContextObjectType]] = Field(
        None, min_items=0
    )


class PersonQualificationSourceCategoryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PersonQualificationSourceCategoryObjectType(BaseModel):
    ID: Optional[List[PersonQualificationSourceCategoryObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class ManageProfessionalAffiliationDataForRoleType(BaseModel):
    Role_Reference: Optional[RoleObjectType] = None
    Source_Reference: Optional[PersonQualificationSourceCategoryObjectType] = None
    Professional_Affiliation: Optional[List[ProfessionalAffiliationSkillType]] = Field(
        None, min_items=0
    )


class ManageProfessionalAffiliationSubBusinessProcessDataType(BaseModel):
    Business_Sub_Process_Parameters: Optional[
        List[BusinessSubProcessParametersType]
    ] = Field(None, min_items=0)
    Manage_Professional_Affiliation_Data: Optional[
        List[ManageProfessionalAffiliationDataForRoleType]
    ] = Field(None, min_items=0)


class ManageEducationDataForRoleType(BaseModel):
    Role_Reference: Optional[RoleObjectType] = None
    Source_Reference: Optional[PersonQualificationSourceCategoryObjectType] = None
    Education: Optional[List[EducationType]] = Field(None, min_items=0)


class ManageEducationSubBusinessProcessDataType(BaseModel):
    Business_Sub_Process_Parameters: Optional[
        List[BusinessSubProcessParametersType]
    ] = Field(None, min_items=0)
    Manage_Education_Data: Optional[List[ManageEducationDataForRoleType]] = Field(
        None, min_items=0
    )


class CourseSubjectObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CourseSubjectObjectType(BaseModel):
    ID: Optional[List[CourseSubjectObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CourseDefinitionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CourseDefinitionObjectType(BaseModel):
    ID: Optional[List[CourseDefinitionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DeliveryModeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DeliveryModeObjectType(BaseModel):
    ID: Optional[List[DeliveryModeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class StudentCourseTagObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class StudentCourseTagObjectType(BaseModel):
    ID: Optional[List[StudentCourseTagObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EducationalTaxonomyCodeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EducationalTaxonomyCodeObjectType(BaseModel):
    ID: Optional[List[EducationalTaxonomyCodeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class InstructorEligibilityLineDataType(BaseModel):
    Assignable_Role_Reference: Optional[List[AssignableRoleObjectType]] = Field(
        None, min_items=0
    )
    Academic_Unit_Reference: Optional[AcademicUnitObjectType] = None
    Academic_Level_Reference: Optional[List[AcademicLevelObjectType]] = Field(
        None, min_items=0
    )
    Course_Subject_Reference: Optional[List[CourseSubjectObjectType]] = Field(
        None, min_items=0
    )
    Course_Reference: Optional[List[CourseDefinitionObjectType]] = Field(
        None, min_items=0
    )
    Delivery_Mode_Reference: Optional[List[DeliveryModeObjectType]] = Field(
        None, min_items=0
    )
    Course_Tag_Reference: Optional[List[StudentCourseTagObjectType]] = Field(
        None, min_items=0
    )
    Location_Reference: Optional[List[LocationObjectType]] = Field(None, min_items=0)
    Educational_Taxonomy_Code_Reference: Optional[
        List[EducationalTaxonomyCodeObjectType]
    ] = Field(None, min_items=0)


class ManageInstructorEligibilitySubBusinessProcessDataType(BaseModel):
    Business_Sub_Process_Parameters: Optional[
        List[BusinessSubProcessParametersType]
    ] = Field(None, min_items=0)
    Instructor_Eligibility_Line_Data: Optional[
        List[InstructorEligibilityLineDataType]
    ] = Field(None, min_items=0)


class AddAcademicAppointmentDataType(BaseModel):
    Reason_Reference: GeneralEventSubcategoryObjectType
    Add_Academic_Affiliate_Status: Optional[bool] = None
    Academic_Appointee_Reference: Optional[AcademicAppointeeEnabledObjectType] = None
    Create_Academic_Affiliate_Data: Optional[CreateAcademicAffiliateDataType] = None
    Academic_Appointment_Data: AcademicAppointmentSnapshotDataType
    Create_Workday_Account_Sub_Business_Process_for_Academic_Affiliate: Optional[
        CreateWorkdayAccountSubBusinessProcessType
    ] = None
    Manage_Professional_Affiliation_Sub_Business_Process_for_Academic_Affiliate: Optional[
        List[ManageProfessionalAffiliationSubBusinessProcessDataType]
    ] = Field(
        None, min_items=0
    )
    Manage_Education_Sub_Business_Process_for_Academic_Affiliate: Optional[
        List[ManageEducationSubBusinessProcessDataType]
    ] = Field(None, min_items=0)
    Manage_Instructor_Eligibility_Sub_Business_Process_for_Academic_Affiliate: Optional[
        List[ManageInstructorEligibilitySubBusinessProcessDataType]
    ] = Field(None, min_items=0)


class AddAcademicAppointmentSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Add_Academic_Appointment_Data: Optional[AddAcademicAppointmentDataType] = None


class EmergencyContactObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmergencyContactObjectType(BaseModel):
    ID: Optional[List[EmergencyContactObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmergencyContactPersonalInformationDataType(BaseModel):
    Person_Name_Data: Optional[List[PersonNameDataType]] = Field(None, min_items=0)
    Contact_Information_Data: Optional[List[ContactInformationDataType]] = Field(
        None, min_items=0
    )


class ChangeEmergencyContactDataType(BaseModel):
    Emergency_Contact_ID: Optional[str] = None
    Primary: Optional[bool] = None
    Priority: float
    Related_Person_Relationship_Reference: List[
        RelatedPersonRelationshipObjectType
    ] = Field(..., min_items=1)
    Language_Reference: Optional[List[LanguageObjectType]] = Field(None, min_items=0)
    Emergency_Contact_Personal_Information_Data: Optional[
        EmergencyContactPersonalInformationDataType
    ] = None


class ChangeEmergencyContactsDataType(BaseModel):
    Emergency_Contact_Reference: Optional[EmergencyContactObjectType] = None
    Delete: Optional[bool] = None
    Emergency_Contact_Data: Optional[ChangeEmergencyContactDataType] = None


class ChangeEmergencyContactsSubDataType(BaseModel):
    Replace_All: Optional[bool] = None
    Emergency_Contacts_Reference_Data: Optional[
        List[ChangeEmergencyContactsDataType]
    ] = Field(None, min_items=0)


class ChangeEmergencyContactsSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Change_Emergency_Contacts_Data: Optional[ChangeEmergencyContactsSubDataType] = None


class FlexibleWorkArrangementSubtypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class FlexibleWorkArrangementSubtypeObjectType(BaseModel):
    ID: Optional[List[FlexibleWorkArrangementSubtypeObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class DayOfTheWeekObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DayOfTheWeekObjectType(BaseModel):
    ID: Optional[List[DayOfTheWeekObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AddFlexibleWorkArrangementTypeDetailsDataType(BaseModel):
    Flexible_Work_Arrangement_Type_Reference: FlexibleWorkArrangementSubtypeObjectType
    Hours_Per_Week: Optional[float] = None
    Days_Per_Week: Optional[float] = None
    Days_Of_Week_Reference: Optional[List[DayOfTheWeekObjectType]] = Field(
        None, min_items=0
    )


class AddFlexibleWorkArrangementSubProcessEventDataType(BaseModel):
    Start_Date: Optional[date] = None
    Proposed_End_Date: Optional[date] = None
    Reason_Reference: Optional[GeneralEventSubcategoryObjectType] = None
    Add_Flexible_Work_Arrangement_Type_Details_Data: AddFlexibleWorkArrangementTypeDetailsDataType


class AddFlexibleWorkArrangementSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Add_Flexible_Work_Arrangement_Sub_Process_Event_Data: Optional[
        AddFlexibleWorkArrangementSubProcessEventDataType
    ] = None


class HireEmployeeBusinessProcessDataType(BaseModel):
    Applicant_Reference: ApplicantObjectType
    Former_Worker_Reference: FormerWorkerObjectType
    Student_Reference: StudentObjectType
    Academic_Affiliate_Reference: AcademicAffiliateObjectType
    Applicant_Data: CreateApplicantDataType
    Organization_Reference: Optional[SupervisoryOrganizationObjectType] = None
    Position_Reference: Optional[PositionRestrictionsObjectType] = None
    Job_Requisition_Reference: Optional[JobRequisitionObjectType] = None
    Hire_Date: Optional[date] = None
    Hire_Employee_Event_Data: HireEmployeeEventDataType
    Propose_Compensation_for_Hire_Sub_Process: Optional[
        ProposeCompensationForEmploymentSubBusinessProcessType
    ] = None
    Update_ID_Information_Sub_Process: Optional[
        UpdateIDInformationSubBusinessProcessType
    ] = None
    Edit_Government_IDs_Sub_Process: Optional[
        EditGovernmentIDsSubBusinessProcessType
    ] = None
    Edit_Passports_and_Visas_Sub_Process: Optional[
        EditPassportsAndVisasSubBusinessProcessType
    ] = None
    Edit_License_Sub_Process: Optional[EditLicensesSubBusinessProcessType] = None
    Edit_Custom_IDs_Sub_Process: Optional[EditCustomIDsSubBusinessProcessType] = None
    Edit_Assign_Organization_Sub_Process: Optional[
        EditAssignPositionOrganizationSubBusinessProcessType
    ] = None
    Assign_Pay_Group_Sub_Process: Optional[AssignPayGroupSubBusinessProcessType] = None
    Transmit_Data_to_Third_Party_Payroll_Sub_Process: Optional[
        TransmitDataToThirdPartyPayrollSubBusinessProcessType
    ] = None
    Request_One_Time_Payment_Sub_Process: Optional[
        RequestOneTimePaymentSubBusinessProcessType
    ] = None
    Request_One_Time_Payment_for_Referral_Sub_Process: Optional[
        OneTimePaymentForReferralSubBusinessProcessType
    ] = None
    Request_Stock_Grant_Sub_Process: Optional[RequestStockSubBusinessProcessType] = None
    Create_Workday_Account_Sub_Process: Optional[
        CreateWorkdayAccountSubBusinessProcessType
    ] = None
    Assign_Matrix_Organization_Sub_Process: Optional[
        AssignMatrixOrganizationSubBusinessProcessType
    ] = None
    Change_Personal_Information_Sub_Process: Optional[
        ChangePersonalInformationSubBusinessProcessType
    ] = None
    Create_Provisioning_Event_Sub_Process: Optional[
        CreateProvisioningEventSubBusinessProcessType
    ] = None
    Create_Benefit_Life_Event_Sub_Process: Optional[
        CreateBenefitLifeEventSubBusinessProcessType
    ] = None
    Maintain_Employee_Contracts_Sub_Business_Process: Optional[
        MaintainEmployeeContractsSubBusinessProcessType
    ] = None
    Edit_Creditable_Service_Sub_Process: Optional[
        EditCreditableServiceSubBusinessProcessType
    ] = None
    Edit_Service_Dates_Sub_Process: Optional[
        EditServiceDatesSubBusinessProcessType
    ] = None
    Remove_Retiree_Status_Sub_Process: Optional[
        RemoveRetireeStatusSubBusinessProcessType
    ] = None
    Check_Position_Budget_Sub_Process: Optional[
        CheckPositionBudgetSubBusinessProcessType
    ] = None
    Assign_Costing_Allocation_Sub_Process: Optional[
        AssignCostingAllocationSubBusinessProcessType
    ] = None
    Edit_Background_Check_Sub_Process: Optional[
        EditBackgroundCheckSubBusinessProcessType
    ] = None
    Add_Academic_Appointment_Sub_Process: Optional[
        AddAcademicAppointmentSubBusinessProcessType
    ] = None
    Assign_Employee_Collective_Agreement_Sub_Process: Optional[
        AssignEmployeeCollectiveAgreementSubBusinessProcessType
    ] = None
    Manage_Employee_Probation_Period_Sub_Business_Process: Optional[
        ManageProbationPeriodSubBusinessProcessType
    ] = None
    Emergency_Contacts_Sub_Process: Optional[
        ChangeEmergencyContactsSubBusinessProcessType
    ] = None
    Onboarding_Setup_Sub_Process: Optional[OnboardingSetupSubBusinessProcessType] = None
    Student_Employment_Eligibility_Sub_Process: Optional[
        StudentEmploymentEligibilitySubBusinessProcessType
    ] = None
    Manage_Union_Membership_Sub_Process: Optional[
        ManageUnionMembershipSubBusinessProcessType
    ] = None
    Edit_Notice_Periods_Sub_Process: Optional[
        EditNoticePeriodsSubBusinessProcessType
    ] = None
    Add_Flexible_Work_Arrangement_Sub_Process: Optional[
        AddFlexibleWorkArrangementSubBusinessProcessType
    ] = None
    Assign_Establishment_Sub_Process: Optional[
        AssignEstablishmentSubBusinessProcessType
    ] = None


class HireEmployeeRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Hire_Employee_Data: HireEmployeeBusinessProcessDataType
    version: Optional[str] = None


class PutStudentEmploymentEligibilityRuleSetRequestType(BaseModel):
    Student_Employment_Eligibility_Rule_Set_Reference: Optional[
        StudentEmploymentEligibilityRuleSetObjectType
    ] = None
    Student_Employment_Eligibility_Rule_Set_Data: StudentEmploymentEligibilityRuleSetDataType
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class GetNoticePeriodEligibilityRulesWithoutDependenciesRequestType(BaseModel):
    Request_References: Optional[
        NoticePeriodEligibilityRuleRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class PutJobOverlapRoutingExclusionRuleResponseType(BaseModel):
    Job_Overlap_Routing_Exclusion_Rule_Reference: Optional[
        ConditionRuleObjectType
    ] = None
    version: Optional[str] = None


class ChangeOrganizationAssignmentsRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Change_Organization_Assignments_Data: ChangeOrganizationAssignmentsDataType
    version: Optional[str] = None


class PositionGroupFreezeEventDataType(BaseModel):
    Reason_Reference: Optional[GeneralEventSubcategoryObjectType] = None
    Freeze_Date: date
    Frozen_Position: Optional[bool] = None


class PositionGroupFreezeDataType(BaseModel):
    Position_Reference: PositionRestrictionsObjectType
    Freeze_Event_Data: PositionGroupFreezeEventDataType


class FreezePositionRequestType(BaseModel):
    Freeze_Position_Data: PositionGroupFreezeDataType
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    version: Optional[str] = None


class FilledPositionEditDetailsDataType(BaseModel):
    Position_ID: Optional[str] = None
    Employee_Type_Reference: Optional[EmployeeTypeObjectType] = None
    Contingent_Worker_Type_Reference: Optional[ContingentWorkerTypeObjectType] = None
    Position_Details_Sub_Data: Optional[PositionDetailsSubDataType] = None
    End_Employment_Date: Optional[date] = None
    Contract_End_Date: Optional[date] = None
    Contract_Details_Data: Optional[ContractDetailsSubDataType] = None
    Exclude_from_Headcount: Optional[bool] = None
    Expected_Assignment_End_Date: Optional[date] = None
    Assignment_Type_Reference: Optional[AssignmentTypeObjectType] = None


class EditPositionEventDataType(BaseModel):
    Position_Change_Reason_Reference: Optional[GeneralEventSubcategoryObjectType] = None
    Filled_Position_Edit_Details_Data: FilledPositionEditDetailsDataType


class CompensationPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CompensationPlanObjectType(BaseModel):
    ID: Optional[List[CompensationPlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class RemoveCompensationPlanAssignmentDataType(BaseModel):
    Compensation_Plan_Reference: Optional[List[CompensationPlanObjectType]] = Field(
        None, min_items=0
    )


class CompensationChangeDataType(BaseModel):
    Reason_Reference: EventClassificationSubcategoryObjectType
    Override_Compensation_Basis_Calculation: Optional[bool] = None
    Primary_Compensation_Basis: Optional[float] = None
    Primary_Compensation_Basis_Amount_Change: Optional[float] = None
    Primary_Compensation_Basis_Percent_Change: Optional[float] = None
    Compensation_Guidelines_Data: Optional[CompensatableGuidelinesDataType] = None
    Pay_Plan_Data: Optional[ProposedBasePayPlanAssignmentContainerDataType] = None
    Unit_Salary_Plan_Data: Optional[
        ProposedSalaryUnitPlanAssignmentContainerDataType
    ] = None
    Allowance_Plan_Data: Optional[
        ProposedAllowancePlanAssignmentContainerDataType
    ] = None
    Unit_Allowance_Plan_Data: Optional[
        ProposedAllowanceUnitPlanAssignmentContainerDataType
    ] = None
    Bonus_Plan_Data: Optional[ProposedBonusPlanAssignmentContainerDataType] = None
    Merit_Plan_Data: Optional[ProposedMeritPlanAssignmentContainerDataType] = None
    Commission_Plan_Data: Optional[
        ProposedCommissionPlanAssignmentContainerDataType
    ] = None
    Stock_Plan_Data: Optional[ProposedStockPlanAssignmentContainerDataType] = None
    Remove_Plan_Data: Optional[List[RemoveCompensationPlanAssignmentDataType]] = Field(
        None, min_items=0
    )
    Period_Salary_Plan_Data: Optional[
        ProposedPeriodSalaryPlanAssignmentContainerDataType
    ] = None
    Calculated_Plan_Data: Optional[
        ProposedCalculatedPlanAssignmentContainerDataType
    ] = None


class RequestCompensationForEditPositionSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Request_Compensation_Change_Data: Optional[CompensationChangeDataType] = None


class EditPositionDataType(BaseModel):
    Worker_Reference: Optional[WorkerObjectType] = None
    Position_Reference: Optional[PositionElementObjectType] = None
    Effective_Date: date
    Edit_Position_Event_Data: EditPositionEventDataType
    Request_Compensation_Change_Sub_Process: Optional[
        RequestCompensationForEditPositionSubBusinessProcessType
    ] = None
    Edit_Assign_Organization_Sub_Process: Optional[
        EditAssignPositionOrganizationSubBusinessProcessType
    ] = None
    Assign_Pay_Group_Sub_Process: Optional[AssignPayGroupSubBusinessProcessType] = None
    Assign_Matrix_Organization_Sub_Process: Optional[
        AssignMatrixOrganizationSubBusinessProcessType
    ] = None
    Change_Personal_Information_Sub_Process: Optional[
        ChangePersonalInformationSubBusinessProcessType
    ] = None
    Request_Default_Compensation_Sub_Process: Optional[
        RequestCompensationDefaultSubBusinessProcessType
    ] = None
    Edit_Service_Dates_Sub_Process: Optional[
        EditServiceDatesSubBusinessProcessType
    ] = None
    Remove_Retiree_Status_Sub_Process: Optional[
        RemoveRetireeStatusSubBusinessProcessType
    ] = None
    Maintain_Employee_Contracts_Sub_Business_Process: Optional[
        MaintainEmployeeContractsSubBusinessProcessType
    ] = None
    Check_Position_Budget_Sub_Process: Optional[
        CheckPositionBudgetSubBusinessProcessType
    ] = None
    Update_Academic_Appointment_Sub_Process: Optional[
        UpdateAcademicAppointmentSubProcessType
    ] = None
    Assign_Costing_Allocation_Sub_Process: Optional[
        AssignCostingAllocationSubBusinessProcessType
    ] = None
    Manage_Union_Membership_Sub_Process: Optional[
        ManageUnionMembershipSubBusinessProcessType
    ] = None
    Assign_Establishment_Sub_Process: Optional[
        AssignEstablishmentSubBusinessProcessType
    ] = None


class EditPositionRequestHVType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Edit_Position_Data: EditPositionDataType


class ImportEditPositionRequestType(BaseModel):
    Edit_Position_Request_HV: Optional[List[EditPositionRequestHVType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class GetProbationPeriodEligibilityRulesWithoutDependenciesResponseType(BaseModel):
    Request_References: Optional[
        List[ProbationPeriodEligibilityRuleRequestReferencesType]
    ] = Field(None, min_items=0)
    Response_Filter: Optional[List[ResponseFilterType]] = Field(None, min_items=0)
    Response_Results: Optional[List[ResponseResultsType]] = Field(None, min_items=0)
    Response_Data: Optional[
        List[ProbationPeriodEligibilityRuleResponseDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class LegalAuthorityRequestReferencesType(BaseModel):
    Legal_Authority_Reference: List[LegalAuthorityObjectType] = Field(..., min_items=1)


class GetLegalAuthoritiesRequestType(BaseModel):
    Request_References: Optional[LegalAuthorityRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class PutProbationPeriodOutcomeRequestType(BaseModel):
    Add_Only: Optional[bool] = None
    Probation_Period_Outcome_Reference: Optional[
        ProbationPeriodOutcomeObjectType
    ] = None
    Probation_Period_Outcome_Data: ProbationPeriodOutcomeDataType
    version: Optional[str] = None


class PaymentTermsObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PaymentTermsObjectType(BaseModel):
    ID: Optional[List[PaymentTermsObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PurchaseOrderContractDetailsDataType(BaseModel):
    Company_for_Purchase_Order_Reference: Optional[CompanyObjectType] = None
    Requester_Reference: Optional[WorkerObjectType] = None
    Spend_Category_Reference: Optional[SpendCategoryObjectType] = None
    Contract_Amount: Optional[float] = None
    Worktags_Reference: Optional[List[AuditedAccountingWorktagObjectType]] = Field(
        None, min_items=0
    )


class ContractContingentWorkerEventDataType(BaseModel):
    Contingent_Worker_ID: Optional[str] = None
    Position_ID: Optional[str] = None
    Contract_Worker_Reason_Reference: Optional[GeneralEventSubcategoryObjectType] = None
    Contract_Worker_Type_Reference: Optional[ContingentWorkerTypeObjectType] = None
    Create_Purchase_Order: Optional[bool] = None
    Contract_End_Date: Optional[date] = None
    First_Day_of_Work: Optional[date] = None
    Conversion_Position_Start_Date: Optional[date] = None
    Supplier_Reference: Optional[SupplierObjectType] = None
    Default_Payment_Term_Reference: Optional[PaymentTermsObjectType] = None
    Position_Details: PositionDetailsSubDataType
    Contract_Details_Data: Optional[List[ContractDetailsSubDataType]] = Field(
        None, min_items=0
    )
    Purchase_Order_Contract_Details_Data: Optional[
        PurchaseOrderContractDetailsDataType
    ] = None
    Contingent_Worker_External_ID_Data: Optional[ExternalIDDataType] = None


class ContractContingentWorkerBusinessProcessDataType(BaseModel):
    Applicant_Reference: ApplicantObjectType
    Former_Worker_Reference: FormerWorkerObjectType
    Student_Reference: StudentObjectType
    Applicant_Data: CreateApplicantDataType
    Organization_Reference: Optional[SupervisoryOrganizationObjectType] = None
    Position_Reference: Optional[PositionRestrictionsObjectType] = None
    Job_Requisition_Reference: Optional[JobRequisitionObjectType] = None
    Contract_Start_Date: date
    Contract_Contingent_Worker_Event_Data: ContractContingentWorkerEventDataType
    Update_ID_Information_Sub_Process: Optional[
        UpdateIDInformationSubBusinessProcessType
    ] = None
    Edit_Government_IDs_Sub_Process: Optional[
        EditGovernmentIDsSubBusinessProcessType
    ] = None
    Edit_Passports_and_Visas_Sub_Process: Optional[
        EditPassportsAndVisasSubBusinessProcessType
    ] = None
    Edit_License_Sub_Process: Optional[EditLicensesSubBusinessProcessType] = None
    Edit_Custom_IDs_Sub_Process: Optional[EditCustomIDsSubBusinessProcessType] = None
    Edit_Assign_Organization_Sub_Process: Optional[
        EditAssignPositionOrganizationSubBusinessProcessType
    ] = None
    Create_Workday_Account_Sub_Process: Optional[
        CreateWorkdayAccountSubBusinessProcessType
    ] = None
    Assign_Matrix_Organization_Sub_Process: Optional[
        AssignMatrixOrganizationSubBusinessProcessType
    ] = None
    Change_Personal_Information_Sub_Process: Optional[
        ChangePersonalInformationSubBusinessProcessType
    ] = None
    Edit_Service_Dates_Sub_Process: Optional[
        EditServiceDatesSubBusinessProcessType
    ] = None
    Remove_Retiree_Status_Sub_Process: Optional[
        RemoveRetireeStatusSubBusinessProcessType
    ] = None
    Onboarding_Setup_Sub_Process: Optional[OnboardingSetupSubBusinessProcessType] = None
    Add_Flexible_Work_Arrangement_Sub_Process: Optional[
        AddFlexibleWorkArrangementSubBusinessProcessType
    ] = None
    Assign_Establishment_Sub_Process: Optional[
        AssignEstablishmentSubBusinessProcessType
    ] = None


class ContractContingentWorkerRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Contract_Contingent_Worker_Data: ContractContingentWorkerBusinessProcessDataType
    version: Optional[str] = None


class PutJobClassificationGroupResponseType(BaseModel):
    Job_Classification_Group_Reference: Optional[
        JobClassificationGroupObjectType
    ] = None
    version: Optional[str] = None


class ProbationPeriodsForWorkersRequestReferencesType(BaseModel):
    Workers_Reference: Optional[List[WorkerObjectType]] = Field(None, min_items=0)


class GetProbationPeriodsForWorkersRequestType(BaseModel):
    Request_References: ProbationPeriodsForWorkersRequestReferencesType
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class BulkImportEndAdditionalJobRequestType(BaseModel):
    End_Additional_Job_Request: Optional[List[EndAdditionalJobRequestType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class EndInternationalAssignmentForEmployeeEventResponseType(BaseModel):
    End_International_Assignment_for_Employee_Event_Reference: Optional[
        UniqueIdentifierObjectType
    ] = None
    version: Optional[str] = None


class EditHiringRestrictionsResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Supervisory_Organization_Reference: Optional[
        SupervisoryOrganizationObjectType
    ] = None
    version: Optional[str] = None


class FunctionalAreaConfigurationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class FunctionalAreaConfigurationObjectType(BaseModel):
    ID: Optional[List[FunctionalAreaConfigurationObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class FunctionalityForStaffingTransactionsRequestReferencesType(BaseModel):
    Functionality_for_Staffing_Transactions_Reference: List[
        FunctionalAreaConfigurationObjectType
    ] = Field(..., min_items=1)


class FunctionalAreaConfigurableObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class FunctionalAreaConfigurableObjectType(BaseModel):
    ID: Optional[List[FunctionalAreaConfigurableObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class FunctionalityObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class FunctionalityObjectType(BaseModel):
    ID: Optional[List[FunctionalityObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class FunctionalityForStaffingTransactionsRequestCriteriaType(BaseModel):
    Business_Process_Type_Reference: Optional[
        List[FunctionalAreaConfigurableObjectType]
    ] = Field(None, min_items=0)
    Functionality_Reference: Optional[List[FunctionalityObjectType]] = Field(
        None, min_items=0
    )


class FunctionalityForStaffingTransactionsResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None


class SecurityGroupObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SecurityGroupObjectType(BaseModel):
    ID: Optional[List[SecurityGroupObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class FunctionalityForStaffingTransactionsDataType(BaseModel):
    ID: Optional[str] = None
    Business_Process_Type_Reference: FunctionalAreaConfigurableObjectType
    Functionality_Reference: FunctionalityObjectType
    Enabled_for_all_Security_Groups: Optional[bool] = None
    Security_Group_Reference: Optional[List[SecurityGroupObjectType]] = Field(
        None, min_items=0
    )


class FunctionalityForStaffingTransactionsType(BaseModel):
    Functionality_for_Staffing_Transactions_Reference: Optional[
        FunctionalAreaConfigurationObjectType
    ] = None
    Functionality_for_Staffing_Transactions_Data: Optional[
        List[FunctionalityForStaffingTransactionsDataType]
    ] = Field(None, min_items=0)


class FunctionalityForStaffingTransactionsResponseDataType(BaseModel):
    Functionality_for_Staffing_Transactions: Optional[
        List[FunctionalityForStaffingTransactionsType]
    ] = Field(None, min_items=0)


class GetFunctionalityForStaffingTransactionsResponseType(BaseModel):
    Request_References: Optional[
        FunctionalityForStaffingTransactionsRequestReferencesType
    ] = None
    Request_Criteria: Optional[
        FunctionalityForStaffingTransactionsRequestCriteriaType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[
        FunctionalityForStaffingTransactionsResponseGroupType
    ] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[FunctionalityForStaffingTransactionsResponseDataType] = None
    version: Optional[str] = None


class HeadcountRestrictionsObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class HeadcountRestrictionsObjectType(BaseModel):
    ID: Optional[List[HeadcountRestrictionsObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class JobClassificationSummaryDataType(BaseModel):
    Job_Classification_Reference: Optional[JobClassificationObjectType] = None
    Job_Group_Reference: Optional[JobClassificationGroupObjectType] = None
    Additional: Optional[bool] = None


class WorkerCompensationCodeDataType(BaseModel):
    Workers_Compensation_Code_Reference: Optional[
        WorkersCompensationCodeObjectType
    ] = None
    Workers_Compensation_Code: Optional[str] = None


class PayrollReportingCodeAllObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str
    parent_id: Optional[str] = None
    parent_type: Optional[str] = None


class PayrollReportingCodeAllObjectType(BaseModel):
    ID: Optional[List[PayrollReportingCodeAllObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PayrollReportingTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PayrollReportingTypeObjectType(BaseModel):
    ID: Optional[List[PayrollReportingTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PositionPayrollReportingCodeDataType(BaseModel):
    Payroll_Reporting_Code_Reference: PayrollReportingCodeAllObjectType
    Code: str
    Formatted_Code: Optional[str] = None
    Name: str
    Payroll_Reporting_Type_Reference: PayrollReportingTypeObjectType


class JobProfileInPositionSummaryDataType(BaseModel):
    Job_Profile_Reference: Optional[JobProfileObjectType] = None
    Job_Exempt: Optional[bool] = None
    Management_Level_Reference: Optional[ManagementLevelObjectType] = None
    Job_Category_Reference: Optional[JobCategoryObjectType] = None
    Job_Family_Reference: Optional[List[JobFamilyBaseObjectType]] = Field(
        None, min_items=0
    )
    Job_Profile_Name: Optional[str] = None
    Work_Shift_Required: Optional[bool] = None
    Critical_Job: Optional[bool] = None
    Difficulty_to_Fill_Reference: Optional[DifficultyToFillObjectType] = None


class LocationTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LocationTypeObjectType(BaseModel):
    ID: Optional[List[LocationTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class TimeProfileObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class TimeProfileObjectType(BaseModel):
    ID: Optional[List[TimeProfileObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LocationSummaryDataType(BaseModel):
    Location_Reference: Optional[LocationObjectType] = None
    Name: Optional[str] = None
    Location_Type_Reference: Optional[List[LocationTypeObjectType]] = Field(
        None, min_items=0
    )
    Local_Reference: Optional[LocaleObjectType] = None
    Display_Language_Reference: Optional[UserLanguageObjectType] = None
    Time_Profile_Reference: Optional[TimeProfileObjectType] = None
    Scheduled_Weekly_Hours: Optional[float] = None
    Address_Data: Optional[List[AddressInformationDataType]] = Field(None, min_items=0)


class ExternalPayGroupObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str
    parent_id: Optional[str] = None
    parent_type: Optional[str] = None


class ExternalPayGroupObjectType(BaseModel):
    ID: Optional[List[ExternalPayGroupObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ExternalPayrollEntityObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ExternalPayrollEntityObjectType(BaseModel):
    ID: Optional[List[ExternalPayrollEntityObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ExternalPayrollEmployeeTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ExternalPayrollEmployeeTypeObjectType(BaseModel):
    ID: Optional[List[ExternalPayrollEmployeeTypeObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class PositionPayrollInterfaceDetailDataType(BaseModel):
    Effective_Date: Optional[date] = None
    Pay_Rate_Type_Reference: Optional[PayRateTypeObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Pay_Group_Reference: Optional[ExternalPayGroupObjectType] = None
    Payroll_Entity_Reference: Optional[ExternalPayrollEntityObjectType] = None
    External_Employee_Type_Reference: Optional[
        ExternalPayrollEmployeeTypeObjectType
    ] = None
    Payroll_File_Number: Optional[str] = None


class InternationalAssignmentDataType(BaseModel):
    International_Assignment_Type_Reference: Optional[AssignmentTypeObjectType] = None
    Start_International_Assignment_Reason_Reference: Optional[
        EventClassificationSubcategoryObjectType
    ] = None
    Expected_Assignment_End_Date: Optional[date] = None
    Host_Country_Reference: Optional[CountryObjectType] = None
    Home_Country_Reference: Optional[CountryObjectType] = None


class AcademicPaySetupDataType(BaseModel):
    Annual_Work_Period_Work_Percent_of_Year: Optional[float] = None
    Annual_Work_Period_Start_Date: Optional[date] = None
    Annual_Work_Period_End_Date: Optional[date] = None
    Disbursement_Plan_Period_Start_Date: Optional[date] = None
    Disbursement_Plan_Period_End_Date: Optional[date] = None


class CollectiveAgreementFactorParameterDataType(BaseModel):
    Order: Optional[str] = None
    Collective_Agreement_Factor_Reference: Optional[
        CollectiveAgreementFactorObjectType
    ] = None
    Collective_Agreement_Factor_Option_Reference: Optional[
        List[CollectiveAgreementFactorOptionObjectType]
    ] = Field(None, min_items=0)


class CollectiveAgreementSnapshotDataType(BaseModel):
    Collective_Agreement_Reference: Optional[CollectiveAgreementObjectType] = None
    Collective_Agreement_Factor: Optional[
        List[CollectiveAgreementFactorParameterDataType]
    ] = Field(None, min_items=0)


class CollectiveAgreementDetailDataType(BaseModel):
    Assign_Employee_Collective_Agreement_Event_Reference: Optional[
        UniqueIdentifierObjectType
    ] = None
    Effective_Date: Optional[date] = None
    End_Assignment_Date: Optional[date] = None
    Collective_Agreement_Data: Optional[
        List[CollectiveAgreementSnapshotDataType]
    ] = Field(None, min_items=0)


class CollectiveAgreementSummaryDataType(BaseModel):
    Collective_Agreement_Data: Optional[CollectiveAgreementDetailDataType] = None


class EmployeeProbationPeriodDetailDataType(BaseModel):
    Employee_Probation_Period_Event_Reference: Optional[
        UniqueIdentifierObjectType
    ] = None
    Employee_Probation_Period_Reference: Optional[
        EmployeeProbationPeriodObjectType
    ] = None
    Effective_Date: Optional[date] = None
    Start_Date: Optional[date] = None
    End_Date: Optional[date] = None
    Probation_Type_Reference: Optional[EmployeeProbationPeriodTypeObjectType] = None
    Probation_Reason_Reference: Optional[EmployeeProbationPeriodReasonObjectType] = None
    Extended_End_Date: Optional[date] = None
    Note: Optional[str] = None


class EmployeeProbationPeriodSummaryDataType(BaseModel):
    Employee_Probation_Period_Detail_Data: Optional[
        List[EmployeeProbationPeriodDetailDataType]
    ] = Field(None, min_items=0)


class PositionDetailDataType(BaseModel):
    Position_Reference: Optional[PositionElementObjectType] = None
    Headcount_Reference: Optional[HeadcountRestrictionsObjectType] = None
    Position_ID: Optional[str] = None
    Position_Title: Optional[str] = None
    Business_Title: Optional[str] = None
    Start_Date: Optional[date] = None
    End_Employment_Date: Optional[date] = None
    End_Employment_Reason_Reference: Optional[
        List[EventClassificationSubcategoryObjectType]
    ] = Field(None, min_items=0)
    Worker_Type_Reference: Optional[PositionWorkerTypeObjectType] = None
    Position_Time_Type_Reference: Optional[PositionTimeTypeObjectType] = None
    Job_Exempt: Optional[bool] = None
    Scheduled_Weekly_Hours: Optional[float] = None
    Default_Weekly_Hours: Optional[float] = None
    Working_Time_Frequency_Reference: Optional[FrequencyObjectType] = None
    Working_Time_Unit_Reference: Optional[WorkingTimeUnitObjectType] = None
    Working_Time_Value: Optional[float] = None
    Full_Time_Equivalent_Percentage: Optional[float] = None
    Specify_Paid_FTE: Optional[bool] = None
    Paid_FTE: Optional[float] = None
    Specify_Working_FTE: Optional[bool] = None
    Working_FTE: Optional[float] = None
    Exclude_from_Headcount: Optional[bool] = None
    Pay_Rate_Type_Reference: Optional[PayRateTypeObjectType] = None
    Job_Classification_Summary_Data: Optional[
        List[JobClassificationSummaryDataType]
    ] = Field(None, min_items=0)
    Company_Insider_Reference: Optional[List[CompanyInsiderTypeObjectType]] = Field(
        None, min_items=0
    )
    Work_Shift_Reference: Optional[WorkShiftObjectType] = None
    Work_Hours_Profiles_Reference: Optional[WorkHoursProfileObjectType] = None
    Federal_Withholding_FEIN: Optional[str] = None
    Worker_Compensation_Code_Data: Optional[
        List[WorkerCompensationCodeDataType]
    ] = Field(None, min_items=0)
    Position_Payroll_Reporting_Code_Data: Optional[
        List[PositionPayrollReportingCodeDataType]
    ] = Field(None, min_items=0)
    Job_Profile_Summary_Data: Optional[JobProfileInPositionSummaryDataType] = None
    Business_Site_Summary_Data: Optional[LocationSummaryDataType] = None
    Payroll_Interface_Processing_Data: Optional[
        PositionPayrollInterfaceDetailDataType
    ] = None
    Regular_Paid_Equivalent_Hours: Optional[float] = None
    Worker_Hours_Profile_Classification: Optional[str] = None
    International_Assignment_Data: Optional[InternationalAssignmentDataType] = None
    Work_Space__Reference: Optional[LocationObjectType] = None
    Academic_Pay_Setup_Data: Optional[AcademicPaySetupDataType] = None
    End_Date: Optional[date] = None
    Pay_Through_Date: Optional[date] = None
    Collective_Agreement_Summary_Data: Optional[
        List[CollectiveAgreementSummaryDataType]
    ] = Field(None, min_items=0)
    Employee_Probation_Period_Summary_Data: Optional[
        EmployeeProbationPeriodSummaryDataType
    ] = None
    Manager_as_of_last_detected_manager_change_Reference: Optional[
        List[WorkerObjectType]
    ] = Field(None, min_items=0)
    Effective_Date: Optional[date] = None


class PositionSetObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PositionSetObjectType(BaseModel):
    ID: Optional[List[PositionSetObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class OrganizationTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class OrganizationTypeObjectType(BaseModel):
    ID: Optional[List[OrganizationTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class WorkerOrganizationRoleAssignmentDataType(BaseModel):
    Worker_Reference: Optional[WorkerObjectType] = None
    Assignment_From: Optional[str] = None


class OrganizationSupportingRoleDataType(BaseModel):
    Organization_Role_Reference: Optional[AssignableRoleObjectType] = None
    Organization_Role_Data: Optional[
        List[WorkerOrganizationRoleAssignmentDataType]
    ] = Field(None, min_items=0)


class OrganizationSupportRoleType(BaseModel):
    Organization_Support_Role: Optional[
        List[OrganizationSupportingRoleDataType]
    ] = Field(None, min_items=0)


class OrganizationSummaryDataType(BaseModel):
    Organization_Reference_ID: Optional[str] = None
    Organization_Code: Optional[str] = None
    Integration_ID_Data: Optional[List[ExternalIntegrationIDDataType]] = Field(
        None, min_items=0
    )
    Organization_Name: Optional[str] = None
    Organization_Type_Reference: Optional[OrganizationTypeObjectType] = None
    Organization_Subtype_Reference: Optional[OrganizationSubtypeObjectType] = None
    Primary_Business_Site_Reference: Optional[LocationObjectType] = None
    Organization_Support_Role_Data: Optional[OrganizationSupportRoleType] = None
    Date_of_Pay_Group_Assignment: Optional[date] = None
    Used_in_Change_Organization_Assignments: Optional[bool] = None


class WorkerOrganizationMembershipDataType(BaseModel):
    Organization_Reference: PositionSetObjectType
    Organization_Data: OrganizationSummaryDataType


class PayGroupAssignmentCorrectOrRescindedOrganizationDataType(BaseModel):
    Effective_Date: Optional[date] = None
    Completed_On: Optional[datetime] = None
    Event_Corrected: Optional[bool] = None
    Event_Rescinded: Optional[bool] = None
    Original_Pay_Group_Reference: Optional[PayGroupObjectType] = None
    Proposed_Pay_Group_Reference: Optional[PayGroupObjectType] = None


class PositionOrganizationDataType(BaseModel):
    Position_Organization_Data: Optional[
        List[WorkerOrganizationMembershipDataType]
    ] = Field(None, min_items=0)
    Pay_Group_Assignment_Correct_or_Rescind_Data: Optional[
        List[PayGroupAssignmentCorrectOrRescindedOrganizationDataType]
    ] = Field(None, min_items=0)


class WorkerBasicDataType(BaseModel):
    Worker_Reference: Optional[WorkerObjectType] = None
    Worker_Descriptor: Optional[str] = None


class ManagementChainDataType(BaseModel):
    Organization_Reference: Optional[OrganizationObjectType] = None
    Manager_Reference: Optional[List[WorkerObjectType]] = Field(None, min_items=0)
    Manager: Optional[List[WorkerBasicDataType]] = Field(None, min_items=0)


class WorkerSupervisoryManagementChainDataType(BaseModel):
    Management_Chain_Data: Optional[List[ManagementChainDataType]] = Field(
        None, min_items=0
    )


class WorkerMatrixManagementChainDataType(BaseModel):
    Management_Chain_Data: Optional[List[ManagementChainDataType]] = Field(
        None, min_items=0
    )


class PositionManagementChainsDataType(BaseModel):
    Position_Supervisory_Management_Chain_Data: Optional[
        WorkerSupervisoryManagementChainDataType
    ] = None
    Position_Matrix_Management_Chain_Data: Optional[
        WorkerMatrixManagementChainDataType
    ] = None


class WorkerJobDataType(BaseModel):
    Position_Data: Optional[PositionDetailDataType] = None
    Position_Organizations_Data: Optional[PositionOrganizationDataType] = None
    Position_Management_Chains_Data: Optional[PositionManagementChainsDataType] = None
    Primary_Job: Optional[bool] = None


class EventClassificationCategoryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EventClassificationCategoryObjectType(BaseModel):
    ID: Optional[List[EventClassificationCategoryObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class SecondaryTerminationDataType(BaseModel):
    Secondary_Termination_Reason_Reference: Optional[
        EventClassificationSubcategoryObjectType
    ] = None
    Secondary_Termination_Reason_Category_Reference: Optional[
        EventClassificationCategoryObjectType
    ] = None


class LeaveRequestEventObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LeaveRequestEventObjectType(BaseModel):
    ID: Optional[List[LeaveRequestEventObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LeaveOfAbsenceTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LeaveOfAbsenceTypeObjectType(BaseModel):
    ID: Optional[List[LeaveOfAbsenceTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LeaveTypeReasonObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LeaveTypeReasonObjectType(BaseModel):
    ID: Optional[List[LeaveTypeReasonObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LeaveRequestAdditionalFieldsType(BaseModel):
    Last_Date_for_Which_Paid: Optional[date] = None
    Expected_Due_Date: Optional[date] = None
    Child_s_Birth_Date: Optional[date] = None
    Stillbirth_Baby_Deceased: Optional[bool] = None
    Date_Baby_Arrived_Home_From_Hospital: Optional[date] = None
    Adoption_Placement_Date: Optional[date] = None
    Adoption_Notification_Date: Optional[date] = None
    Date_Child_Entered_Country: Optional[date] = None
    Multiple_Child_Indicator: Optional[bool] = None
    Number_of_Babies_Adopted_Children: Optional[float] = None
    Number_of_Previous_Births: Optional[float] = None
    Number_of_Previous_Maternity_Leaves: Optional[float] = None
    Number_of_Child_Dependents: Optional[float] = None
    Single_Parent_Indicator: Optional[bool] = None
    Age_of_Dependent: Optional[float] = None
    Work_Related: Optional[bool] = None
    Stop_Payment_Date: Optional[date] = None
    Social_Security_Disability_Code: Optional[str] = None
    Location_During_Leave: Optional[str] = None
    Caesarean_Section_Birth: Optional[bool] = None
    Leave_Percentage: Optional[float] = None
    Week_of_Confinement: Optional[date] = None
    Leave_Entitlement_Override: Optional[float] = None
    Date_of_Recall: Optional[date] = None
    Child_s_Date_of_Death: Optional[date] = None
    Child_Disability_Indicator: Optional[bool] = None


class LeaveStatusDetailDataType(BaseModel):
    Leave_Request_Event_Reference: Optional[LeaveRequestEventObjectType] = None
    Leave_Request_Description: Optional[str] = None
    Leave_Return_Event_Reference: Optional[UniqueIdentifierObjectType] = None
    On_Leave: Optional[bool] = None
    Leave_Start_Date: Optional[date] = None
    Estimated_Leave_End_Date: Optional[date] = None
    Leave_End_Date: Optional[date] = None
    First_Day_Of_Work: Optional[date] = None
    Leave_Last_Day_of_Work: Optional[date] = None
    Leave_of_Absence_Type_Reference: Optional[LeaveOfAbsenceTypeObjectType] = None
    Benefits_Effect: Optional[bool] = None
    Payroll_Effect: Optional[bool] = None
    Paid_Time_Off_Accrual_Effect: Optional[bool] = None
    Continuous_Service_Accrual_Effect: Optional[bool] = None
    Stock_Vesting_Effect: Optional[bool] = None
    Leave_Type_Reason_Reference: Optional[LeaveTypeReasonObjectType] = None
    Leave_Request_Additional_Fields: Optional[LeaveRequestAdditionalFieldsType] = None


class LeaveRequestsCorrectedDetailDataType(BaseModel):
    Leave_Request_Event_Reference: Optional[LeaveRequestEventObjectType] = None
    Leave_Request_Description: Optional[str] = None
    Leave_Return_Event_Reference: Optional[UniqueIdentifierObjectType] = None
    On_Leave: Optional[bool] = None
    Leave_Start_Date: Optional[date] = None
    Estimated_Leave_End_Date: Optional[date] = None
    Leave_End_Date: Optional[date] = None
    First_Day_of_Work: Optional[date] = None
    Leave_Last_Day_of_Work: Optional[date] = None
    Leave_of_Absence_Type_Reference: Optional[LeaveOfAbsenceTypeObjectType] = None
    Links_Back_to_Prior_Event_Reference: Optional[LeaveRequestEventObjectType] = None
    Benefits_Effect: Optional[bool] = None
    Payroll_Effect: Optional[bool] = None
    Paid_Time_Off_Accrual_Effect: Optional[bool] = None
    Continuous_Service_Accrual_Effect: Optional[bool] = None
    Stock_Vesting_Effect: Optional[bool] = None
    Leave_Type_Reason_Reference: Optional[LeaveTypeReasonObjectType] = None
    Leave_Request_Additional_Fields: Optional[LeaveRequestAdditionalFieldsType] = None


class WorkerStatusDetailDataType(BaseModel):
    Active: Optional[bool] = None
    Active_Status_Date: Optional[date] = None
    Hire_Date: Optional[date] = None
    Original_Hire_Date: Optional[date] = None
    Hire_Reason_Reference: Optional[GeneralEventSubcategoryObjectType] = None
    End_Employment_Date: Optional[date] = None
    Continuous_Service_Date: Optional[date] = None
    First_Day_of_Work: Optional[date] = None
    Expected_Retirement_Date: Optional[date] = None
    Retirement_Eligibility_Date: Optional[date] = None
    Retired: Optional[bool] = None
    Retirement_Date: Optional[date] = None
    Seniority_Date: Optional[date] = None
    Severance_Date: Optional[date] = None
    Benefits_Service_Date: Optional[date] = None
    Company_Service_Date: Optional[date] = None
    Time_Off_Service_Date: Optional[date] = None
    Vesting_Date: Optional[date] = None
    Date_Entered_Workforce: Optional[date] = None
    Days_Unemployed: Optional[float] = None
    Months_Continuous_Prior_Employment: Optional[float] = None
    Terminated: Optional[bool] = None
    Termination_Date: Optional[date] = None
    Pay_Through_Date: Optional[date] = None
    Agreement_Signature_Date: Optional[date] = None
    Dismissal_Process_Start_Date: Optional[date] = None
    Notice_Period_Start_Date: Optional[date] = None
    Primary_Termination_Reason_Reference: Optional[
        TerminationSubcategoryObjectType
    ] = None
    Primary_Termination_Category_Reference: Optional[
        EventClassificationCategoryObjectType
    ] = None
    Termination_Involuntary: Optional[bool] = None
    Secondary_Termination_Reasons_Data: Optional[
        List[SecondaryTerminationDataType]
    ] = Field(None, min_items=0)
    Local_Termination_Reason_Reference: Optional[
        LocalTerminationReasonObjectType
    ] = None
    Eligible_for_Hire_Reference: Optional[CommonYesNoObjectType] = None
    Regrettable_Termination: Optional[bool] = None
    Eligible_for_Rehire_on_Latest_Termination_Reference: Optional[
        CommonYesNoObjectType
    ] = None
    Hire_Rescinded: Optional[bool] = None
    Termination_Last_Day_of_Work: Optional[date] = None
    Resignation_Date: Optional[date] = None
    Last_Date_for_Which_Paid: Optional[date] = None
    Expected_Date_of_Return: Optional[date] = None
    Not_Returning: Optional[bool] = None
    Return_Unknown: Optional[bool] = None
    Probation_Start_Date: Optional[date] = None
    Probation_End_Date: Optional[date] = None
    Leave_Status_Data: Optional[List[LeaveStatusDetailDataType]] = Field(
        None, min_items=0
    )
    Leave_Requests_Corrected_Data: Optional[
        List[LeaveRequestsCorrectedDetailDataType]
    ] = Field(None, min_items=0)
    Academic_Tenure_Date: Optional[date] = None
    Rehire: Optional[bool] = None


class WorkerContractDetailDataType(BaseModel):
    Contract_Pay_Rate: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Contract_Assignment_Details: Optional[str] = None
    Contract_End_Date: Optional[date] = None
    Supplier_Reference: Optional[SupplierObjectType] = None


class InternationalAssignmentSummaryDataType(BaseModel):
    Has_International_Assignment: Optional[bool] = None
    Host_Countries_Reference: Optional[List[CountryObjectType]] = Field(
        None, min_items=0
    )
    Home_Country_Reference: Optional[CountryObjectType] = None


class WorkerEmploymentInformationDataType(BaseModel):
    Worker_Job_Data: Optional[List[WorkerJobDataType]] = Field(None, min_items=0)
    Worker_Status_Data: Optional[WorkerStatusDetailDataType] = None
    Worker_Contract_Data: Optional[WorkerContractDetailDataType] = None
    International_Assignment_Summary_Data: Optional[
        InternationalAssignmentSummaryDataType
    ] = None


class CompensationPayEarningObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CompensationPayEarningObjectType(BaseModel):
    ID: Optional[List[CompensationPayEarningObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmployeeBasePayPlanAssignmentDataType(BaseModel):
    Compensation_Plan_Reference: Optional[SalaryPayPlanObjectType] = None
    Compensation_Element_Reference: Optional[CompensationPayEarningObjectType] = None
    Amount: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Assignment_Effective_Date: Optional[date] = None


class UnitOfMeasureObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class UnitOfMeasureObjectType(BaseModel):
    ID: Optional[List[UnitOfMeasureObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmployeeSalaryUnitPlanAssignmentDataType(BaseModel):
    Compensation_Plan_Reference: Optional[SalaryUnitPlanObjectType] = None
    Compensation_Element_Reference: Optional[CompensationPayEarningObjectType] = None
    Unit_Reference: Optional[UnitOfMeasureObjectType] = None
    Per_Unit_Amount: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Number_of_Units: Optional[float] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Assignment_Effective_Date: Optional[date] = None


class EmployeeAllowancePlanAssignmentDataType(BaseModel):
    Compensation_Plan_Reference: Optional[AllowanceValuePlanObjectType] = None
    Compensation_Element_Reference: Optional[CompensationPayEarningObjectType] = None
    Percent: Optional[float] = None
    Amount: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Assignment_Effective_Date: Optional[date] = None


class EmployeeAllowanceUnitPlanAssignmentDataType(BaseModel):
    Compensation_Plan_Reference: Optional[AllowanceUnitPlanObjectType] = None
    Compensation_Element_Reference: Optional[CompensationPayEarningObjectType] = None
    Number_of_Units: Optional[float] = None
    Unit_Reference: Optional[UnitOfMeasureObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Per_Unit_Amount: Optional[float] = None
    Currency_Reference: CurrencyObjectType
    Assignment_Effective_Date: Optional[date] = None


class EmployeeBonusPlanAssignmentDataType(BaseModel):
    Compensation_Plan_Reference: Optional[BonusPlanObjectType] = None
    Compensation_Element_Reference: Optional[CompensationPayEarningObjectType] = None
    Individual_Target_Amount: Optional[float] = None
    Default_Target_Amount: Optional[float] = None
    Individual_Target_Percent: Optional[float] = None
    Default_Target_Percent: Optional[float] = None
    Guaranteed_Minimum: Optional[bool] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Percent_Assigned: Optional[float] = None
    Assignment_Effective_Date: Optional[date] = None


class MeritPercentPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class MeritPercentPlanObjectType(BaseModel):
    ID: Optional[List[MeritPercentPlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CompensationMatrixObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CompensationMatrixObjectType(BaseModel):
    ID: Optional[List[CompensationMatrixObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmployeeMeritPlanAssignmentDataType(BaseModel):
    Compensation_Plan_Reference: Optional[MeritPercentPlanObjectType] = None
    Individual_Target_Percent: Optional[float] = None
    Default_Target_Percent: Optional[float] = None
    Merit_Increase_Matrix_Reference: Optional[CompensationMatrixObjectType] = None
    Guaranteed_Minimum: Optional[bool] = None
    Assignment_Effective_Date: Optional[date] = None


class EmployeeCommissionPlanAssignmentDataType(BaseModel):
    Compensation_Plan_Reference: Optional[CommissionPlanObjectType] = None
    Compensation_Element_Reference: Optional[CompensationPayEarningObjectType] = None
    Target_Amount: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Draw_Amount: Optional[float] = None
    Draw_Frequency_Reference: Optional[FrequencyObjectType] = None
    Draw_Duration: Optional[str] = None
    Recoverable: Optional[bool] = None
    Assignment_Effective_Date: Optional[date] = None


class EmployeeStockPlanAssignmentDataType(BaseModel):
    Compensation_Plan_Reference: Optional[StockPlanObjectType] = None
    Percent_of_Target_as_Option: Optional[float] = None
    Percent_of_Target_as_Stock: Optional[float] = None
    Target_Shares: Optional[float] = None
    Individual_Target_Shares: Optional[float] = None
    Target_Percent: Optional[float] = None
    Individual_Target_Amount: Optional[float] = None
    Target_Amount: Optional[float] = None
    Individual_Target_Percent: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Vesting_Schedule_Reference: Optional[StockVestingScheduleObjectType] = None
    Compensation_Matrix_Reference: Optional[CompensationMatrixObjectType] = None
    Assignment_Effective_Date: Optional[date] = None


class FuturePaymentPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class FuturePaymentPlanObjectType(BaseModel):
    ID: Optional[List[FuturePaymentPlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class FuturePaymentPlanAssignmentDataType(BaseModel):
    Compensation_Plan_Reference: Optional[FuturePaymentPlanObjectType] = None
    Individual_Target_Amount: Optional[float] = None
    Individual_Target_Currency_Reference: Optional[CurrencyObjectType] = None
    Individual_Target_Payment_Date: Optional[date] = None
    Comment: Optional[str] = None


class EmployeePeriodSalaryPlanAssignmentDataType(BaseModel):
    Compensation_Plan_Reference: Optional[PeriodSalaryPlanObjectType] = None
    Compensation_Element_Reference: Optional[CompensationPayEarningObjectType] = None
    Compensation_Period_Reference: Optional[CompensationPeriodObjectType] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Compensation_Period_Multiplier: Optional[float] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Assignment_Effective_Date: Optional[date] = None


class CompensatableSummaryAmountDataType(BaseModel):
    Total_Base_Pay: Optional[float] = None
    Total_Salary_and_Allowances: Optional[float] = None
    Primary_Compensation_Basis: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None


class CompensatableSummaryAmountAnnualizedDataType(BaseModel):
    Total_Base_Pay: Optional[float] = None
    Total_Salary_and_Allowances: Optional[float] = None
    Primary_Compensation_Basis: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None


class CompensatableSummaryAmountInTargetFrequencyDataType(BaseModel):
    Total_Base_Pay: Optional[float] = None
    Total_Salary_and_Allowances: Optional[float] = None
    Primary_Compensation_Basis: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None


class CompensatableSummaryAmountAnnualizedInReportingCurrencyDataType(BaseModel):
    Total_Base_Pay: Optional[float] = None
    Total_Salary_and_Allowances: Optional[float] = None
    Primary_Compensation_Basis: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None


class CompensatableSummaryAmountHourlyDataType(BaseModel):
    Total_Base_Pay: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None


class CompensatableSummaryDataType(BaseModel):
    Employee_Compensation_Summary_Data: Optional[
        CompensatableSummaryAmountDataType
    ] = None
    Annualized_Summary_Data: Optional[
        CompensatableSummaryAmountAnnualizedDataType
    ] = None
    Summary_Data_in_Pay_Group_Frequency: Optional[
        CompensatableSummaryAmountInTargetFrequencyDataType
    ] = None
    Annualized_in_Reporting_Currency_Summary_Data: Optional[
        CompensatableSummaryAmountAnnualizedInReportingCurrencyDataType
    ] = None
    Summary_Data_in_Hourly_Frequency: Optional[
        CompensatableSummaryAmountHourlyDataType
    ] = None


class WorkerCompensationDataType(BaseModel):
    Compensation_Effective_Date: Optional[date] = None
    Reason_Reference: Optional[EventClassificationSubcategoryObjectType] = None
    Compensation_Guidelines_Data: Optional[
        List[CompensatableGuidelinesDataType]
    ] = Field(None, min_items=0)
    Salary_and_Hourly_Data: Optional[
        List[EmployeeBasePayPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Unit_Salary_Plan_Data: Optional[
        List[EmployeeSalaryUnitPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Allowance_Plan_Data: Optional[
        List[EmployeeAllowancePlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Unit_Allowance_Plan_Data: Optional[
        List[EmployeeAllowanceUnitPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Bonus_Plan_Data: Optional[List[EmployeeBonusPlanAssignmentDataType]] = Field(
        None, min_items=0
    )
    Merit_Plan_Data: Optional[List[EmployeeMeritPlanAssignmentDataType]] = Field(
        None, min_items=0
    )
    Commission_Plan_Data: Optional[
        List[EmployeeCommissionPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Stock_Plan_Data: Optional[List[EmployeeStockPlanAssignmentDataType]] = Field(
        None, min_items=0
    )
    Future_Payment_Plan_Data: Optional[
        List[FuturePaymentPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Period_Salary_Plan_Data: Optional[
        List[EmployeePeriodSalaryPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Employee_Compensation_Summary_Data: Optional[CompensatableSummaryDataType] = None


class WorkerOrganizationDataType(BaseModel):
    Worker_Organization_Data: Optional[
        List[WorkerOrganizationMembershipDataType]
    ] = Field(None, min_items=0)


class OrganizationRoleAssignmentForWorkerDataType(BaseModel):
    Role_Assigner_Reference: Optional[RoleAssignerObjectType] = None
    Effective_Date: Optional[date] = None
    Assignment_From: Optional[str] = None


class OrganizationRoleForWorkerDataType(BaseModel):
    Organization_Role_Reference: Optional[AssignableRoleObjectType] = None
    Organization_Role_Data: Optional[
        List[OrganizationRoleAssignmentForWorkerDataType]
    ] = Field(None, min_items=0)


class WorkerOrganizationRoleDataType(BaseModel):
    Organization_Role: Optional[List[OrganizationRoleForWorkerDataType]] = Field(
        None, min_items=0
    )


class WorkerRoleDataType(BaseModel):
    Organization_Role_Data: Optional[WorkerOrganizationRoleDataType] = None


class WorkerManagementChainDataType(BaseModel):
    Worker_Supervisory_Management_Chain_Data: Optional[
        WorkerSupervisoryManagementChainDataType
    ] = None
    Worker_Matrix_Management_Chain_Data: Optional[
        WorkerMatrixManagementChainDataType
    ] = None


class EnrollmentPeriodDataType(BaseModel):
    Benefit_Program_Name: str
    Plan_Year: Optional[date] = None
    Begin_Date: date
    End_Date: date


class HealthCareCoverageTargetObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class HealthCareCoverageTargetObjectType(BaseModel):
    ID: Optional[List[HealthCareCoverageTargetObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class HealthCareClassificationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class HealthCareClassificationObjectType(BaseModel):
    ID: Optional[List[HealthCareClassificationObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class InsuranceCoverageTargetObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class InsuranceCoverageTargetObjectType(BaseModel):
    ID: Optional[List[InsuranceCoverageTargetObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class BenefitProviderObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class BenefitProviderObjectType(BaseModel):
    ID: Optional[List[BenefitProviderObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class BenefitProviderIdentifierTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class BenefitProviderIdentifierTypeObjectType(BaseModel):
    ID: Optional[List[BenefitProviderIdentifierTypeObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class BenefitProviderSummaryDataType(BaseModel):
    Benefit_Provider_Reference: Optional[BenefitProviderObjectType] = None
    Benefit_Provider_Name: Optional[str] = None
    Benefit_Provider_Identifier_Type_Reference: Optional[
        BenefitProviderIdentifierTypeObjectType
    ] = None


class PayComponentObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PayComponentObjectType(BaseModel):
    ID: Optional[List[PayComponentObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class BenefitPlanSummaryDataType(BaseModel):
    Benefit_Plan_Reference: Optional[BenefitPlanObjectType] = None
    Benefit_Plan_Name: Optional[str] = None
    Group_Identifier: Optional[str] = None
    Benefit_Coverage_Type_Reference: Optional[BenefitCoverageTypeObjectType] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Health_Care_Classification_Reference: Optional[
        HealthCareClassificationObjectType
    ] = None
    Insurance_Coverage_Target_Reference: Optional[
        InsuranceCoverageTargetObjectType
    ] = None
    Benefit_Provider_Summary_Data: Optional[BenefitProviderSummaryDataType] = None
    External_Integration_ID_Data: Optional[ExternalIntegrationIDDataType] = None
    Pay_Component_Reference: Optional[List[PayComponentObjectType]] = Field(
        None, min_items=0
    )


class WorkerBenefitElectionDataType(BaseModel):
    Coverage_Begin_Date: Optional[date] = None
    Coverage_End_Date: Optional[date] = None
    Election_Coverage_Begin_Date: Optional[date] = None
    Original_Coverage_Begin_Date: Optional[date] = None
    Original_Coverage_Begin_Date_for_Benefit_Coverage_Type: Optional[date] = None
    Deduction_Begin_Date: Optional[date] = None
    Deduction_End_Date: Optional[date] = None
    Election_Status: Optional[str] = None
    Enrollment_Signature_Date: Optional[date] = None
    Latest_Enrollment_Signature_Date: Optional[date] = None
    Original_Signature_Date: Optional[date] = None
    Passive_Enrollment: Optional[bool] = None
    Benefit_Plan_Summary_Data: Optional[BenefitPlanSummaryDataType] = None
    Original_Plan_Enrollment_Date: Optional[date] = None
    Original_Benefit_Provider_Enrollment_Date: Optional[date] = None
    Is_Corrected_or_Rescinded: Optional[bool] = None


class COBRAEligibilityDataType(BaseModel):
    COBRA_Eligibility_Reason_Reference: Optional[
        COBRAEligibilityReasonObjectType
    ] = None
    Eligible_Date: Optional[date] = None
    Loss_of_Coverage_Date: Optional[date] = None
    Coverage_End_Date: Optional[date] = None
    Benefit_Plan_Reference: Optional[BenefitPlanObjectType] = None


class DependentCoverageDataType(BaseModel):
    Dependent_Reference: Optional[DependentObjectType] = None
    Original_Coverage_Begin_Date: Optional[date] = None
    Coverage_End_Date: Optional[date] = None
    Original_Coverage_Begin_Date_for_Benefit_Coverage_Type: Optional[date] = None
    First_Date_Covered_by_Benefit_Plan: Optional[date] = None
    First_Date_Covered_by_Benefit_Provider: Optional[date] = None
    Provider_ID: Optional[str] = None
    COBRA_Eligibility_Data: Optional[List[COBRAEligibilityDataType]] = Field(
        None, min_items=0
    )


class WorkerHealthCareCoverageDataType(BaseModel):
    Health_Care_Coverage_Target_Reference: Optional[
        HealthCareCoverageTargetObjectType
    ] = None
    Original_Coverage_Begin_Date_for_Coverage_Target: Optional[date] = None
    Provider_ID: Optional[str] = None
    Benefit_Election_Data: Optional[WorkerBenefitElectionDataType] = None
    Dependent_Coverage_Data: Optional[List[DependentCoverageDataType]] = Field(
        None, min_items=0
    )


class WorkerHealthCarePeriodDataType(BaseModel):
    Enrollment_Period_Data: Optional[EnrollmentPeriodDataType] = None
    Health_Care_Coverage_Data: Optional[List[WorkerHealthCareCoverageDataType]] = Field(
        None, min_items=0
    )


class WorkerHealthCareDataType(BaseModel):
    Health_Care_Period_Data: Optional[List[WorkerHealthCarePeriodDataType]] = Field(
        None, min_items=0
    )


class HealthSavingsAccountElectionInfoDataType(BaseModel):
    Coverage_Target_Name: Optional[str] = None
    Maximum_Annual_Contribution_Amount: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None


class ContributionDataType(BaseModel):
    Contribution_Amount: Optional[float] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None


class PayrollInterfaceContributionDataType(BaseModel):
    Contribution_Amount: Optional[float] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None


class GoalDataType(BaseModel):
    Goal_Amount: Optional[float] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None


class AnnualContributionDataType(BaseModel):
    Annual_Contribution_Amount: float
    Prior_Contribution_Amount: float
    Remaining_Periods: float


class EmployeeContributionDataType(BaseModel):
    Contribution_Data: Optional[ContributionDataType] = None
    Payroll_Interface_Contribution_Data: Optional[
        PayrollInterfaceContributionDataType
    ] = None
    Goal_Data: Optional[GoalDataType] = None
    Annual_Contribution_Data: Optional[AnnualContributionDataType] = None
    Currency_Reference: Optional[CurrencyObjectType] = None


class EmployerContributionDataType(BaseModel):
    Contribution_Data: Optional[ContributionDataType] = None
    Payroll_Interface_Contribution_Data: Optional[
        PayrollInterfaceContributionDataType
    ] = None
    Goal_Data: Optional[GoalDataType] = None
    Currency_Reference: Optional[CurrencyObjectType] = None


class HealthSavingsAccountCoverageDataType(BaseModel):
    Benefit_Election_Data: Optional[WorkerBenefitElectionDataType] = None
    Health_Savings_Account_Election_Info_Data: Optional[
        HealthSavingsAccountElectionInfoDataType
    ] = None
    Employee_Contribution_Data: Optional[EmployeeContributionDataType] = None
    Employer_Contribution_Data: Optional[EmployerContributionDataType] = None


class WorkerHealthSavingsAccountPeriodDataType(BaseModel):
    Enrollment_Period_Data: Optional[EnrollmentPeriodDataType] = None
    Health_Savings_Account_Coverage_Data: Optional[
        List[HealthSavingsAccountCoverageDataType]
    ] = Field(None, min_items=0)


class WorkerHealthSavingsAccountDataType(BaseModel):
    Health_Savings_Account_Period_Data: Optional[
        List[WorkerHealthSavingsAccountPeriodDataType]
    ] = Field(None, min_items=0)


class SpendingAccountCoverageDataType(BaseModel):
    Benefit_Election_Data: Optional[WorkerBenefitElectionDataType] = None
    Employee_Contribution_Data: Optional[EmployeeContributionDataType] = None
    Employer_Contribution_Data: Optional[EmployerContributionDataType] = None


class WorkerSpendingAccountPeriodDataType(BaseModel):
    Enrollment_Period_Data: Optional[EnrollmentPeriodDataType] = None
    Spending_Account_Coverage_Data: Optional[
        List[SpendingAccountCoverageDataType]
    ] = Field(None, min_items=0)


class WorkerSpendingAccountDataType(BaseModel):
    Spending_Account_Period_Data: Optional[
        List[WorkerSpendingAccountPeriodDataType]
    ] = Field(None, min_items=0)


class CoverageLevelValueDataType(BaseModel):
    Coverage_Level_Value: float
    Buy_Up_Amount: Optional[float] = None
    Guarantee_Issue_Amount: Optional[float] = None
    Coverage_Level_Multiplier: float
    Coverage_Level_Type: str
    Currency_Reference: CurrencyObjectType


class VolumeDataType(BaseModel):
    Volume: float
    Currency_Reference: CurrencyObjectType


class InsuranceCoverageLevelDataType(BaseModel):
    Coverage_Level_Value_Data: CoverageLevelValueDataType
    Volume_Data: VolumeDataType


class BeneficiaryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class BeneficiaryObjectType(BaseModel):
    ID: Optional[List[BeneficiaryObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class BeneficiaryAllocationDataType(BaseModel):
    Allocation_Type: str
    Amount: float
    Amount_Type: str
    Currency_Reference: Optional[CurrencyObjectType] = None


class BeneficiaryDesignationDataType(BaseModel):
    Beneficiary_Reference: BeneficiaryObjectType
    Original_Coverage_Begin_Date: date
    Coverage_End_Date: Optional[date] = None
    Beneficiary_Allocation_Data: BeneficiaryAllocationDataType


class WorkerInsuranceCoverageDataType(BaseModel):
    Insurance_Coverage_Level_Data: InsuranceCoverageLevelDataType
    Benefit_Election_Data: WorkerBenefitElectionDataType
    Dependent_Coverage_Data: Optional[List[DependentCoverageDataType]] = Field(
        None, min_items=0
    )
    Beneficiary_Designation_Data: Optional[
        List[BeneficiaryDesignationDataType]
    ] = Field(None, min_items=0)


class WorkerInsurancePeriodDataType(BaseModel):
    Enrollment_Period_Data: Optional[EnrollmentPeriodDataType] = None
    Insurance_Coverage_Data: Optional[List[WorkerInsuranceCoverageDataType]] = Field(
        None, min_items=0
    )


class WorkerInsuranceDataType(BaseModel):
    Insurance_Period_Data: Optional[List[WorkerInsurancePeriodDataType]] = Field(
        None, min_items=0
    )


class EmployeeContributionPercentageDataType(BaseModel):
    Election_Percentage: float
    Contribution_Percentage_Maximum: float


class ContributionAmountDataType(BaseModel):
    Contribution_Amount: float
    Frequency_Reference: FrequencyObjectType


class PayrollInterfaceContributionAmountDataType(BaseModel):
    Contribution_Amount: float
    Frequency_Reference: FrequencyObjectType


class EmployeeContributionAmountDataType(BaseModel):
    Contribution_Amount_Data: ContributionAmountDataType
    Payroll_Interface_Contribution_Amount_Data: Optional[
        PayrollInterfaceContributionAmountDataType
    ] = None
    Contribution_Amount_Maximum: float
    Currency_Reference: Optional[CurrencyObjectType] = None


class EmployerContributionPercentageDataType(BaseModel):
    Election_Percentage: Optional[float] = None


class EmployerContributionAmountDataType(BaseModel):
    Contribution_Amount_Data: ContributionAmountDataType
    Payroll_Interface_Contribution_Amount_Data: Optional[
        PayrollInterfaceContributionAmountDataType
    ] = None
    Currency_Reference: CurrencyObjectType


class WorkerRetirementSavingsDataType(BaseModel):
    Benefit_Election_Data: WorkerBenefitElectionDataType
    Employee_Contribution_Percentage_Data: Optional[
        EmployeeContributionPercentageDataType
    ] = None
    Employee_Contribution_Amount_Data: Optional[
        EmployeeContributionAmountDataType
    ] = None
    Employer_Contribution_Percentage_Data: Optional[
        EmployerContributionPercentageDataType
    ] = None
    Employer_Contribution_Amount_Data: Optional[
        EmployerContributionAmountDataType
    ] = None
    Beneficiary_Designation_Data: Optional[
        List[BeneficiaryDesignationDataType]
    ] = Field(None, min_items=0)


class WorkerRetirementSavingsPeriodDataType(BaseModel):
    Enrollment_Period_Data: Optional[EnrollmentPeriodDataType] = None
    Retirement_Savings_Coverage_Data: Optional[
        List[WorkerRetirementSavingsDataType]
    ] = Field(None, min_items=0)


class RetirementSavingsDataType(BaseModel):
    Retirement_Savings_Period_Data: Optional[
        List[WorkerRetirementSavingsPeriodDataType]
    ] = Field(None, min_items=0)


class AdditionalBenefitsCoverageTargetObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AdditionalBenefitsCoverageTargetObjectType(BaseModel):
    ID: Optional[List[AdditionalBenefitsCoverageTargetObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class WorkerAdditionalBenefitsCoverageDataType(BaseModel):
    Additional_Benefits_Coverage_Target_Reference: Optional[
        AdditionalBenefitsCoverageTargetObjectType
    ] = None
    Original_Coverage_Begin_Date_for_Coverage_Target: Optional[date] = None
    Benefit_Election_Data: Optional[WorkerBenefitElectionDataType] = None
    Percent_Contribution_Data: Optional[EmployeeContributionPercentageDataType] = None
    Amount_Contribution_Data: Optional[
        List[EmployeeContributionAmountDataType]
    ] = Field(None, min_items=0)


class WorkerAdditionalBenefitsPeriodDataType(BaseModel):
    Enrollment_Period_Data: Optional[EnrollmentPeriodDataType] = None
    Additional_Benefits_Coverage_Data: Optional[
        List[WorkerAdditionalBenefitsCoverageDataType]
    ] = Field(None, min_items=0)


class WorkerAdditionalBenefitsDataType(BaseModel):
    Additional_Benefits_Period_Data: Optional[
        List[WorkerAdditionalBenefitsPeriodDataType]
    ] = Field(None, min_items=0)


class WorkerBenefitEnrollmentDataType(BaseModel):
    Health_Care_Data: Optional[WorkerHealthCareDataType] = None
    Health_Savings_Account_Data: Optional[WorkerHealthSavingsAccountDataType] = None
    Spending_Account_Data: Optional[WorkerSpendingAccountDataType] = None
    Insurance_Data: Optional[WorkerInsuranceDataType] = None
    Retirement_Savings_Data: Optional[RetirementSavingsDataType] = None
    Additional_Benefits_Data: Optional[WorkerAdditionalBenefitsDataType] = None
    COBRA_Eligibility_Data: Optional[List[COBRAEligibilityDataType]] = Field(
        None, min_items=0
    )


class PlanEligiblityDatesDataType(BaseModel):
    Benefit_Plan_Reference: Optional[BenefitPlanObjectType] = None
    Earliest_Eligibility_Date: Optional[date] = None
    Earliest_Contiguous_Eligibility_Date: Optional[date] = None


class WorkerBenefitEligibilityDataType(BaseModel):
    Benefit_Plan_Reference: Optional[List[BenefitPlanObjectType]] = Field(
        None, min_items=0
    )
    Plan_Eligibility_Dates_Data: Optional[List[PlanEligiblityDatesDataType]] = Field(
        None, min_items=0
    )


class LivesWithWorkerDataType(BaseModel):
    Effective_Date: Optional[date] = None
    Lives_With_Worker: Optional[bool] = None


class HasHealthInsuranceDataType(BaseModel):
    Effective_Date: Optional[date] = None
    Has_Health_Insurance: Optional[bool] = None


class AllowedForTaxDeductionDataType(BaseModel):
    Effective_Date: Optional[date] = None
    Allowed_for_Tax_Deduction: Optional[bool] = None


class AnnualIncomeDataType(BaseModel):
    Effective_Date: Optional[date] = None
    Currency_Reference: CurrencyObjectType
    Annual_Income: Optional[float] = None


class OccupationDataType(BaseModel):
    Effective_Date: Optional[date] = None
    Occupation: Optional[str] = None


class DisabilityStatusSubDataForRelatedPersonType(BaseModel):
    Disability_Reference: DisabilityObjectType
    Disability_Status_Date: Optional[date] = None
    Date_Known: Optional[date] = None
    Disability_End_Date: Optional[date] = None
    Disability_Grade_Reference: Optional[DisabilityGradeObjectType] = None
    Disability_Degree: Optional[float] = None


class DisabilityStatusInformationDataForRelatedPersonType(BaseModel):
    Disability_Status_Reference: Optional[DisabilityStatusReferenceObjectType] = None
    Delete: Optional[bool] = None
    Disability_Status_Data: Optional[DisabilityStatusSubDataForRelatedPersonType] = None


class DisabilityInformationDataForRelatedPersonType(BaseModel):
    Replace_All: Optional[bool] = None
    Disability_Status_Information_Data: Optional[
        List[DisabilityStatusInformationDataForRelatedPersonType]
    ] = Field(None, min_items=0)


class DependentDataType(BaseModel):
    Dependent_ID: Optional[str] = None
    Fulltime_Student: Optional[bool] = None
    Student_Status_Start_Date: Optional[date] = None
    Student_Status_End_Date: Optional[date] = None
    Disabled: Optional[bool] = None
    Inactive_Date: Optional[date] = None
    Dependent_for_Payroll_Purposes: Optional[bool] = None
    Citizenship_Status_Reference: Optional[List[CitizenshipStatusObjectType]] = Field(
        None, min_items=0
    )
    Country_of_Nationality_Reference: Optional[CountryObjectType] = None
    Country_of_Birth_Reference: Optional[CountryObjectType] = None
    Region_of_Birth_Reference: Optional[CountryRegionObjectType] = None
    City_of_Birth: Optional[str] = None
    Court_Order: Optional[
        List[QualifiedDomesticRelationsOrderReplacementDataType]
    ] = Field(None, min_items=0)
    Lives_With_Worker_Data: Optional[List[LivesWithWorkerDataType]] = Field(
        None, min_items=0
    )
    Has_Health_Insurance_Data: Optional[List[HasHealthInsuranceDataType]] = Field(
        None, min_items=0
    )
    Allowed_for_Tax_Deduction_Data: Optional[
        List[AllowedForTaxDeductionDataType]
    ] = Field(None, min_items=0)
    Annual_Income_Data: Optional[List[AnnualIncomeDataType]] = Field(None, min_items=0)
    Occupation_Data: Optional[List[OccupationDataType]] = Field(None, min_items=0)
    Disability_Data: Optional[
        List[DisabilityInformationDataForRelatedPersonType]
    ] = Field(None, min_items=0)


class DependentType(BaseModel):
    Dependent_Reference: DependentObjectType
    Dependent_Data: DependentDataType


class BeneficiaryDataType(BaseModel):
    Beneficiary_ID: Optional[str] = None
    Irrevocable: Optional[bool] = None
    Inactive_Date: Optional[date] = None
    Court_Order: Optional[
        List[QualifiedDomesticRelationsOrderReplacementDataType]
    ] = Field(None, min_items=0)


class BeneficiaryType(BaseModel):
    Beneficiary_Reference: BeneficiaryObjectType
    Beneficiary_Data: BeneficiaryDataType


class EmergencyContactPriorityObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmergencyContactPriorityObjectType(BaseModel):
    ID: Optional[List[EmergencyContactPriorityObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmergencyContactDataType(BaseModel):
    Emergency_Contact_ID: Optional[str] = None
    Language_Reference: Optional[List[LanguageObjectType]] = Field(None, min_items=0)
    Emergency_Contact_Priority_Reference: Optional[
        EmergencyContactPriorityObjectType
    ] = None
    Primary: Optional[bool] = None
    Priority: Optional[float] = None


class OldEmergencyContactType(BaseModel):
    Emergency_Contact_Reference: EmergencyContactObjectType
    Emergency_Contact_Data: EmergencyContactDataType


class RelatedPersonType(BaseModel):
    Related_Person_Relationship_Reference: Optional[
        List[RelatedPersonRelationshipObjectType]
    ] = Field(None, min_items=0)
    Person_Reference: Optional[UniqueIdentifierObjectType] = None
    Personal_Data: Optional[PersonalInformationDataType] = None
    Dependent: Optional[DependentType] = None
    Beneficiary: Optional[BeneficiaryType] = None
    Emergency_Contact: Optional[OldEmergencyContactType] = None


class WorkerRelatedPersonsDataType(BaseModel):
    Number_of_Payroll_Dependents: Optional[float] = None
    Related_Person: Optional[List[RelatedPersonType]] = Field(None, min_items=0)


class PerformanceReviewObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PerformanceReviewObjectType(BaseModel):
    ID: Optional[List[PerformanceReviewObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ReviewTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ReviewTypeObjectType(BaseModel):
    ID: Optional[List[ReviewTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmployeeReviewTemplateObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class EmployeeReviewTemplateObjectType(BaseModel):
    ID: Optional[List[EmployeeReviewTemplateObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ReviewRatingObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ReviewRatingObjectType(BaseModel):
    ID: Optional[List[ReviewRatingObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class OverallEvaluationDetailDataType(BaseModel):
    Rating_Reference: Optional[ReviewRatingObjectType] = None
    Comment: Optional[str] = None


class SelfEvaluationDetailDataType(BaseModel):
    Overall_Data: Optional[OverallEvaluationDetailDataType] = None


class ManagerEvaluationDetailDataType(BaseModel):
    Overall_Data: Optional[OverallEvaluationDetailDataType] = None


class EmployeeReviewDetailsDataType(BaseModel):
    Manager_Reference: Optional[WorkerObjectType] = None
    Review_Type_Reference: Optional[ReviewTypeObjectType] = None
    Review_Template_Reference: Optional[EmployeeReviewTemplateObjectType] = None
    Review_Initiated_Date: Optional[datetime] = None
    Period_Start_Date: Optional[date] = None
    Period_End_Date: Optional[date] = None
    Self_Evaluation_Data: Optional[SelfEvaluationDetailDataType] = None
    Manager_Evaluation_Data: Optional[ManagerEvaluationDetailDataType] = None


class PerformanceReviewDataType(BaseModel):
    Performance_Review_Reference: Optional[PerformanceReviewObjectType] = None
    Review_Data: Optional[EmployeeReviewDetailsDataType] = None


class PerformanceImprovementPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PerformanceImprovementPlanObjectType(BaseModel):
    ID: Optional[List[PerformanceImprovementPlanObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class PerformanceImprovementPlanDataType(BaseModel):
    Performance_Improvement_Plan_Reference: Optional[
        PerformanceImprovementPlanObjectType
    ] = None
    Review_Data: Optional[EmployeeReviewDetailsDataType] = None


class DevelopmentPlanObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DevelopmentPlanObjectType(BaseModel):
    ID: Optional[List[DevelopmentPlanObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DevelopmentPlanDataType(BaseModel):
    Development_Plan_Reference: Optional[DevelopmentPlanObjectType] = None
    Review_Data: Optional[EmployeeReviewDetailsDataType] = None


class DisciplinaryActionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DisciplinaryActionObjectType(BaseModel):
    ID: Optional[List[DisciplinaryActionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DisciplinaryActionReasonObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DisciplinaryActionReasonObjectType(BaseModel):
    ID: Optional[List[DisciplinaryActionReasonObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DisciplinaryActionDataType(BaseModel):
    Disciplinary_Action_Reference: Optional[DisciplinaryActionObjectType] = None
    Disciplinary_Action_Reason_Reference: Optional[
        List[DisciplinaryActionReasonObjectType]
    ] = Field(None, min_items=0)
    Disciplinary_Action_Related_To_Reference: Optional[
        List[DisciplinaryActionObjectType]
    ] = Field(None, min_items=0)
    Review_Data: Optional[EmployeeReviewDetailsDataType] = None


class EmployeeReviewDataType(BaseModel):
    Performance_Review_Data: Optional[PerformanceReviewDataType] = None
    Performance_Improvement_Plan_Data: Optional[
        PerformanceImprovementPlanDataType
    ] = None
    Development_Plan_Data: Optional[DevelopmentPlanDataType] = None
    Disciplinary_Action_Data: Optional[DisciplinaryActionDataType] = None


class EmployeeImageDataType(BaseModel):
    Filename: str
    Image: Optional[List[int]] = None


class WorkerDocumentDetailsDataType(BaseModel):
    Document_Category_Reference: DocumentCategoryAllObjectType
    Filename: str
    Comment: Optional[str] = None
    File: Optional[List[int]] = None


class WorkerDocumentWWSType(BaseModel):
    Worker_Document_Reference: WorkerDocumentObjectType
    Worker_Document_Detail_Data: WorkerDocumentDetailsDataType


class WorkerDocumentDataWWSType(BaseModel):
    Worker_Document: Optional[List[WorkerDocumentWWSType]] = Field(None, min_items=0)


class EventTargetObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str
    parent_id: Optional[str] = None
    parent_type: Optional[str] = None


class EventTargetObjectType(BaseModel):
    ID: Optional[List[EventTargetObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class TransactionLogDataType(BaseModel):
    Transaction_Log_Description: Optional[str] = None
    Transaction_Effective_Moment: Optional[datetime] = None
    Transaction_Entry_Moment: Optional[datetime] = None
    Transaction_Log_Type_Reference: Optional[
        List[TransactionLogTypeObjectType]
    ] = Field(None, min_items=0)
    Transaction_Target_Reference: Optional[List[EventTargetObjectType]] = Field(
        None, min_items=0
    )
    Is_Rescind_Or_Rescinded: Optional[bool] = None
    Is_Correction_Or_Corrected: Optional[bool] = None


class TransactionLogEntryType(BaseModel):
    Transaction_Log_Reference: Optional[TransactionLogObjectType] = None
    Transaction_Log_Data: Optional[TransactionLogDataType] = None


class EventTargetTransactionLogEntryDataType(BaseModel):
    Transaction_Log_Entry: Optional[List[TransactionLogEntryType]] = Field(
        None, min_items=0
    )


class MainTransactionLogEntryDataType(BaseModel):
    Transaction_Log_Reference: Optional[TransactionLogObjectType] = None
    Transaction_Log_Data: Optional[TransactionLogDataType] = None


class TransactionLogRescindAndCorrectEventDataType(BaseModel):
    Transaction_Log_Reference: Optional[TransactionLogObjectType] = None
    Transaction_Log_Description: Optional[str] = None
    Is_Correction: Optional[bool] = None
    Is_Rescind: Optional[bool] = None
    Prior_Effective_Moment: Optional[date] = None
    Transaction_Entry_Moment: Optional[datetime] = None


class CorrectedOrRescindedTransactionDataType(BaseModel):
    Main_Transaction_Data: Optional[List[MainTransactionLogEntryDataType]] = Field(
        None, min_items=0
    )
    Correction_Or_Rescind_Data: Optional[
        List[TransactionLogRescindAndCorrectEventDataType]
    ] = Field(None, min_items=0)


class EventTargetTransactionLogRescindAndCorrectDataType(BaseModel):
    Corrected_Or_Rescinded_Transaction_Log_Data: Optional[
        List[CorrectedOrRescindedTransactionDataType]
    ] = Field(None, min_items=0)


class SuccessionReadinessObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SuccessionReadinessObjectType(BaseModel):
    ID: Optional[List[SuccessionReadinessObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SuccessionPlanCandidateDataType(BaseModel):
    Position_Element_Reference: Optional[PositionElementObjectType] = None
    Succession_Readiness_Reference: Optional[SuccessionReadinessObjectType] = None
    Top_Candidate: Optional[bool] = None
    Notes: Optional[str] = None
    Last_Updated: Optional[str] = None


class SuccessionProfileDataType(BaseModel):
    Candidate_Data: Optional[List[SuccessionPlanCandidateDataType]] = Field(
        None, min_items=0
    )


class PotentialObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class PotentialObjectType(BaseModel):
    ID: Optional[List[PotentialObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class AchievableLevelObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class AchievableLevelObjectType(BaseModel):
    ID: Optional[List[AchievableLevelObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class RetentionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RetentionObjectType(BaseModel):
    ID: Optional[List[RetentionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class LossImpactObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class LossImpactObjectType(BaseModel):
    ID: Optional[List[LossImpactObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EmployeeTalentAssessmentDataType(BaseModel):
    Potential_Reference: Optional[PotentialObjectType] = None
    Achievable_Level_Reference: Optional[AchievableLevelObjectType] = None
    Retention_Risk_Reference: Optional[RetentionObjectType] = None
    Loss_Impact_Risk_Reference: Optional[LossImpactObjectType] = None
    Notes: Optional[str] = None


class TalentAssessmentDataType(BaseModel):
    Employee_Potential_Data: Optional[EmployeeTalentAssessmentDataType] = None


class GoalObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class GoalObjectType(BaseModel):
    ID: Optional[List[GoalObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class OrganizationGoalObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class OrganizationGoalObjectType(BaseModel):
    ID: Optional[List[OrganizationGoalObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ComponentCompletionObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ComponentCompletionObjectType(BaseModel):
    ID: Optional[List[ComponentCompletionObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class GoalDetailDataType(BaseModel):
    Goal_Reference_ID: Optional[str] = None
    Goal: Optional[str] = None
    Description: Optional[str] = None
    Organization_Goal_Reference: Optional[OrganizationGoalObjectType] = None
    Due_Date: Optional[date] = None
    Completion_Status_Reference: Optional[ComponentCompletionObjectType] = None
    Completion_Date: Optional[date] = None


class WorkerGoalType(BaseModel):
    Goal_Reference: Optional[GoalObjectType] = None
    Goal_Data: Optional[List[GoalDetailDataType]] = Field(None, min_items=0)


class WorkerGoalDataType(BaseModel):
    Goal: Optional[List[WorkerGoalType]] = Field(None, min_items=0)


class DevelopmentItemObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DevelopmentItemObjectType(BaseModel):
    ID: Optional[List[DevelopmentItemObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DevelopmentItemCategoryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DevelopmentItemCategoryObjectType(BaseModel):
    ID: Optional[List[DevelopmentItemCategoryObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DevelopmentItemStatusObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class DevelopmentItemStatusObjectType(BaseModel):
    ID: Optional[List[DevelopmentItemStatusObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class TalentTagObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class TalentTagObjectType(BaseModel):
    ID: Optional[List[TalentTagObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class DevelopmentItemVersionDataType(BaseModel):
    ID: Optional[str] = None
    Development_Item: str
    Additional_Information: Optional[str] = None
    Category_Reference: Optional[List[DevelopmentItemCategoryObjectType]] = Field(
        None, min_items=0
    )
    Development_Item_Start_Date: Optional[date] = None
    Development_Item_Completion_Date: Optional[date] = None
    Status_Reference: DevelopmentItemStatusObjectType
    Status_Note: Optional[str] = None
    Updated_by_Worker_Reference: Optional[WorkerObjectType] = None
    Relates_To_Reference: Optional[List[TalentTagObjectType]] = Field(None, min_items=0)


class WorkerDevelopmentItemType(BaseModel):
    Development_Item_Reference: Optional[DevelopmentItemObjectType] = None
    Development_Item_Data: Optional[DevelopmentItemVersionDataType] = None


class WorkerDevelopmentItemDataType(BaseModel):
    Worker_Development_Item: Optional[List[WorkerDevelopmentItemType]] = Field(
        None, min_items=0
    )


class SkillCategoryObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class SkillCategoryObjectType(BaseModel):
    ID: Optional[List[SkillCategoryObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SkillItemDataType(BaseModel):
    Category_Reference: Optional[List[SkillCategoryObjectType]] = Field(
        None, min_items=0
    )
    ID: Optional[str] = None
    Hide_from_Candidates: Optional[bool] = None
    Exclude_From_Synonym_Management: Optional[bool] = None
    Name: Optional[str] = None
    Inactive: Optional[bool] = None


class SkillType(BaseModel):
    Skill_Reference: Optional[LocalSkillObjectType] = None
    Skill_Data: Optional[List[SkillItemDataType]] = Field(None, min_items=0)


class WorkerSkillItemDataType(BaseModel):
    Worker_Skill_Item: Optional[List[SkillType]] = Field(None, min_items=0)


class EmployeeContractsDataType(BaseModel):
    Employee_Contract_Data: Optional[List[EmployeeContractDataType]] = Field(
        None, min_items=0
    )


class ExtendedEmployeeContractDataType(BaseModel):
    Employee_Contract_Data: Optional[List[EmployeeContractDataType]] = Field(
        None, min_items=0
    )


class ExtendedEmployeeContractsDataType(BaseModel):
    Extended_Employee_Contract_Data: Optional[
        List[ExtendedEmployeeContractDataType]
    ] = Field(None, min_items=0)


class FeedbackResponseType(BaseModel):
    Feedback_Question: Optional[str] = None
    Feedback_Comment: Optional[str] = None


class FeedbackReceivedType(BaseModel):
    From: Optional[str] = None
    Requested_By_Worker_Reference: Optional[WorkerObjectType] = None
    Feedback_Type: Optional[str] = None
    Date: Optional[date] = None
    Feedback_Response_Data: Optional[List[FeedbackResponseType]] = Field(
        None, min_items=0
    )


class FeedbackReceivedDataType(BaseModel):
    Feedback_Received: Optional[List[FeedbackReceivedType]] = Field(None, min_items=0)


class HourClockObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class HourClockObjectType(BaseModel):
    ID: Optional[List[HourClockObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class SystemUserForWorkerDataType(BaseModel):
    User_Name: str
    User_Language__Reference: Optional[UserLanguageObjectType] = None
    Preferred_Communication_Language_Reference: Optional[UserLanguageObjectType] = None
    Locale__Reference: Optional[LocaleObjectType] = None
    Hour_Clock_Reference: Optional[HourClockObjectType] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Time_Zone_Reference: Optional[TimeZoneObjectType] = None
    Default_Display_Language_Reference: Optional[UserLanguageObjectType] = None
    Simplified_View: Optional[bool] = None


class RelocationAreaObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class RelocationAreaObjectType(BaseModel):
    ID: Optional[List[RelocationAreaObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class RelocationPreferenceDataType(BaseModel):
    Short_Term_Relocation_Reference: Optional[CommonBooleanEnumerationObjectType] = None
    Short_Term_Relocation_Area__Reference: Optional[
        List[RelocationAreaObjectType]
    ] = Field(None, min_items=0)
    Long_Term_Relocation_Reference: Optional[CommonBooleanEnumerationObjectType] = None
    Long_Term_Relocation_Area__Reference: Optional[
        List[RelocationAreaObjectType]
    ] = Field(None, min_items=0)
    Additional_Information: Optional[str] = None


class MobilityChoiceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class MobilityChoiceObjectType(BaseModel):
    ID: Optional[List[MobilityChoiceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class TravelAmountObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class TravelAmountObjectType(BaseModel):
    ID: Optional[List[TravelAmountObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class TravelPreferenceDataType(BaseModel):
    Willing_to_Travel_Reference: Optional[MobilityChoiceObjectType] = None
    Travel_Amount_Reference: Optional[TravelAmountObjectType] = None
    Travel_Additional_Information: Optional[str] = None


class JobInterestsDataType(BaseModel):
    Job_Profile_Reference: Optional[List[JobProfileObjectType]] = Field(
        None, min_items=0
    )


class CareerPreferenceObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class CareerPreferenceObjectType(BaseModel):
    ID: Optional[List[CareerPreferenceObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class CareerPreferencesDataType(BaseModel):
    Career_Interest_Reference: Optional[List[CareerPreferenceObjectType]] = Field(
        None, min_items=0
    )
    Career_Interests: Optional[str] = None


class WorkerCareerDataType(BaseModel):
    Relocation_Data: Optional[RelocationPreferenceDataType] = None
    Travel_Data: Optional[TravelPreferenceDataType] = None
    Job_Interests_Data: Optional[JobInterestsDataType] = None
    Career_Interests_Data: Optional[CareerPreferencesDataType] = None


class ProvisioningGroupAssignmentForPersonDataType(BaseModel):
    Provisioning_Group: Optional[str] = None
    Status: Optional[str] = None
    Last_Changed: Optional[datetime] = None


class PersonAccountProvisioningDataType(BaseModel):
    Provisioning_Group_Assignment_Data: Optional[
        List[ProvisioningGroupAssignmentForPersonDataType]
    ] = Field(None, min_items=0)


class TaxAuthorityFormTypeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class TaxAuthorityFormTypeObjectType(BaseModel):
    ID: Optional[List[TaxAuthorityFormTypeObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class ContingentWorkerTaxAuthorityFormInformationDataType(BaseModel):
    Tax_Authority_Form_Type_Reference: Optional[TaxAuthorityFormTypeObjectType] = None


class WorkerDataType(BaseModel):
    Worker_ID: Optional[str] = None
    User_ID: Optional[str] = None
    Universal_ID: Optional[str] = None
    Personal_Data: Optional[PersonalInformationDataType] = None
    Employment_Data: Optional[WorkerEmploymentInformationDataType] = None
    Compensation_Data: Optional[WorkerCompensationDataType] = None
    Organization_Data: Optional[WorkerOrganizationDataType] = None
    Role_Data: Optional[WorkerRoleDataType] = None
    Management_Chain_Data: Optional[WorkerManagementChainDataType] = None
    Benefit_Enrollment_Data: Optional[WorkerBenefitEnrollmentDataType] = None
    Benefit_Eligibility_Data: Optional[WorkerBenefitEligibilityDataType] = None
    Related_Person_Data: Optional[WorkerRelatedPersonsDataType] = None
    Qualification_Data: Optional[PersonQualificationDataType] = None
    Employee_Review_Data: Optional[EmployeeReviewDataType] = None
    Photo_Data: Optional[EmployeeImageDataType] = None
    Worker_Document_Data: Optional[WorkerDocumentDataWWSType] = None
    Integration_Field_Override_Data: Optional[
        List[DocumentFieldResultDataType]
    ] = Field(None, min_items=0)
    Transaction_Log_Entry_Data: Optional[EventTargetTransactionLogEntryDataType] = None
    Transaction_Log_Corrected_And_Rescinded_Data: Optional[
        List[EventTargetTransactionLogRescindAndCorrectDataType]
    ] = Field(None, min_items=0)
    Succession_Profile_Data: Optional[SuccessionProfileDataType] = None
    Talent_Assessment_Data: Optional[TalentAssessmentDataType] = None
    Worker_Goal_Data: Optional[WorkerGoalDataType] = None
    Development_Item_Data: Optional[WorkerDevelopmentItemDataType] = None
    Skill_Data: Optional[WorkerSkillItemDataType] = None
    Employee_Contracts_Data: Optional[EmployeeContractsDataType] = None
    Extended_Employee_Contracts_Data: Optional[ExtendedEmployeeContractsDataType] = None
    Feedback_Received_Data: Optional[FeedbackReceivedDataType] = None
    User_Account_Data: Optional[SystemUserForWorkerDataType] = None
    Career_Data: Optional[WorkerCareerDataType] = None
    Account_Provisioning_Data: Optional[PersonAccountProvisioningDataType] = None
    Background_Check_Data: Optional[List[BackgroundCheckOverallStatusDataType]] = Field(
        None, min_items=0
    )
    Contingent_Worker_Tax_Authority_Form_Type_Data: Optional[
        List[ContingentWorkerTaxAuthorityFormInformationDataType]
    ] = Field(None, min_items=0)


class WorkerType(BaseModel):
    Worker_Reference: Optional[WorkerObjectType] = None
    Worker_Descriptor: Optional[str] = None
    Universal_Identifier_Reference: Optional[UniversalIdentifierObjectType] = None
    Worker_Data: Optional[WorkerDataType] = None


class WorkersResponseDataType(BaseModel):
    Worker: Optional[List[WorkerType]] = Field(None, min_items=0)


class GetWorkersResponseType(BaseModel):
    Request_References: Optional[WorkerRequestReferencesType] = None
    Request_Criteria: Optional[WorkerRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[WorkerResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[WorkersResponseDataType] = None
    Invalid_Reference_ID_Response: Optional[
        List[InvalidReferenceIDResponseType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class PutEditNoticePeriodsEventDataType(BaseModel):
    Employee_Reference: EmployeeObjectType
    Effective_Date: date
    Employer_Notice_Period_Data: Optional[EmployerNoticePeriodDataType] = None
    Employee_Notice_Period_Data: Optional[EmployeeNoticePeriodDataType] = None


class PutEditNoticePeriodsEventRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Put_Edit_Notice_Periods_Event_Data: PutEditNoticePeriodsEventDataType
    version: Optional[str] = None


class NoticePeriodLineDataType(BaseModel):
    Order: str
    Eligibility_Rule_Reference: ConditionRuleObjectType
    Has_Notice_Period: Optional[bool] = None
    For_Employer: Optional[bool] = None
    For_Employee: Optional[bool] = None
    Duration: Optional[float] = None
    Unit_Reference: Optional[DateAndTimeUnitObjectType] = None
    Adjustment_Reference: Optional[UniqueIdentifierObjectType] = None
    Inactive: Optional[bool] = None


class NoticePeriodsForCountryDataType(BaseModel):
    Country_Reference: CountryObjectType
    Notice_Period_Line_Data: Optional[List[NoticePeriodLineDataType]] = Field(
        None, min_items=0
    )


class NoticePeriodsForCountryGetDataType(BaseModel):
    Maintain_Notice_Periods_For_Country_Reference: Optional[
        NoticePeriodsSetupTableObjectType
    ] = None
    Maintain_Notice_Periods_For_Country_Data: Optional[
        NoticePeriodsForCountryDataType
    ] = None


class NoticePeriodsForCountryResponseDataType(BaseModel):
    Maintain_Notice_Periods_For_Country: Optional[
        List[NoticePeriodsForCountryGetDataType]
    ] = Field(None, min_items=0)


class GetMaintainNoticePeriodsForCountryResponseType(BaseModel):
    Request_References: Optional[NoticePeriodsForCountryRequestReferencesType] = None
    Request_Criteria: Optional[NoticePeriodsForCountryRequestCriteriaType] = None
    Response_Data: Optional[NoticePeriodsForCountryResponseDataType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    version: Optional[str] = None


class StaffingDefaultingFieldConfigurationObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class StaffingDefaultingFieldConfigurationObjectType(BaseModel):
    ID: Optional[List[StaffingDefaultingFieldConfigurationObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class StaffingFieldDefaultsRequestReferencesType(BaseModel):
    Staffing_Field_Defaults_Reference: List[
        StaffingDefaultingFieldConfigurationObjectType
    ] = Field(..., min_items=1)


class StaffingFieldDefaultsRequestCriteriaType(BaseModel):
    pass


class StaffingFieldDefaultsResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None


class GetStaffingFieldDefaultsRequestType(BaseModel):
    Request_References: Optional[StaffingFieldDefaultsRequestReferencesType] = None
    Request_Criteria: Optional[StaffingFieldDefaultsRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[StaffingFieldDefaultsResponseGroupType] = None
    version: Optional[str] = None


class DeleteWorkerDocumentDataType(BaseModel):
    Worker_Document_Reference: WorkerDocumentObjectType


class DeleteWorkerDocumentRequestType(BaseModel):
    Worker_Reference: WorkerObjectType
    Delete_Worker_Data: List[DeleteWorkerDocumentDataType] = Field(..., min_items=1)
    version: Optional[str] = None


class AssignOrganizationEventDataType(BaseModel):
    Position_Reference: StaffingInterfaceObjectType
    Worker_Reference: Optional[WorkerObjectType] = None
    Organization_Reference: Optional[List[OrganizationObjectType]] = Field(
        None, min_items=0
    )
    Fund_Reference: Optional[List[FundObjectType]] = Field(None, min_items=0)
    Grant_Reference: Optional[List[GrantObjectType]] = Field(None, min_items=0)
    Program_Reference: Optional[List[ProgramObjectType]] = Field(None, min_items=0)
    Business_Unit_Reference: Optional[List[BusinessUnitObjectType]] = Field(
        None, min_items=0
    )
    Gift_Reference: Optional[List[GiftObjectType]] = Field(None, min_items=0)
    Check_Position_Budget_Sub_Process: Optional[
        CheckPositionBudgetSubBusinessProcessType
    ] = None
    As_Of_Effective_Date: Optional[date] = None


class AssignOrganizationRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Assign_Organization_Data: AssignOrganizationEventDataType
    version: Optional[str] = None


class GetChangeLegalNameRequestReferencesType(BaseModel):
    Person_Reference: Optional[List[RoleObjectType]] = Field(None, min_items=0)
    Universal_ID_Reference: Optional[List[UniversalIdentifierObjectType]] = Field(
        None, min_items=0
    )


class ChangeLegalNameBusinessProcessDataType(BaseModel):
    Person_Reference: Optional[RoleObjectType] = None
    Universal_ID_Reference: Optional[UniversalIdentifierObjectType] = None
    Effective_Date: Optional[date] = None
    Name_Data: PersonNameDetailDataType


class ChangeLegalNameResponseWrapperType(BaseModel):
    Person_Reference: Optional[RoleObjectType] = None
    Change_Legal_Name_Data: Optional[ChangeLegalNameBusinessProcessDataType] = None


class ChangeLegalNameResponseDataType(BaseModel):
    Change_Legal_Name: Optional[List[ChangeLegalNameResponseWrapperType]] = Field(
        None, min_items=0
    )


class GetChangeLegalNameResponseType(BaseModel):
    Request_References: Optional[GetChangeLegalNameRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[ChangeLegalNameResponseDataType] = None
    version: Optional[str] = None


class PutProbationPeriodOutcomeResponseType(BaseModel):
    Probation_Period_Outcome_Reference: Optional[
        ProbationPeriodOutcomeObjectType
    ] = None
    version: Optional[str] = None


class FSEWorkerCategoryCriteriaDataType(BaseModel):
    FSE_Worker_Category_Criteria_ID: Optional[str] = None
    FSE_Worker_Type_Grouping_Reference: UniqueIdentifierObjectType
    Job_Profile_Reference: Optional[List[JobProfileObjectType]] = Field(
        None, min_items=0
    )
    Job_Family_Reference: Optional[List[JobFamilyBaseObjectType]] = Field(
        None, min_items=0
    )


class FSEWorkerCategoryCriteriaType(BaseModel):
    FSE_Worker_Category_Criteria_Reference: Optional[
        FSEWorkerCategoryCriteriaObjectType
    ] = None
    FSE_Worker_Category_Criteria_Data: Optional[
        List[FSEWorkerCategoryCriteriaDataType]
    ] = Field(None, min_items=0)


class FSEWorkerCategoryCriteriaResponseDataType(BaseModel):
    FSE_Worker_Category_Criteria: Optional[List[FSEWorkerCategoryCriteriaType]] = Field(
        None, min_items=0
    )


class GetFSEWorkerCategoryCriteriasResponseType(BaseModel):
    Request_References: Optional[FSEWorkerCategoryCriteriaRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[FSEWorkerCategoryCriteriaResponseDataType] = None
    version: Optional[str] = None


class GetGlobalStaffingEligibilityRulesResponseType(BaseModel):
    Request_References: Optional[
        List[GlobalStaffingEligibilityRulesRequestReferencesType]
    ] = Field(None, min_items=0)
    Response_Filter: Optional[List[ResponseFilterType]] = Field(None, min_items=0)
    Response_Results: Optional[List[ResponseResultsType]] = Field(None, min_items=0)
    Response_Data: Optional[
        List[GlobalStaffingEligibilityRuleResponseDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class AssignRolesEventDataType(BaseModel):
    Effective_Date: Optional[date] = None
    Effective_Timezone_Reference: Optional[TimeZoneObjectType] = None
    Event_Target_Assignee_Reference: RoleeSelectorObjectType
    Remove_All_Role_Assignments_for_Event_Target_Assignee: Optional[bool] = None
    Assign_Roles_Role_Assignment_Data: Optional[
        List[AssignRolesRoleAssignmentDataType]
    ] = Field(None, min_items=0)


class AssignRolesRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Assign_Roles_Event_Data: AssignRolesEventDataType
    version: Optional[str] = None


class ContingentWorkerObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ContingentWorkerObjectType(BaseModel):
    ID: Optional[List[ContingentWorkerObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class EndContingentWorkerContractEventDataType(BaseModel):
    Last_Day_of_Work: Optional[date] = None
    Primary_Reason_Reference: TerminationSubcategoryObjectType
    Secondary_Reason_Reference: Optional[
        List[TerminationSubcategoryObjectType]
    ] = Field(None, min_items=0)
    Local_Termination_Reason_Reference: Optional[
        LocalTerminationReasonObjectType
    ] = None
    Notify_Worker_By_Date: Optional[date] = None
    Regrettable_Reference: Optional[CommonYesNoObjectType] = None
    Close_Position: Optional[bool] = None
    Job_Overlap_Allowed: Optional[bool] = None


class EndContingentWorkerContractDataType(BaseModel):
    Contingent_Worker_Reference: ContingentWorkerObjectType
    Contract_End_Date: date
    End_Contract_Event_Data: EndContingentWorkerContractEventDataType
    Assign_Organization_Roles_Sub_Process: Optional[
        AssignOrganizationRolesSubBusinessProcessType
    ] = None
    Create_Job_Requisition_Sub_Process: Optional[
        CreateJobRequisitionSubProcessType
    ] = None
    Assign_Roles: Optional[AssignRolesSubProcessType] = None


class EndContingentWorkerContractRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    End_Contingent_Worker_Contract_Data: EndContingentWorkerContractDataType
    version: Optional[str] = None


class WorkdayCommonHeaderType(BaseModel):
    Include_Reference_Descriptors_In_Response: Optional[bool] = None


class EmployeeContractRulesForCountryRequestReferencesType(BaseModel):
    Employee_Contracts_For_Country_Reference: List[
        EmployeeContractRulesTableObjectType
    ] = Field(..., min_items=1)


class EmployeeContractRulesForCountryRequestCriteriaType(BaseModel):
    Country_Reference: Optional[List[CountryObjectType]] = Field(None, min_items=0)


class EmployeeContractRulesForCountryGetDataType(BaseModel):
    Maintain_Employee_Contract_Rules_For_Country_Reference: Optional[
        EmployeeContractRulesTableObjectType
    ] = None
    Maintain_Employee_Contract_Rules_For_Country_Data: Optional[
        EmployeeContractRulesForCountryDataType
    ] = None


class EmployeeContractRulesForCountryResponseDataType(BaseModel):
    Maintain_Employee_Contract_Rules_For_Country: Optional[
        List[EmployeeContractRulesForCountryGetDataType]
    ] = Field(None, min_items=0)


class GetMaintainEmployeeContractRulesForCountryResponseType(BaseModel):
    Request_References: Optional[
        EmployeeContractRulesForCountryRequestReferencesType
    ] = None
    Request_Criteria: Optional[
        EmployeeContractRulesForCountryRequestCriteriaType
    ] = None
    Response_Data: Optional[EmployeeContractRulesForCountryResponseDataType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    version: Optional[str] = None


class PutProbationPeriodOutcomesResponseType(BaseModel):
    Probation_Period_Outcome_Reference: Optional[
        List[ProbationPeriodOutcomeObjectType]
    ] = Field(None, min_items=0)
    Country_Reference: Optional[CountryObjectType] = None
    Probation_Period_Outcomes_For_Country_Reference: Optional[
        ProbationPeriodOutcomesSetupTableObjectType
    ] = None
    version: Optional[str] = None


class PutMaintainEmployeeContractRulesForCountryResponseType(BaseModel):
    Country_Reference: Optional[CountryObjectType] = None
    version: Optional[str] = None


class PositionForWorkerStaffingEventIDataType(BaseModel):
    Organization_Reference: SupervisoryOrganizationObjectType
    Position_Reference: Optional[PositionElementObjectType] = None
    Position_ID: Optional[str] = None
    Job_Profile_Reference: JobProfileObjectType
    Position_Title: Optional[str] = None
    Business_Title: Optional[str] = None
    Location_Reference: LocationObjectType
    Work_Space_Reference: Optional[LocationObjectType] = None
    Position_Time_Type_Reference: PositionTimeTypeObjectType
    Time_Type_Subtype_for_Worker_Event_Reference: Optional[
        TimeTypeSubtypeObjectType
    ] = None
    Work_Shift_Reference: Optional[WorkShiftObjectType] = None
    Work_Hours_Profile_Reference: Optional[WorkHoursProfileObjectType] = None
    Default_Weekly_Hours: Optional[float] = None
    Scheduled_Weekly_Hours: Optional[float] = None
    Working_Time_Frequency_Reference: Optional[FrequencyObjectType] = None
    Working_Time_Unit_Reference: Optional[WorkingTimeUnitObjectType] = None
    Working_Time_Value: Optional[float] = None
    Specify_Paid_FTE: Optional[bool] = None
    Paid_FTE: Optional[float] = None
    Specify_Working_FTE: Optional[bool] = None
    Working_FTE: Optional[float] = None
    Pay_Rate_Type_Reference: Optional[PayRateTypeObjectType] = None
    Job_Classification_Reference: Optional[List[JobClassificationObjectType]] = Field(
        None, min_items=0
    )
    Company_Insider_Type_Reference: Optional[
        List[CompanyInsiderTypeObjectType]
    ] = Field(None, min_items=0)
    Annual_Work_Period_Reference: Optional[AcademicPayPeriodObjectType] = None
    Disbursement_Plan_Period_Reference: Optional[AcademicPayPeriodObjectType] = None
    Work_Study_Reference: Optional[PayWithWorkStudyOptionObjectType] = None
    Workers__Compensation_Code_Override_Reference: Optional[
        WorkersCompensationCodeObjectType
    ] = None
    Appointment_Type_for_Worker_Event_Reference: Optional[
        AppointmentTypeObjectType
    ] = None
    Employee_Tenure_for_Worker_Event_Reference: Optional[
        EmployeeTenureObjectType
    ] = None
    Annuitant_Indicator_for_Worker_Event_Reference: Optional[
        AnnuitantIndicatorObjectType
    ] = None
    Position_External_ID_Data: Optional[ExternalIDDataType] = None


class CompensationPackageReferenceType(BaseModel):
    Compensation_Package_Name: str


class CompensationGradeReferenceType(BaseModel):
    Compensation_Grade_Name: str


class CompensationGradeProfileReferenceType(BaseModel):
    Compensation_Profile_Name: str
    Compensation_Grade_Reference: CompensationGradeReferenceType


class CompensationStepReferenceDataType(BaseModel):
    Compensation_Step_Name: str
    Progression_Start_Date: Optional[date] = None


class CompensationElementReferenceType(BaseModel):
    Compensation_Element_Name: str


class CurrencyReferenceDataType(BaseModel):
    Currency_Code: str


class FrequencyReferenceDataType(BaseModel):
    Frequency_Name: str


class EmployeeCompensationSalaryPlanAssignmentDetailDataType(BaseModel):
    Compensation_Element_Reference: Optional[CompensationElementReferenceType] = None
    Compensation_Element_Amount: float
    Currency_Reference: CurrencyReferenceDataType
    Frequency_Reference: FrequencyReferenceDataType
    Expected_End_Date: Optional[date] = None
    Actual_End_Date: Optional[date] = None


class EmployeeCompensationSalaryPlanAssignmentDataType(BaseModel):
    Salary_Plan_Name: str
    Compensation_Element_Values_for_Base_Pay_Data: EmployeeCompensationSalaryPlanAssignmentDetailDataType


class EmployeeCompensationHourlyPlanAssignmentDataType(BaseModel):
    Hourly_Plan_Name: str
    Compensation_Element_Values_for_Base_Pay_Data: EmployeeCompensationSalaryPlanAssignmentDetailDataType


class UnitOfMeasureReferenceType(BaseModel):
    Unit_of_Measure_Name: Optional[str] = None


class EmployeeCompensationSalaryUnitPlanAssignmentDetailDataType(BaseModel):
    Compensation_Element_Reference: Optional[CompensationElementReferenceType] = None
    Unit_Reference: Optional[UnitOfMeasureReferenceType] = None
    Per_Unit_Amount: float
    Currency_Reference: CurrencyReferenceDataType
    Number_of_Units: Optional[float] = None
    Frequency_Reference: Optional[FrequencyReferenceDataType] = None
    Actual_End_Date: Optional[date] = None


class EmployeeCompensationSalaryUnitPlanAssignmentDataType(BaseModel):
    Unit_Salary_Plan_Name: str
    Compensation_Element_Values_for_Unit_Salary_Plan_Data: EmployeeCompensationSalaryUnitPlanAssignmentDetailDataType


class EmployeeCompensationAllowancePlanAssignmentDetailDataType(BaseModel):
    Compensation_Element_Reference: Optional[CompensationElementReferenceType] = None
    Percent: Optional[float] = None
    Amount: Optional[float] = None
    Currency_Reference: CurrencyReferenceDataType
    Frequency_Reference: FrequencyReferenceDataType
    Expected_End_Date: Optional[date] = None
    Reimbursement_Start_Date: Optional[date] = None
    Actual_End_Date: Optional[date] = None


class EmployeeCompensationAllowancePlanAssignmentDataType(BaseModel):
    Allowance_Plan_Name: str
    Compensation_Element_Values_for_Allowance_Plan_Data: EmployeeCompensationAllowancePlanAssignmentDetailDataType


class EmployeeCompensationAllowanceUnitPlanAssignmentDetailDataType(BaseModel):
    Compensation_Element_Reference: Optional[CompensationElementReferenceType] = None
    Number_of_Units: float
    Unit_Reference: Optional[UnitOfMeasureReferenceType] = None
    Frequency_Reference: FrequencyReferenceDataType
    Per_Unit_Amount: float
    Currency_Reference: CurrencyReferenceDataType
    Reimbursement_Start_Date: Optional[date] = None
    Actual_End_Date: Optional[date] = None


class EmployeeCompensationAllowanceUnitPlanAssignmentDataType(BaseModel):
    Allowance_Plan_Name: str
    Compensation_Element_Values_for_Unit_Allowance_Plan_Data: EmployeeCompensationAllowanceUnitPlanAssignmentDetailDataType


class EmployeeCompensationBonusPlanAssignmentDetailDataType(BaseModel):
    Compensation_Element_Reference: Optional[CompensationElementReferenceType] = None
    Amount: Optional[float] = None
    Percentage: Optional[float] = None
    Guaranteed_Minimum: Optional[bool] = None
    Currency_Reference: Optional[CurrencyReferenceDataType] = None
    Frequency_Reference: Optional[FrequencyReferenceDataType] = None
    Percentage_Assigned: float
    Actual_End_Date: Optional[date] = None


class EmployeeCompensationBonusPlanAssignmentDataType(BaseModel):
    Bonus_Plan_Name: str
    Compensation_Element_Values_for_Bonus_Plan_Data: EmployeeCompensationBonusPlanAssignmentDetailDataType


class EmployeeCompensationMeritPlanAssignmentDetailDataType(BaseModel):
    Individual_Target: Optional[float] = None
    Guaranteed_Minimum: Optional[bool] = None
    Actual_End_Date: Optional[date] = None


class EmployeeCompensationMeritPlanAssignmentDataType(BaseModel):
    Merit_Plan_Name: str
    Compensation_Element_Values_for_Merit_Plan_Data: Optional[
        EmployeeCompensationMeritPlanAssignmentDetailDataType
    ] = None


class DrawFrequencyReferenceType(BaseModel):
    Frequency_Name: str


class EmployeeCompensationCommissionPlanAssignmentDetailDataType(BaseModel):
    Compensation_Element_Reference: Optional[CompensationElementReferenceType] = None
    Target_Amount: Optional[float] = None
    Currency_Reference: Optional[CurrencyReferenceDataType] = None
    Frequency_Reference: Optional[FrequencyReferenceDataType] = None
    Draw_Amount: Optional[float] = None
    Draw_Frequency_Reference: Optional[DrawFrequencyReferenceType] = None
    Draw_Duration: Optional[str] = None
    Recoverable: Optional[bool] = None
    Actual_End_Date: Optional[date] = None


class EmployeeCompensationCommissionPlanAssignmentDataType(BaseModel):
    Commission_Plan_Name: str
    Compensation_Element_Values_for_Commission_Plan_Data: EmployeeCompensationCommissionPlanAssignmentDetailDataType


class EmployeeCompensationStockPlanAssignmentDetailDataType(BaseModel):
    Stock_Plan_Reference: StockPlanObjectType
    Individual_Target_Shares: Optional[float] = None
    Individual_Target_Percent: Optional[float] = None
    Individual_Target_Amount: Optional[float] = None
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Actual_End_Date: Optional[date] = None


class EmployeeCompensationStockPlanAssignmentDataType(BaseModel):
    Stock_Plan_Name: str
    Compensation_Element_Values_for_Stock_Plan_Data: EmployeeCompensationStockPlanAssignmentDetailDataType


class EmployeeCompensationPeriodSalaryPlanAssignmentDetailDataType(BaseModel):
    Compensation_Element_Reference: Optional[CompensationElementReferenceType] = None
    Compensation_Period_Reference: Optional[CompensationPeriodObjectType] = None
    Currency_Reference: CurrencyReferenceDataType
    Compensation_Multiplier: Optional[float] = None
    Frequency_Reference: Optional[FrequencyReferenceDataType] = None
    Actual_End_Date: Optional[date] = None


class EmployeeCompensationPeriodSalaryPlanAssignmentDataType(BaseModel):
    Period_Salary_Plan_Name: str
    Compensation_Element_Values_for_Period_Salary_Plan_Data: EmployeeCompensationPeriodSalaryPlanAssignmentDetailDataType


class EmployeeCompensationCalculatedPlanAssignmentDetailDataType(BaseModel):
    Currency_Reference: Optional[CurrencyObjectType] = None
    Frequency_Reference: Optional[FrequencyObjectType] = None
    Actual_End_Date: Optional[date] = None


class EmployeeCompensationCalculatedPlanAssignmentDataType(BaseModel):
    Calculated_Plan_Name: str
    Compensation_Element_Values_for_Calculated_Plan_Data: EmployeeCompensationCalculatedPlanAssignmentDetailDataType


class EmployeeCompensationDetailDataType(BaseModel):
    Primary_Compensation_Basis: Optional[float] = None
    Compensation_Package_Reference: CompensationPackageReferenceType
    Compensation_Grade_Reference: CompensationGradeReferenceType
    Compensation_Grade_Profile_Reference: Optional[
        CompensationGradeProfileReferenceType
    ] = None
    Compensation_Step_Reference: Optional[CompensationStepReferenceDataType] = None
    Salary_Plan_for_Compensation_Data: Optional[
        List[EmployeeCompensationSalaryPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Hourly_Plan_for_Compensation_Data: Optional[
        List[EmployeeCompensationHourlyPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Unit_Salary_Plan_for_Compensation_Data: Optional[
        List[EmployeeCompensationSalaryUnitPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Allowance_Plan_for_Compensation_Data: Optional[
        List[EmployeeCompensationAllowancePlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Unit_Allowance_Plan_for_Compensation_Data: Optional[
        List[EmployeeCompensationAllowanceUnitPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Bonus_Plan_for_Compensation_Data: Optional[
        List[EmployeeCompensationBonusPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Merit_Plan_for_Compensation_Data: Optional[
        List[EmployeeCompensationMeritPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Commission_Plan_for_Compensation_Data: Optional[
        List[EmployeeCompensationCommissionPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Stock_Plan_for_Compensation_Data: Optional[
        List[EmployeeCompensationStockPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Period_Salary_Plan_for_Compensation_Data: Optional[
        List[EmployeeCompensationPeriodSalaryPlanAssignmentDataType]
    ] = Field(None, min_items=0)
    Calculated_Plan_for_Compensation_Data: Optional[
        List[EmployeeCompensationCalculatedPlanAssignmentDataType]
    ] = Field(None, min_items=0)


class PositionOrganizationAssignmentsDataType(BaseModel):
    Company_Assignments_Reference: Optional[List[CompanyObjectType]] = Field(
        None, min_items=0
    )
    Cost_Center_Assignments_Reference: Optional[List[CostCenterObjectType]] = Field(
        None, min_items=0
    )
    Region_Assignments_Reference: Optional[List[RegionObjectType]] = Field(
        None, min_items=0
    )
    Custom_Organization_Assignments_Reference: Optional[
        List[CustomOrganizationObjectType]
    ] = Field(None, min_items=0)
    Fund_Assignments_Reference: Optional[List[FundObjectType]] = Field(
        None, min_items=0
    )
    Grant_Assignments_Reference: Optional[List[GrantObjectType]] = Field(
        None, min_items=0
    )
    Program_Assignments_Reference: Optional[List[ProgramObjectType]] = Field(
        None, min_items=0
    )
    Business_Unit_Assignments_Reference: Optional[List[BusinessUnitObjectType]] = Field(
        None, min_items=0
    )
    Gift_Assignments_Reference: Optional[List[GiftObjectType]] = Field(
        None, min_items=0
    )


class WorkerDocumentIDataForStaffingEventType(BaseModel):
    Filename: str
    Worker_Document_Comment: Optional[str] = None
    Document_Category_Reference: DocumentCategoryAllObjectType
    File: Optional[List[int]] = None
    Content_Type: Optional[str] = None


class ImplementationEmployeeDataType(BaseModel):
    Employee_ID: Optional[str] = None
    Applicant_Reference: ApplicantObjectType
    Former_Worker_Reference: FormerWorkerObjectType
    Employee_Type_Reference: EmployeeTypeObjectType
    Hire_Reason_Reference: Optional[GeneralEventSubcategoryObjectType] = None
    First_Day_of_Work: Optional[date] = None
    Hire_Date: date
    Continuous_Service_Date: Optional[date] = None
    Probation_Start_Date: Optional[date] = None
    Probation_End_Date: Optional[date] = None
    End_Employment_Date: Optional[date] = None
    Position_Start_Date_for_Conversion: Optional[date] = None
    Job_Profile_Start_Date_for_Conversion: Optional[date] = None
    Benefits_Service_Date: Optional[date] = None
    Company_Service_Date: Optional[date] = None
    Position_for_Worker_Staffing_Event_Data: Optional[
        PositionForWorkerStaffingEventIDataType
    ] = None
    Compensation_Detail_Data: Optional[EmployeeCompensationDetailDataType] = None
    Create_Payroll_Extract: Optional[bool] = None
    Position_Organization_Assignments_Data: Optional[
        PositionOrganizationAssignmentsDataType
    ] = None
    System_User_Data: Optional[SystemUserDataType] = None
    Worker_Document_Data: Optional[
        List[WorkerDocumentIDataForStaffingEventType]
    ] = Field(None, min_items=0)
    Employee_External_ID_Data: Optional[ExternalIDDataType] = None


class ImplementationEmployeeDataRootType(ImplementationEmployeeDataType):
    version: Optional[str] = None


class EndContingentWorkerContractRequestHVType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    End_Contingent_Worker_Contract_Data: EndContingentWorkerContractDataType


class ImportEndContingentWorkerContractRequestType(BaseModel):
    End_Contingent_Worker_Contract_Information_HV: Optional[
        List[EndContingentWorkerContractRequestHVType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class CreditableServiceRequestReferencesType(BaseModel):
    Employee_Reference: List[EmployeeObjectType] = Field(..., min_items=1)


class CreditableServiceRequestCriteriaType(BaseModel):
    pass


class GetCreditableServiceRequestType(BaseModel):
    Request_References: Optional[CreditableServiceRequestReferencesType] = None
    Request_Criteria: Optional[CreditableServiceRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class ContextuallySecuredOrganizationRequestReferencesType(BaseModel):
    Organization_Reference: List[OrganizationObjectType] = Field(..., min_items=1)
    Skip_Non_Existing_Instances: Optional[bool] = None


class OrganizationRequestCriteriaType(BaseModel):
    Organization_Type_Reference: Optional[List[OrganizationTypeObjectType]] = Field(
        None, min_items=0
    )
    Include_Inactive: Optional[bool] = None
    Enable_Transaction_Log_Lite: Optional[bool] = None
    Transaction_Log_Criteria: Optional[List[TransactionLogCriteriaType]] = Field(
        None, min_items=0
    )
    Field_And_Parameter_Criteria_Data: Optional[
        FieldAndParameterCriteriaDataType
    ] = None


class OrganizationResponseGroupType(BaseModel):
    Include_Roles_Data: Optional[bool] = None
    Include_Hierarchy_Data: Optional[bool] = None
    Include_Supervisory_Data: Optional[bool] = None
    Include_Staffing_Restrictions_Data: Optional[bool] = None


class GetOrganizationsRequestType(BaseModel):
    Request_References: Optional[
        ContextuallySecuredOrganizationRequestReferencesType
    ] = None
    Request_Criteria: Optional[OrganizationRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[OrganizationResponseGroupType] = None
    version: Optional[str] = None


class WebServiceBackgroundProcessRuntimeObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class WebServiceBackgroundProcessRuntimeObjectType(BaseModel):
    ID: Optional[List[WebServiceBackgroundProcessRuntimeObjectIDType]] = Field(
        None, min_items=0
    )
    Descriptor: Optional[str] = None


class PutImportProcessResponseType(BaseModel):
    Import_Process_Reference: Optional[
        WebServiceBackgroundProcessRuntimeObjectType
    ] = None
    Header_Instance_Reference: Optional[InstanceObjectType] = None
    version: Optional[str] = None


class PutPersonnelActionRequestStatusOnMassActionResponseType(BaseModel):
    PAR_Mass_Action_Reference: Optional[PARMassActionObjectType] = None
    version: Optional[str] = None


class PositionDefinitionDataType(BaseModel):
    Position_ID: Optional[str] = None
    Job_Posting_Title: Optional[str] = None
    Job_Description_Summary: Optional[str] = None
    Job_Description: Optional[str] = None
    Critical_Job: Optional[bool] = None
    Difficulty_to_Fill_Reference: Optional[DifficultyToFillObjectType] = None
    Available_for_Overlap: Optional[bool] = None


class AssignPayGroupForPositionRestrictionDataType(BaseModel):
    Pay_Group_Reference: PayGroupObjectType


class AssignPayGroupForPositionRestrictionsSubBusinessProcessType(BaseModel):
    Business_Sub_Process_Parameters: Optional[BusinessSubProcessParametersType] = None
    Assign_Pay_Group_Data: Optional[AssignPayGroupForPositionRestrictionDataType] = None


class CreatePositionDataType(BaseModel):
    Supervisory_Organization_Reference: SupervisoryOrganizationObjectType
    Position_Request_Reason_Reference: Optional[
        GeneralEventSubcategoryObjectType
    ] = None
    Position_Data: PositionDefinitionDataType
    Qualification_Replacement_Data: Optional[
        QualificationDataForPositionRestrictionOrJobProfileType
    ] = None
    Position_Group_Restrictions_Data: Optional[PositionGroupRestrictionDataType] = None
    Position_Restriction_Working_Hours_Details_Data: Optional[
        WorkingHoursDetailsDataType
    ] = None
    Edit_Assign_Organization_Sub_Process: Optional[
        EditAssignPositionOrganizationSubBusinessProcessType
    ] = None
    Request_Default_Compensation_Sub_Process: Optional[
        RequestCompensationDefaultSubBusinessProcessType
    ] = None
    Assign_Pay_Group_Sub_Process: Optional[
        AssignPayGroupForPositionRestrictionsSubBusinessProcessType
    ] = None
    Assign_Costing_Allocation_Sub_Process: Optional[
        AssignCostingAllocationSubBusinessProcessType
    ] = None


class CreatePositionRequestHVType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Create_Position_Data: CreatePositionDataType


class ImportCreatePositionRequestType(BaseModel):
    Create_Position_Request_HV: Optional[List[CreatePositionRequestHVType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class PutProbationPeriodEligibilityRuleRequestType(BaseModel):
    Probation_Period_Eligibility_Rule_Reference: Optional[
        ConditionRuleObjectType
    ] = None
    Probation_Period_Eligibility_Rule_Data: Optional[
        ProbationPeriodEligibilityRuleDataType
    ] = None
    Add_Only: Optional[bool] = None
    Delete: Optional[bool] = None
    version: Optional[str] = None


class GetMaintainEmployeeContractRulesForCountryRequestType(BaseModel):
    Request_References: Optional[
        EmployeeContractRulesForCountryRequestReferencesType
    ] = None
    Request_Criteria: Optional[
        EmployeeContractRulesForCountryRequestCriteriaType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class EditHiringRestrictionsRequestHVType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Edit_Hiring_Restrictions_Data: EditHiringRestrictionsDataType


class ImportEditHiringRestrictionsRequestType(BaseModel):
    Edit_Hiring_Restrictions_Request_HV: Optional[
        List[EditHiringRestrictionsRequestHVType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class TerminateEmployeeRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Terminate_Employee_Data: TerminateEmployeeDataType
    version: Optional[str] = None


class ForkableConditionItemObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ForkableConditionItemObjectType(BaseModel):
    ID: Optional[List[ForkableConditionItemObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class StaffingFieldDefaultsForkableConditionItemDataType(BaseModel):
    Order: str
    Condition_Rule_Reference: Optional[ConditionRuleObjectType] = None
    Report_Field_Reference: Optional[ExternalFieldObjectType] = None
    Instance_Specific_Value_Reference: Optional[List[InstanceObjectType]] = Field(
        None, min_items=0
    )
    Text_Specific_Value: Optional[str] = None
    Date_Specific_Value: Optional[date] = None
    Boolean_Specific_Value: Optional[bool] = None


class StaffingFieldDefaultsForkableConditionItemType(BaseModel):
    Forkable_Condition_Item_Reference: Optional[ForkableConditionItemObjectType] = None
    Forkable_Condition_Item_Data: Optional[
        StaffingFieldDefaultsForkableConditionItemDataType
    ] = None
    Add_Only: Optional[bool] = None
    Delete: Optional[bool] = None


class StaffingFieldDefaultsDataType(BaseModel):
    ID: Optional[str] = None
    Business_Process_Type_Reference: BusinessProcessTypeObjectType
    Staffing_Field_Defaults_Section_Reference: StaffingFieldDefaultsSectionObjectType
    Staffing_Field_Reference: UniqueIdentifierObjectType
    Forkable_Condition_Items: Optional[
        List[StaffingFieldDefaultsForkableConditionItemType]
    ] = Field(None, min_items=0)


class StaffingFieldDefaultsType(BaseModel):
    Staffing_Field_Defaults_Reference: Optional[
        StaffingDefaultingFieldConfigurationObjectType
    ] = None
    Staffing_Field_Defaults_Data: Optional[StaffingFieldDefaultsDataType] = None


class StaffingFieldDefaultsResponseDataType(BaseModel):
    Staffing_Field_Defaults: Optional[List[StaffingFieldDefaultsType]] = Field(
        None, min_items=0
    )


class GetStaffingFieldDefaultsResponseType(BaseModel):
    Request_References: Optional[StaffingFieldDefaultsRequestReferencesType] = None
    Request_Criteria: Optional[StaffingFieldDefaultsRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[StaffingFieldDefaultsResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[StaffingFieldDefaultsResponseDataType] = None
    version: Optional[str] = None


class GetJobOverlapRoutingExclusionRulesRequestType(BaseModel):
    Request_References: Optional[
        JobOverlapRoutingExclusionRuleRequestReferencesType
    ] = None
    Request_Criteria: Optional[JobOverlapRoutingExclusionRuleRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[JobOverlapRoutingExclusionRuleResponseGroupType] = None
    version: Optional[str] = None


class StudentEmploymentEligibilityEventRequestCriteriaType(BaseModel):
    pass


class GetStudentEmploymentEligibilityDataRequestType(BaseModel):
    Request_References: StudentEmploymentEligibilityEventRequestReferencesType
    Request_Criteria: Optional[
        List[StudentEmploymentEligibilityEventRequestCriteriaType]
    ] = Field(None, min_items=0)
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[StudentEmploymentEligibilityEventResponseGroupType] = None
    version: Optional[str] = None


class GetProbationPeriodOutcomeRequestType(BaseModel):
    Request_References: Optional[ProbationPeriodOutcomeRequestReferencesType] = None
    Request_Critera: Optional[ProbationPeriodOutcomeRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class EditServiceDatesResponseType(BaseModel):
    Edit_Service_Dates_Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class WorkingTimeForCountryRequestReferencesType(BaseModel):
    Maintain_Working_Time_for_Country_Reference: List[
        WorkingTimeDefaultingEligibilityTableObjectType
    ] = Field(..., min_items=1)


class WorkingTimeForCountryRequestCriteriaType(BaseModel):
    Country_Reference: List[CountryObjectType] = Field(..., min_items=1)


class MaintainWorkingTimeForCountryDataType(BaseModel):
    Maintain_Working_Time_For_Country_Reference: Optional[
        WorkingTimeDefaultingEligibilityTableObjectType
    ] = None
    Maintain_Working_Time_For_Country_Data: Optional[
        WorkingTimeDefaultingEligibilityTableDataType
    ] = None


class WorkingTimeRulesForResponseDataType(BaseModel):
    Maintain_Working_Time_For_Country: Optional[
        List[MaintainWorkingTimeForCountryDataType]
    ] = Field(None, min_items=0)


class GetMaintainWorkingTimeForCountryResponseType(BaseModel):
    Request_References: Optional[WorkingTimeForCountryRequestReferencesType] = None
    Request_Criteria: Optional[WorkingTimeForCountryRequestCriteriaType] = None
    Response_Data: Optional[WorkingTimeRulesForResponseDataType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    version: Optional[str] = None


class RoleAssignerRequestReferencesType(BaseModel):
    Role_Assigner_Reference: List[RoleAssignerObjectType] = Field(..., min_items=1)


class RoleAssignmentsRequestCriteriaType(BaseModel):
    Assignable_Role_Reference: Optional[List[AssignableRoleObjectType]] = Field(
        None, min_items=0
    )


class RoleAssignerResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None
    Effective_Timezone_Reference: Optional[TimeZoneObjectType] = None


class RoleAssignmentDataType(BaseModel):
    Delete: Optional[bool] = None
    Update: Optional[bool] = None
    Organization_Role_Reference: AssignableRoleObjectType
    Role_Assignee_Reference: Optional[List[RoleeObjectType]] = Field(None, min_items=0)


class RoleAssignerDataType(BaseModel):
    Effective_Timezone_Reference: Optional[TimeZoneObjectType] = None
    Role_Assigner_Reference: RoleAssignerObjectType
    Role_Assignment_Data: Optional[List[RoleAssignmentDataType]] = Field(
        None, min_items=0
    )
    Effective_Date: Optional[date] = None


class RoleAssignerType(BaseModel):
    Role_Assigner_Reference: Optional[RoleAssignerObjectType] = None
    Role_Assigner_Data: Optional[RoleAssignerDataType] = None


class RoleAssignerResponseDataType(BaseModel):
    Role_Assigner: Optional[List[RoleAssignerType]] = Field(None, min_items=0)


class GetRoleAssignmentsForRoleAssignersResponseType(BaseModel):
    Request_References: Optional[RoleAssignerRequestReferencesType] = None
    Request_Criteria: Optional[RoleAssignmentsRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[RoleAssignerResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[RoleAssignerResponseDataType] = None
    version: Optional[str] = None


class ChangeJobResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Exceptions_Response_Data: Optional[
        List[ApplicationInstanceRelatedExceptionsDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class SwitchPrimaryJobEventResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Exceptions_Response_Data: Optional[
        List[ApplicationInstanceRelatedExceptionsDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class ChangeJobRequestHVType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Change_Job_Data: ChangeJobDataType


class ImportChangeJobRequestType(BaseModel):
    Change_Job_Information_HV: Optional[List[ChangeJobRequestHVType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class WorkingTimeEligibilityRuleDataType(BaseModel):
    Condition_Rule_Data: Optional[ConditionRuleDataWWSType] = None


class PutWorkingTimeEligibilityRulesRequestType(BaseModel):
    Working_Time_Eligibility_Rule_Reference: Optional[ConditionRuleObjectType] = None
    Working_Time_Eligibility_Rule_Data: Optional[
        WorkingTimeEligibilityRuleDataType
    ] = None
    Add_Only: Optional[bool] = None
    Delete: Optional[bool] = None
    version: Optional[str] = None


class JobFamilyType(BaseModel):
    Job_Family_Reference: Optional[JobFamilyObjectType] = None
    Job_Family_Data: Optional[JobFamilyDataType] = None


class JobFamilyResponseDataType(BaseModel):
    Job_Family: Optional[List[JobFamilyType]] = Field(None, min_items=0)


class GetJobFamiliesResponseType(BaseModel):
    Request_References: Optional[JobFamilyRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Request_Criteria: Optional[JobFamiliesRequestCriteriaType] = None
    Response_Group: Optional[JobFamilyResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[JobFamilyResponseDataType] = None
    version: Optional[str] = None


class PutFSEWorkerCategoryCriteriaRequestType(BaseModel):
    FSE_Worker_Category_Criteria_Data: FSEWorkerCategoryCriteriaDataType
    version: Optional[str] = None


class PutNoticePeriodEligibilityRuleRequestType(BaseModel):
    Notice_Period_Eligibility_Rule_Reference: Optional[ConditionRuleObjectType] = None
    Notice_Period_Eligibility_Rule_Data: Optional[
        NoticePeriodEligibilityRuleDataType
    ] = None
    Add_Only: Optional[bool] = None
    Delete: Optional[bool] = None
    version: Optional[str] = None


class PutStaffingFieldDefaultsResponseType(BaseModel):
    Staffing_Field_Defaults_Reference: Optional[
        StaffingDefaultingFieldConfigurationObjectType
    ] = None
    version: Optional[str] = None


class PutStaffingFieldDefaultsRequestType(BaseModel):
    Staffing_Field_Defaults_Reference: Optional[
        StaffingDefaultingFieldConfigurationObjectType
    ] = None
    Staffing_Field_Defaults_Data: Optional[StaffingFieldDefaultsDataType] = None
    Add_Only: Optional[bool] = None
    Delete: Optional[bool] = None
    version: Optional[str] = None


class GetChangeOtherIDsRequestReferencesType(BaseModel):
    Person_Reference: Optional[List[RoleObjectType]] = Field(None, min_items=0)
    Universal_ID_Reference: Optional[List[UniversalIdentifierObjectType]] = Field(
        None, min_items=0
    )


class ChangeOtherIDsBusinessProcessDataType(BaseModel):
    Person_Reference: Optional[RoleObjectType] = None
    Universal_ID_Reference: Optional[UniversalIdentifierObjectType] = None
    Custom_Identification_Data: CustomIdentificationDataType


class ChangeOtherIDsResponseWrapperType(BaseModel):
    Person_Reference: Optional[RoleObjectType] = None
    Change_Other_IDs_Data: Optional[
        List[ChangeOtherIDsBusinessProcessDataType]
    ] = Field(None, min_items=0)


class ChangeOtherIDsResponseDataType(BaseModel):
    Change_Other_IDs: Optional[List[ChangeOtherIDsResponseWrapperType]] = Field(
        None, min_items=0
    )


class GetChangeOtherIDsResponseType(BaseModel):
    Request_References: Optional[List[GetChangeOtherIDsRequestReferencesType]] = Field(
        None, min_items=0
    )
    Response_Filter: Optional[List[ResponseFilterType]] = Field(None, min_items=0)
    Response_Results: Optional[List[ResponseResultsType]] = Field(None, min_items=0)
    Response_Data: Optional[List[ChangeOtherIDsResponseDataType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class MaintainEmployeeContractsResponseType(BaseModel):
    Employee_Contract_Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Employee_Contract_Reference: Optional[List[EmployeeContractObjectType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class ChangePassportAndVisaRequestCriteriaType(BaseModel):
    Person_Type_Criteria_Data: Optional[PersonTypeCriteriaType] = None


class GetChangePassportsAndVisasRequestType(BaseModel):
    Request_References: Optional[GetChangePassportsAndVisasRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Request_Criteria_Data: Optional[ChangePassportAndVisaRequestCriteriaType] = None
    version: Optional[str] = None


class ValidationErrorType(BaseModel):
    Message: Optional[str] = None
    Detail_Message: Optional[str] = None
    Xpath: Optional[str] = None
    Error_Code: Optional[str] = None


class ValidationFaultType(BaseModel):
    Validation_Error: Optional[List[ValidationErrorType]] = Field(None, min_items=0)


class GetRoleAssignmentsForRoleAssignersRequestType(BaseModel):
    Request_References: RoleAssignerRequestReferencesType
    Request_Criteria: Optional[RoleAssignmentsRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[RoleAssignerResponseGroupType] = None
    version: Optional[str] = None


class MoveWorkersByOrganizationRequestHVType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Move_Workers_By_Organization_Data: MoveWorkersByOrganizationDataType


class ImportMoveWorkersByOrganizationRequestType(BaseModel):
    Move_Workers_By_Organization_HV: Optional[
        List[MoveWorkersByOrganizationRequestHVType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class PutStudentEmploymentEligibilityStatusResponseType(BaseModel):
    Student_Employment_Eligibility_Event_Reference: Optional[
        StudentEmploymentEligibilityEventObjectType
    ] = None
    version: Optional[str] = None


class PutProbationPeriodEligibilityRuleResponseType(BaseModel):
    Probation_Period_Eligibility_Rule_Reference: Optional[
        ConditionRuleObjectType
    ] = None
    Application_Instance_Related_Exceptions_Data: Optional[
        List[ApplicationInstanceRelatedExceptionsDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class CitizenshipStatusDataType(BaseModel):
    Citizenship_Status_ID: Optional[str] = None
    Citizenship_Status_Name: Optional[str] = None
    Citizenship_Status_Description: Optional[str] = None
    Country_Reference: Optional[CountryObjectType] = None
    Citizenship_Status_Mapping_Reference: Optional[
        GlobalSetupDataMappingObjectType
    ] = None
    Citizen: Optional[bool] = None
    Inactive: Optional[bool] = None


class PutCitizenshipStatusRequestType(BaseModel):
    Citizenship_Status_Reference: Optional[CitizenshipStatusObjectType] = None
    Citizenship_Status_Data: Optional[CitizenshipStatusDataType] = None
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class PutFunctionalityForStaffingTransactionsResponseType(BaseModel):
    Functionality_for_Staffing_Transactions_Reference: Optional[
        FunctionalAreaConfigurationObjectType
    ] = None
    version: Optional[str] = None


class WorkerDocumentDataType(BaseModel):
    ID: Optional[str] = None
    Filename: str
    Comment: Optional[str] = None
    File: Optional[List[int]] = None
    Document_Category_Reference: DocumentCategoryAllObjectType
    Worker_Reference: WorkerObjectType
    Content_Type: Optional[str] = None


class PutWorkerDocumentRequestType(BaseModel):
    Worker_Document_Reference: Optional[WorkerDocumentObjectType] = None
    Worker_Document_Data: WorkerDocumentDataType
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class PutCollectiveAgreementRequestType(BaseModel):
    Collective_Agreement_Reference: Optional[CollectiveAgreementObjectType] = None
    Collective_Agreement_Data: Optional[CollectiveAgreementDataType] = None
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class ChangeLegalNameRequestCriteriaType(BaseModel):
    Person_Type_Criteria_Data: Optional[PersonTypeCriteriaType] = None


class GetChangeLegalNameRequestType(BaseModel):
    Request_References: Optional[GetChangeLegalNameRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Request_Criteria_Data: Optional[ChangeLegalNameRequestCriteriaType] = None
    version: Optional[str] = None


class NatureOfActionType(BaseModel):
    Nature_of_Action_Reference: Optional[NatureOfActionObjectType] = None
    Nature_of_Action_Series_Reference: Optional[NatureOfActionSeriesObjectType] = None
    Nature_of_Action_Data: Optional[NatureOfActionDataType] = None


class NatureOfActionResponseDataType(BaseModel):
    Nature_of_Action: Optional[List[NatureOfActionType]] = Field(None, min_items=0)


class GetNatureOfActionsResponseType(BaseModel):
    Request_References: Optional[NatureOfActionsRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[NatureOfActionResponseDataType] = None
    version: Optional[str] = None


class MaintainEmployeeContractsDataType(BaseModel):
    Employee_Reference: EmployeeObjectType
    Employee_Contract_Data: List[EmployeeContractDataType] = Field(..., min_items=1)


class MaintainEmployeeContractsRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Maintain_Employee_Contracts_Data: MaintainEmployeeContractsDataType
    version: Optional[str] = None


class PutEditNoticePeriodsEventResponseType(BaseModel):
    Edit_Notice_Periods_Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class ProbationPeriodRuleObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class ProbationPeriodRuleObjectType(BaseModel):
    ID: Optional[List[ProbationPeriodRuleObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class PutMaintainProbationPeriodsForCountryResponseType(BaseModel):
    Probation_Period_For_Country_Reference: Optional[
        List[ProbationPeriodRuleObjectType]
    ] = Field(None, min_items=0)
    Exceptions_Response_Data: Optional[
        List[ApplicationInstanceRelatedExceptionsDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class GetJobClassificationGroupsRequestType(BaseModel):
    Request_References: Optional[JobClassificationGroupRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[JobClassificationGroupResponseGroupType] = None
    version: Optional[str] = None


class ProbationPeriodOutcomesForCountryRequestReferencesType(BaseModel):
    Probation_Period_Outcomes_For_Country_Reference: List[
        ProbationPeriodOutcomesSetupTableObjectType
    ] = Field(..., min_items=1)


class ProbationPeriodOutcomesForCountryRequestCriteriaType(BaseModel):
    Country_Reference: Optional[List[CountryObjectType]] = Field(None, min_items=0)


class GetProbationPeriodOutcomesRequestType(BaseModel):
    Request_References: Optional[
        ProbationPeriodOutcomesForCountryRequestReferencesType
    ] = None
    Request_Criteria: Optional[
        ProbationPeriodOutcomesForCountryRequestCriteriaType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class PutDependentResponseType(BaseModel):
    Dependent_Reference: Optional[DependentObjectType] = None
    Employee_Reference: Optional[EmployeeObjectType] = None
    Exceptions_Response_Data: Optional[
        List[ApplicationInstanceRelatedExceptionsDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class AddRetireeStatusResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class ChangePreferredNameBusinessProcessDataType(BaseModel):
    Person_Reference: Optional[RoleObjectType] = None
    Universal_ID_Reference: Optional[UniversalIdentifierObjectType] = None
    Use_Legal_Name_As_Preferred_Name: Optional[bool] = None
    Name_Data: Optional[PersonNameDetailDataType] = None


class ChangePreferredNameResponseWrapperType(BaseModel):
    Person_Reference: Optional[RoleObjectType] = None
    Change_Preferred_Name_Data: Optional[
        ChangePreferredNameBusinessProcessDataType
    ] = None


class ChangePreferredNameResponseDataType(BaseModel):
    Change_Preferred_Name: Optional[
        List[ChangePreferredNameResponseWrapperType]
    ] = Field(None, min_items=0)


class GetChangePreferredNameResponseType(BaseModel):
    Request_References: Optional[GetChangePreferredNameRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[ChangePreferredNameResponseDataType] = None
    version: Optional[str] = None


class RemarkType(BaseModel):
    Remark_Reference: Optional[RemarkObjectType] = None
    Remark_Data: Optional[RemarkDataType] = None


class RemarkResponseDataType(BaseModel):
    Remark: Optional[List[RemarkType]] = Field(None, min_items=0)


class GetRemarksResponseType(BaseModel):
    Request_References: Optional[RemarkRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[RemarkResponseDataType] = None
    version: Optional[str] = None


class WorkerDocumentRequestReferencesType(BaseModel):
    Worker_Document_Reference: List[WorkerDocumentObjectType] = Field(..., min_items=1)


class WorkerDocumentResponseGroupType(BaseModel):
    Include_Reference: Optional[bool] = None
    Include_Worker_Document_Data: Optional[bool] = None


class WorkerDocumentType(BaseModel):
    Worker_Document_Reference: Optional[WorkerDocumentObjectType] = None
    Worker_Document_Data: Optional[WorkerDocumentDataType] = None


class WorkerDocumentResponseDataType(BaseModel):
    Worker_Document: Optional[List[WorkerDocumentType]] = Field(None, min_items=0)


class GetWorkerDocumentsResponseType(BaseModel):
    Request_References: Optional[WorkerDocumentRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[WorkerDocumentResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[WorkerDocumentResponseDataType] = None
    version: Optional[str] = None


class EndAdditionalEmployeeJobEventResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class WorkingTimeEligibilityRuleRequestReferencesType(BaseModel):
    Working_Time_Eligibility_Rule_Reference: Optional[
        List[ConditionRuleObjectType]
    ] = Field(None, min_items=0)


class GetWorkingTimeEligibilityRulesRequestType(BaseModel):
    Request_References: Optional[WorkingTimeEligibilityRuleRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class PutNatureOfActionResponseType(BaseModel):
    Nature_of_Action_Reference: Optional[NatureOfActionObjectType] = None
    version: Optional[str] = None


class CreatePositionRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Create_Position_Data: CreatePositionDataType
    version: Optional[str] = None


class PutFunctionalityForStaffingTransactionsRequestType(BaseModel):
    Functionality_for_Staffing_Transactions_Reference: Optional[
        FunctionalAreaConfigurationObjectType
    ] = None
    Functionality_for_Staffing_Transactions_Data: Optional[
        FunctionalityForStaffingTransactionsDataType
    ] = None
    Add_Only: Optional[bool] = None
    Delete: Optional[bool] = None
    version: Optional[str] = None


class ChangeOtherIDRequestCriteriaType(BaseModel):
    Person_Type_Criteria_Data: Optional[PersonTypeCriteriaType] = None


class GetChangeOtherIDsRequestType(BaseModel):
    Request_References: Optional[GetChangeOtherIDsRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Request_Criteria_Data: Optional[ChangeOtherIDRequestCriteriaType] = None
    version: Optional[str] = None


class PutStudentEmploymentEligibilityRuleResponseType(BaseModel):
    Student_Employment_Eligibility_Rule_Reference: Optional[
        ConditionRuleObjectType
    ] = None
    version: Optional[str] = None


class OrganizationOwnerObjectIDType(BaseModel):
    Value: Optional[str] = None
    type: str


class OrganizationOwnerObjectType(BaseModel):
    ID: Optional[List[OrganizationOwnerObjectIDType]] = Field(None, min_items=0)
    Descriptor: Optional[str] = None


class OrganizationRoleAssignmentWWSDataType(BaseModel):
    Role_Reference: Optional[AssignableRoleObjectType] = None
    Worker_Reference: Optional[List[WorkerObjectType]] = Field(None, min_items=0)


class OrganizationRolesWWSDataType(BaseModel):
    Organization_Role_Data: Optional[
        List[OrganizationRoleAssignmentWWSDataType]
    ] = Field(None, min_items=0)


class OrganizationHierarchyDataType(BaseModel):
    TopLevel_Organization_Reference: Optional[OrganizationObjectType] = None
    Superior_Organization_Reference: Optional[OrganizationObjectType] = None
    Subordinate_Organization_Reference: Optional[List[OrganizationObjectType]] = Field(
        None, min_items=0
    )
    Included_Organization_Reference: Optional[List[OrganizationObjectType]] = Field(
        None, min_items=0
    )
    Included_In_Organization_Reference: Optional[List[OrganizationObjectType]] = Field(
        None, min_items=0
    )


class OrganizationAssignmentsDataType(BaseModel):
    Organization_Type_Reference: OrganizationTypeObjectType
    Organization_Reference: OrganizationObjectType


class SupervisoryOrgDataType(BaseModel):
    Staffing_Model: Optional[str] = None
    Location_Reference: Optional[LocationObjectType] = None
    Organization_Assignments_Data: Optional[
        List[OrganizationAssignmentsDataType]
    ] = Field(None, min_items=0)
    Staffing_Restrictions_Data: Optional[PositionGroupRestrictionSummaryDataType] = None
    Available_For_Hire: Optional[bool] = None
    Hiring_Freeze: Optional[bool] = None


class OrganizationWWSDataType(BaseModel):
    Reference_ID: Optional[str] = None
    Name: Optional[str] = None
    Description: Optional[str] = None
    Organization_Code: Optional[str] = None
    Include_Manager_in_Name: Optional[bool] = None
    Include_Organization_Code_in_Name: Optional[bool] = None
    Organization_Type_Reference: Optional[OrganizationTypeObjectType] = None
    Organization_Subtype_Reference: Optional[OrganizationSubtypeObjectType] = None
    Availibility_Date: Optional[datetime] = None
    Last_Updated_DateTime: Optional[datetime] = None
    Inactive: Optional[bool] = None
    Inactive_Date: Optional[date] = None
    Manager_Reference: Optional[WorkerObjectType] = None
    Leadership_Reference: Optional[List[WorkerObjectType]] = Field(None, min_items=0)
    Organization_Owner_Reference: Optional[OrganizationOwnerObjectType] = None
    Organization_Visibility_Reference: Optional[UniqueIdentifierObjectType] = None
    External_URL_Reference: Optional[ExternalURLObjectType] = None
    External_IDs_Data: Optional[ExternalIntegrationIDDataType] = None
    Roles_Data: Optional[OrganizationRolesWWSDataType] = None
    Hierarchy_Data: Optional[OrganizationHierarchyDataType] = None
    Supervisory_Data: Optional[SupervisoryOrgDataType] = None
    Integration_Field_Override_Data: Optional[
        List[DocumentFieldResultDataType]
    ] = Field(None, min_items=0)


class OrganizationWWSType(BaseModel):
    Organization_Reference: Optional[OrganizationObjectType] = None
    Organization_Data: Optional[OrganizationWWSDataType] = None


class OrganizationResponseDataType(BaseModel):
    Organization: Optional[List[OrganizationWWSType]] = Field(None, min_items=0)


class GetOrganizationsResponseType(BaseModel):
    Request_References: Optional[
        ContextuallySecuredOrganizationRequestReferencesType
    ] = None
    Request_Criteria: Optional[OrganizationRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[OrganizationResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[OrganizationResponseDataType] = None
    version: Optional[str] = None


class EditPositionEventResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Exceptions_Response_Data: Optional[
        List[ApplicationInstanceRelatedExceptionsDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class StartInternationalAssignmentEventDataType(BaseModel):
    Position_ID: Optional[str] = None
    International_Assignment_Type_Reference: AssignmentTypeObjectType
    Expected_Assignment_End_Date: Optional[date] = None
    Start_International_Assignment_Reason_Reference: GeneralEventSubcategoryObjectType
    Employee_Type_Reference: PositionWorkerTypeObjectType
    First_Day_of_Work: Optional[date] = None
    End_Employment_Date: Optional[date] = None
    Position_Details: Optional[PositionDetailsSubDataType] = None


class StartInternationalAssignmentDataType(BaseModel):
    Employee_Reference: EmployeeObjectType
    Organization_Reference: SupervisoryOrganizationObjectType
    Position_Reference: Optional[PositionRestrictionsObjectType] = None
    Job_Requisition_Reference: Optional[JobRequisitionObjectType] = None
    Start_International_Assignment_Event_Data: StartInternationalAssignmentEventDataType
    Edit_Assign_Organization_Sub_Process: Optional[
        EditAssignPositionOrganizationSubBusinessProcessType
    ] = None
    Assign_Matrix_Organization_Sub_Process: Optional[
        AssignMatrixOrganizationSubBusinessProcessType
    ] = None
    Assign_Pay_Group_Sub_Process: Optional[AssignPayGroupSubBusinessProcessType] = None
    Propose_Compensation_for_Additional_Job_Sub_Process: Optional[
        ProposeCompensationForEmploymentSubBusinessProcessType
    ] = None
    Maintain_Employee_Contracts_Sub_Business_Process: Optional[
        MaintainEmployeeContractsSubBusinessProcessType
    ] = None
    Update_ID_Information_Sub_Process: Optional[
        UpdateIDInformationSubBusinessProcessType
    ] = None
    Edit_Government_IDs_Sub_Process: Optional[
        EditGovernmentIDsSubBusinessProcessType
    ] = None
    Edit_Passports_and_Visas_Sub_Process: Optional[
        EditPassportsAndVisasSubBusinessProcessType
    ] = None
    Edit_License_Sub_Process: Optional[EditLicensesSubBusinessProcessType] = None
    Edit_Custom_IDs_Sub_Process: Optional[EditCustomIDsSubBusinessProcessType] = None
    Check_Position_Budget_Sub_Process: Optional[
        CheckPositionBudgetSubBusinessProcessType
    ] = None
    Onboarding_Setup_Sub_Process: Optional[OnboardingSetupSubBusinessProcessType] = None
    Add_Flexible_Work_Arrangement_Sub_Process: Optional[
        AddFlexibleWorkArrangementSubBusinessProcessType
    ] = None
    Assign_Costing_Allocation_Sub_Process: Optional[
        AssignCostingAllocationSubBusinessProcessType
    ] = None
    Start_Date: Optional[date] = None


class StartInternationalAssignmentRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Start_International_Assignment_Data: StartInternationalAssignmentDataType
    version: Optional[str] = None


class ChangeJobDataForMassPositionSwapType(BaseModel):
    Worker_Reference: WorkerObjectType
    Current_Position_Reference: PositionElementObjectType
    Proposed_Position_Reference: PositionElementObjectType
    Propose_Compensation_Sub_Process: Optional[
        ProposeCompensationForPositionSubBusinessProcessType
    ] = None
    Request_One_Time_Payment_Sub_Process: Optional[
        RequestOneTimePaymentSubBusinessProcessType
    ] = None
    Request_Stock_Grant_Sub_Process: Optional[RequestStockSubBusinessProcessType] = None
    Assign_Pay_Group_Sub_Process: Optional[AssignPayGroupSubBusinessProcessType] = None
    Assign_Matrix_Organization_Sub_Process: Optional[
        AssignMatrixOrganizationSubBusinessProcessType
    ] = None
    Change_Personal_Information_Sub_Process: Optional[
        ChangePersonalInformationSubBusinessProcessType
    ] = None
    Maintain_Employee_Contracts_Sub_Process: Optional[
        MaintainEmployeeContractsSubBusinessProcessType
    ] = None
    Assign_Organization_Roles_Sub_Process: Optional[
        AssignOrganizationRolesSubBusinessProcessType
    ] = None
    Assign_Roles_Sub_Process: Optional[AssignRolesSubProcessType] = None
    Assign_Superior_Organization_Sub_Process: Optional[
        AssignSuperiorOrganizationSubProcessType
    ] = None
    Assign_Costing_Allocation_Sub_Process: Optional[
        AssignCostingAllocationSubBusinessProcessType
    ] = None
    Create_Subordinate_Sub_Process: Optional[
        CreateSubordinateSubBusinessProcessType
    ] = None
    Onboarding_Setup_Sub_Process: Optional[OnboardingSetupSubBusinessProcessType] = None
    Manage_Union_Membership_Sub_Process: Optional[
        ManageUnionMembershipSubBusinessProcessType
    ] = None


class MassSwapPositionsDataType(BaseModel):
    Name: str
    Description: Optional[str] = None
    Effective_Date: date
    Change_Job_Reason_Reference: ChangeJobSubcategoryObjectType
    Change_Job_Data_for_Swap_Positions: Optional[
        List[ChangeJobDataForMassPositionSwapType]
    ] = Field(None, min_items=0)


class ImportSwapPositionsRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Mass_Swap_Positions_Data: MassSwapPositionsDataType
    version: Optional[str] = None


class PutHireEventProposedWorkerIDRequestType(BaseModel):
    Event_Reference: UniqueIdentifierObjectType
    Worker_ID: str
    version: Optional[str] = None


class MaintainJobOverlapRoutingExclusionRulesItemDataType(BaseModel):
    ID: Optional[str] = None
    Order: Optional[str] = None
    Job_Overlap_Routing_Condition_Rule_Reference: ConditionRuleObjectType


class PutMaintainJobOverlapRoutingExclusionRuleRequestType(BaseModel):
    Maintain_Job_Overlap_Routing_Exclusion_Rule_Reference: Optional[
        JobOverlapConditionRuleObjectType
    ] = None
    Maintain_Job_Overlap_Routing_Exclusion_Rule_Data: MaintainJobOverlapRoutingExclusionRulesItemDataType
    version: Optional[str] = None


class LegalAuthorityDataType(BaseModel):
    ID: Optional[str] = None
    Code: Optional[str] = None
    Explanation: Optional[str] = None
    Parameter_Data: Optional[List[PARVariableDataType]] = Field(None, min_items=0)
    Nature_of_Action_Reference: Optional[List[NatureOfActionAllObjectType]] = Field(
        None, min_items=0
    )
    Inactive: Optional[bool] = None


class LegalAuthorityType(BaseModel):
    Legal_Authority_Reference: Optional[LegalAuthorityObjectType] = None
    Legal_Authority_Data: Optional[LegalAuthorityDataType] = None


class LegalAuthorityResponseDataType(BaseModel):
    Legal_Authority: Optional[List[LegalAuthorityType]] = Field(None, min_items=0)


class GetLegalAuthoritiesResponseType(BaseModel):
    Request_References: Optional[LegalAuthorityRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[LegalAuthorityResponseDataType] = None
    version: Optional[str] = None


class GetNoticePeriodEligibilityRulesResponseType(BaseModel):
    Request_References: Optional[
        NoticePeriodEligibilityRuleRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[NoticePeriodEligibilityRuleResponseDataType] = None
    version: Optional[str] = None


class ContractContingentWorkerRequestHVType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Contract_Contingent_Worker_Data: ContractContingentWorkerBusinessProcessDataType


class ImportContractContingentWorkerRequestType(BaseModel):
    Contract_Contingent_Worker_Information_HV: Optional[
        List[ContractContingentWorkerRequestHVType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class GetChangePersonalInformationRequestReferencesType(BaseModel):
    Person_Reference: Optional[List[RoleObjectType]] = Field(None, min_items=0)
    Universal_ID_Reference: Optional[List[UniversalIdentifierObjectType]] = Field(
        None, min_items=0
    )


class ChangePersonalInformationBusinessProcessDataType(BaseModel):
    Person_Reference: Optional[RoleObjectType] = None
    Universal_ID_Reference: Optional[UniversalIdentifierObjectType] = None
    Country_Reference: Optional[CountryObjectType] = None
    Personal_Information_Data: ChangePersonalInformationDataType


class ChangePersonalInformationResponseWrapperType(BaseModel):
    Person_Reference: Optional[RoleObjectType] = None
    Change_Personal_Information_Data: Optional[
        List[ChangePersonalInformationBusinessProcessDataType]
    ] = Field(None, min_items=0)


class ChangePersonalInformationResponseDataType(BaseModel):
    Change_Personal_Information: Optional[
        List[ChangePersonalInformationResponseWrapperType]
    ] = Field(None, min_items=0)


class GetChangePersonalInformationResponseType(BaseModel):
    Request_References: Optional[
        List[GetChangePersonalInformationRequestReferencesType]
    ] = Field(None, min_items=0)
    Response_Filter: Optional[List[ResponseFilterType]] = Field(None, min_items=0)
    Response_Results: Optional[List[ResponseResultsType]] = Field(None, min_items=0)
    Response_Data: Optional[List[ChangePersonalInformationResponseDataType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class GetNoticePeriodsForWorkerRequestType(BaseModel):
    Request_References: Optional[GetNoticePeriodsRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class GetPersonnelActionRequestStatusOnMassActionRequestType(BaseModel):
    Request_References: Optional[PARMassActionRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class StaffingFieldDefaultsConditionRuleType(BaseModel):
    Staffing_Field_Defaults_Rule_Reference: Optional[ConditionRuleObjectType] = None
    Staffing_Field_Defaults_Condition_Rule_Data: Optional[
        List[StaffingFieldDefaultsConditionRuleDataType]
    ] = Field(None, min_items=0)


class StaffingFieldDefaultsConditionRuleResponseDataType(BaseModel):
    Staffing_Field_Defaults_Condition_Rule: Optional[
        List[StaffingFieldDefaultsConditionRuleType]
    ] = Field(None, min_items=0)


class GetStaffingFieldDefaultsConditionRulesWithoutDependenciesResponseType(BaseModel):
    Request_References: Optional[
        StaffingFieldDefaultsConditionRuleRequestReferencesType
    ] = None
    Request_Criteria: Optional[
        StaffingFieldDefaultsConditionRuleRequestCriteriaType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[StaffingFieldDefaultsConditionRuleResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[StaffingFieldDefaultsConditionRuleResponseDataType] = None
    version: Optional[str] = None


class PutNoticePeriodEligibilityRuleResponseType(BaseModel):
    Notice_Period_Eligibility_Rule_Reference: Optional[ConditionRuleObjectType] = None
    version: Optional[str] = None


class AssignOrganizationRolesRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Assign_Organization_Roles_Data: AssignOrganizationRolesEventDataType
    version: Optional[str] = None


class ChangeOrganizationAssignmentsResponseType(BaseModel):
    Change_Organization_Assignments_Event_Reference: Optional[
        UniqueIdentifierObjectType
    ] = None
    version: Optional[str] = None


class CreditableServiceChangeType(BaseModel):
    Creditable_Service_Change_Data: Optional[
        List[CreditableServiceChangeDataType]
    ] = Field(None, min_items=0)


class CreditableServiceResponseDataType(BaseModel):
    Creditable_Service_Change: Optional[List[CreditableServiceChangeType]] = Field(
        None, min_items=0
    )


class GetCreditableServiceResponseType(BaseModel):
    Request_References: Optional[CreditableServiceRequestReferencesType] = None
    Request_Criteria: Optional[CreditableServiceRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[CreditableServiceResponseDataType] = None
    version: Optional[str] = None


class PutRemoveMatrixOrganizationResponseType(BaseModel):
    Remove_from_Matrix_Organization_Event_Reference: Optional[
        UniqueIdentifierObjectType
    ] = None
    version: Optional[str] = None


class WorkingTimeEligibilityRuleGetDataType(BaseModel):
    Working_Time_Eligibility_Rule_Reference: Optional[ConditionRuleObjectType] = None
    Working_Time_Eligibility_Rule_Data: Optional[
        List[WorkingTimeEligibilityRuleDataType]
    ] = Field(None, min_items=0)


class WorkingTimeEligibilityRuleResponseDataType(BaseModel):
    Working_Time_Eligibility_Rule: Optional[
        List[WorkingTimeEligibilityRuleGetDataType]
    ] = Field(None, min_items=0)


class GetWorkingTimeEligibilityRulesResponseType(BaseModel):
    Request_References: Optional[WorkingTimeEligibilityRuleRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[WorkingTimeEligibilityRuleResponseDataType] = None
    version: Optional[str] = None


class GetWorkerDocumentsRequestType(BaseModel):
    Request_References: Optional[WorkerDocumentRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[WorkerDocumentResponseGroupType] = None
    version: Optional[str] = None


class NoShowEventResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class ProbationPeriodOutcomeForCountryResponseDataType(BaseModel):
    Probation_Period_Outcomes_For_Country_Reference: Optional[
        ProbationPeriodOutcomesSetupTableObjectType
    ] = None
    Probation_Period_Outcomes_Data: Optional[
        List[ProbationPeriodOutcomesForCountryDataType]
    ] = Field(None, min_items=0)


class ProbationPeriodOutcomesForCountryResponseDataType(BaseModel):
    Probation_Period_Outcomes: Optional[
        List[ProbationPeriodOutcomeForCountryResponseDataType]
    ] = Field(None, min_items=0)


class GetProbationPeriodOutcomesResponseType(BaseModel):
    Request_References: Optional[
        ProbationPeriodOutcomesForCountryRequestReferencesType
    ] = None
    Request_Criteria: Optional[
        ProbationPeriodOutcomesForCountryRequestCriteriaType
    ] = None
    Response_Data: Optional[ProbationPeriodOutcomesForCountryResponseDataType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    version: Optional[str] = None


class ChangePersonalInformationRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Change_Personal_Information_Data: ChangePersonalInformationBusinessProcessDataType
    version: Optional[str] = None


class SetHiringRestrictionsResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Supervisory_Organization_Reference: Optional[
        SupervisoryOrganizationObjectType
    ] = None
    version: Optional[str] = None


class GetMaintainWorkingTimeForCountryRequestType(BaseModel):
    Request_References: Optional[WorkingTimeForCountryRequestReferencesType] = None
    Request_Criteria: Optional[WorkingTimeForCountryRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    version: Optional[str] = None


class HireEmployeeRequestHVType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Hire_Employee_Data: HireEmployeeBusinessProcessDataType


class ImportHireEmployeeRequestType(BaseModel):
    Hire_Employee_Information_HV: Optional[List[HireEmployeeRequestHVType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class PutWorkingTimeEligibilityRulesResponseType(BaseModel):
    Working_Time_Eligibility_Rule_Reference: Optional[ConditionRuleObjectType] = None
    Application_Instance_Related_Exceptions_Data: Optional[
        List[ApplicationInstanceRelatedExceptionsDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class AddAdditionalJobEventDataType(BaseModel):
    Position_ID: Optional[str] = None
    Additional_Job_Reason_Reference: Optional[GeneralEventSubcategoryObjectType] = None
    Employee_Type_Reference: Optional[PositionWorkerTypeObjectType] = None
    First_Day_of_Work: Optional[date] = None
    Probation_Start_Date: Optional[date] = None
    Probation_End_Date: Optional[date] = None
    End_Employment_Date: Optional[date] = None
    Conversion_Position_Start_Date: Optional[date] = None
    Assignment_Type_Reference: Optional[AssignmentTypeObjectType] = None
    Expected_Assignment_End_Date: Optional[date] = None
    Position_Details: PositionDetailsSubDataType


class AddAdditionalJobDataType(BaseModel):
    Employee_Reference: EmployeeObjectType
    Organization_Reference: SupervisoryOrganizationObjectType
    Position_Reference: Optional[PositionRestrictionsObjectType] = None
    Job_Requisition_Reference: Optional[JobRequisitionObjectType] = None
    Exclude_from_Headcount: Optional[bool] = None
    Add_Additional_Job_Event_Data: AddAdditionalJobEventDataType
    Edit_Assign_Organization_Sub_Process: Optional[
        EditAssignPositionOrganizationSubBusinessProcessType
    ] = None
    Assign_Matrix_Organization_Sub_Process: Optional[
        AssignMatrixOrganizationSubBusinessProcessType
    ] = None
    Assign_Pay_Group_Sub_Process: Optional[AssignPayGroupSubBusinessProcessType] = None
    Propose_Compensation_for_Additional_Job_Sub_Process: Optional[
        ProposeCompensationForEmploymentSubBusinessProcessType
    ] = None
    Check_Position_Budget_Sub_Process: Optional[
        CheckPositionBudgetSubBusinessProcessType
    ] = None
    Onboarding_Setup_Sub_Process: Optional[OnboardingSetupSubBusinessProcessType] = None
    Update_ID_Information_Sub_Process: Optional[
        UpdateIDInformationSubBusinessProcessType
    ] = None
    Edit_Government_IDs_Sub_Process: Optional[
        EditGovernmentIDsSubBusinessProcessType
    ] = None
    Edit_Passports_and_Visas_Sub_Process: Optional[
        EditPassportsAndVisasSubBusinessProcessType
    ] = None
    Edit_License_Sub_Process: Optional[EditLicensesSubBusinessProcessType] = None
    Edit_Custom_IDs_Sub_Process: Optional[EditCustomIDsSubBusinessProcessType] = None
    Assign_Costing_Allocation_Sub_Process: Optional[
        AssignCostingAllocationSubBusinessProcessType
    ] = None
    Switch_Primary_Job_Sub_Process: Optional[SwitchPrimaryJobSubProcessType] = None
    Add_Academic_Appointment_Sub_Process: Optional[
        AddAcademicAppointmentSubBusinessProcessType
    ] = None
    Student_Employment_Eligibility_Sub_Process: Optional[
        StudentEmploymentEligibilitySubBusinessProcessType
    ] = None
    Manage_Union_Membership_Sub_Process: Optional[
        ManageUnionMembershipSubBusinessProcessType
    ] = None
    Assign_Collective_Agreement_Sub_Process: Optional[
        AssignEmployeeCollectiveAgreementSubBusinessProcessType
    ] = None
    Maintain_Employee_Contracts_Sub_Process: Optional[
        MaintainEmployeeContractsSubBusinessProcessType
    ] = None
    Manage_Employee_Probation_Period_Sub_Business_Process: Optional[
        ManageProbationPeriodSubBusinessProcessType
    ] = None
    Add_Flexible_Work_Arrangement_Sub_Process: Optional[
        AddFlexibleWorkArrangementSubBusinessProcessType
    ] = None
    Assign_Establishment_Sub_Process: Optional[
        AssignEstablishmentSubBusinessProcessType
    ] = None
    Start_Date: Optional[date] = None


class AddAdditionalJobRequestHVType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Add_Additional_Job_Data: AddAdditionalJobDataType


class ImportAddAdditionalJobRequestType(BaseModel):
    Add_Additional_Job_Information_HV: Optional[
        List[AddAdditionalJobRequestHVType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class GetFunctionalityForStaffingTransactionsRequestType(BaseModel):
    Request_References: Optional[
        FunctionalityForStaffingTransactionsRequestReferencesType
    ] = None
    Request_Criteria: Optional[
        FunctionalityForStaffingTransactionsRequestCriteriaType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[
        FunctionalityForStaffingTransactionsResponseGroupType
    ] = None
    version: Optional[str] = None


class PutMaintainProbationPeriodsForCountryRequestType(BaseModel):
    Maintain_Probation_Periods_For_Country_Reference: Optional[
        ProbationPeriodRulesTableObjectType
    ] = None
    Maintain_Probation_Periods_For_Country_Data: MaintainProbationPeriodsForCountryDataType
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class EditEmployeeContractAdditionalDataResponseType(BaseModel):
    Event_Reference: Optional[UniqueIdentifierObjectType] = None
    Employee_Contract_Reference: Optional[EmployeeContractObjectType] = None
    Effective_Date: Optional[date] = None
    Additional_Data: Optional[List[EffectiveDatedWebServiceAdditionalDataType]] = Field(
        None, min_items=0
    )
    version: Optional[str] = None


class MaintainJobOverlapRoutingExclusionRuleType(BaseModel):
    Maintain_Job_Overlap_Routing_Exclusion_Rule_Reference: Optional[
        JobOverlapConditionRuleObjectType
    ] = None
    Maintain_Job_Overlap_Routing_Exclusion_Rule_Data: Optional[
        List[MaintainJobOverlapRoutingExclusionRulesItemDataType]
    ] = Field(None, min_items=0)


class MaintainJobOverlapRoutingExclusionRuleResponseDataType(BaseModel):
    Maintain_Job_Overlap_Routing_Exclusion_Rule: Optional[
        List[MaintainJobOverlapRoutingExclusionRuleType]
    ] = Field(None, min_items=0)


class GetMaintainJobOverlapRoutingExclusionRuleResponseType(BaseModel):
    Request_References: Optional[
        MaintainJobOverlapRoutingExclusionRuleRequestReferencesType
    ] = None
    Request_Criteria: Optional[
        MaintainJobOverlapRoutingExclusionRuleRequestCriteriaType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[
        MaintainJobOverlapRoutingExclusionRuleResponseGroupType
    ] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[
        MaintainJobOverlapRoutingExclusionRuleResponseDataType
    ] = None
    version: Optional[str] = None


class JobFamilyGroupJobFamilyDataType(BaseModel):
    Job_Family_Name: Optional[str] = None
    Job_Family_Summary: Optional[str] = None
    Inactive: Optional[bool] = None
    Job_Profile_Info_Data: Optional[List[JobProfileSummaryDataType]] = Field(
        None, min_items=0
    )


class JobFamilyGroupJobFamilyType(BaseModel):
    Job_Family_Reference: JobFamilyObjectType
    Job_Family_Info_Data: Optional[JobFamilyGroupJobFamilyDataType] = None
    Delete: Optional[bool] = None


class JobFamilyGroupDataType(BaseModel):
    ID: Optional[str] = None
    Effective_Date: Optional[date] = None
    Name: Optional[str] = None
    Summary: Optional[str] = None
    Inactive: Optional[bool] = None
    Job_Family_Data: Optional[List[JobFamilyGroupJobFamilyType]] = Field(
        None, min_items=0
    )


class PutJobFamilyGroupRequestType(BaseModel):
    Job_Family_Group_Reference: Optional[JobFamilyObjectType] = None
    Job_Family_Group_Data: Optional[JobFamilyGroupDataType] = None
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class SetHiringRestrictionsDataType(BaseModel):
    Supervisory_Organization_Reference: SupervisoryOrganizationObjectType
    Hiring_Restrictions_Request_Reason_Reference: Optional[
        GeneralEventSubcategoryObjectType
    ] = None
    Position_Group_Restrictions_Data: PositionGroupRestrictionDataType
    Request_Default_Compensation_Sub_Process: Optional[
        RequestCompensationDefaultSubBusinessProcessType
    ] = None


class SetHiringRestrictionsRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Set_Hiring_Restrictions_Data: SetHiringRestrictionsDataType
    version: Optional[str] = None


class CorrectHireEmployeeDataType(BaseModel):
    Event_Effective_Date: Optional[date] = None
    Conversion_Position_Start_Date: Optional[date] = None
    Conversion_Job_Profile_Start_Date: Optional[date] = None


class CorrectHireEmployeeRequestType(BaseModel):
    Event_Reference: UniqueIdentifierObjectType
    Comment: Optional[str] = None
    Correct_Hire_Employee_Data: CorrectHireEmployeeDataType
    version: Optional[str] = None


class GetStaffingFieldDefaultsConditionRulesResponseType(BaseModel):
    Request_References: Optional[
        StaffingFieldDefaultsConditionRuleRequestReferencesType
    ] = None
    Request_Criteria: Optional[
        StaffingFieldDefaultsConditionRuleRequestCriteriaType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[StaffingFieldDefaultsConditionRuleResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[StaffingFieldDefaultsConditionRuleResponseDataType] = None
    version: Optional[str] = None


class PutCollectiveAgreementResponseType(BaseModel):
    Collective_Agreement_Reference: Optional[CollectiveAgreementObjectType] = None
    version: Optional[str] = None


class PutJobFamilyGroupResponseType(BaseModel):
    Job_Family_Groups_Reference: Optional[JobFamilyObjectType] = None
    version: Optional[str] = None


class EditPositionRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Edit_Position_Data: EditPositionDataType
    version: Optional[str] = None


class PutLegalAuthorityRequestType(BaseModel):
    Delete: Optional[bool] = None
    Legal_Authority_Reference: Optional[LegalAuthorityObjectType] = None
    Legal_Authority_Data: LegalAuthorityDataType
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class WorkSpaceChangeEventDataType(BaseModel):
    Position_Reference: PositionElementObjectType
    Effective_Date: date
    Work_Space_Reference: LocationObjectType


class ChangeWorkSpaceRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Work_Space_Change_Event_Data: WorkSpaceChangeEventDataType
    version: Optional[str] = None


class PutMaintainNoticePeriodsForCountryRequestType(BaseModel):
    Maintain_Notice_Periods_For_Country_Reference: Optional[
        NoticePeriodsSetupTableObjectType
    ] = None
    Maintain_Notice_Periods_For_Country_Data: Optional[
        List[NoticePeriodsForCountryDataType]
    ] = Field(None, min_items=0)
    Add_Only: Optional[bool] = None
    version: Optional[str] = None


class ChangePersonalInformationRequestCriteriaType(BaseModel):
    Person_Type_Criteria_Data: Optional[PersonTypeCriteriaType] = None
    Country_Reference: Optional[CountryObjectType] = None


class GetChangePersonalInformationRequestType(BaseModel):
    Request_References: Optional[
        GetChangePersonalInformationRequestReferencesType
    ] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Request_Criteria_Data: Optional[ChangePersonalInformationRequestCriteriaType] = None
    version: Optional[str] = None


class FreezePositionResponseType(BaseModel):
    Position_Group_Freeze_Event_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class CitizenshipStatusType(BaseModel):
    Citizenship_Status_Reference: Optional[CitizenshipStatusObjectType] = None
    Citizenship_Status_Data: Optional[List[CitizenshipStatusDataType]] = Field(
        None, min_items=0
    )


class CitizenshipStatusResponseDataType(BaseModel):
    Citizenship_Status: Optional[List[CitizenshipStatusType]] = Field(None, min_items=0)


class GetCitizenshipStatusesResponseType(BaseModel):
    Request_References: Optional[CitizenshipStatusRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[CitizenshipStatusResponseDataType] = None
    version: Optional[str] = None


class EditPositionRestrictionEventDataType(BaseModel):
    Position_Edit_Reason_Reference: Optional[GeneralEventSubcategoryObjectType] = None
    Position_Data: Optional[PositionDefinitionDataType] = None
    Position_Group_Restrictions_Data: Optional[PositionGroupRestrictionDataType] = None
    Position_Restriction_Working_Hours_Details_Data: Optional[
        WorkingHoursDetailsDataType
    ] = None
    Qualification_Replacement_Data: Optional[
        QualificationDataForPositionRestrictionOrJobProfileType
    ] = None


class EditPositionRestrictionsDataType(BaseModel):
    Position_Reference: PositionRestrictionsObjectType
    Edit_Position_Restriction_Event_Data: Optional[
        EditPositionRestrictionEventDataType
    ] = None
    Edit_Assign_Organization_Sub_Process: Optional[
        EditAssignPositionOrganizationSubBusinessProcessType
    ] = None
    Request_Default_Compensation_Sub_Process: Optional[
        RequestCompensationDefaultSubBusinessProcessType
    ] = None
    Assign_Pay_Group_Sub_Process: Optional[
        AssignPayGroupForPositionRestrictionsSubBusinessProcessType
    ] = None


class EditPositionRestrictionsRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Edit_Position_Restrictions_Data: EditPositionRestrictionsDataType
    version: Optional[str] = None


class PutGlobalStaffingEligibilityRuleResponseType(BaseModel):
    Global_Staffing_Eligibility_Rule_Reference: Optional[ConditionRuleObjectType] = None
    Application_Instance_Related_Exceptions_Data: Optional[
        List[ApplicationInstanceRelatedExceptionsDataType]
    ] = Field(None, min_items=0)
    version: Optional[str] = None


class GetPositionsRequestType(BaseModel):
    Request_References: Optional[PositionRequestReferencesType] = None
    Request_Criteria: Optional[PositionRequestCriteriaType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[PositionResponseGroupType] = None
    version: Optional[str] = None


class ProbationPeriodsForWorkerDataType(BaseModel):
    Worker_Reference: Optional[WorkerObjectType] = None
    Position_Reference: Optional[PositionElementObjectType] = None
    Start_Date: Optional[date] = None
    End_Date: Optional[date] = None
    Extended_End_Date: Optional[date] = None
    Employee_Probation_Period_Type_Reference: Optional[
        EmployeeProbationPeriodTypeObjectType
    ] = None
    Probation_Period_Reason_Reference: Optional[
        EmployeeProbationPeriodReasonObjectType
    ] = None
    Note: Optional[str] = None
    Custom_Probation_Period_Duration: Optional[float] = None
    Custom_Probation_Period_Unit_Reference: Optional[DateAndTimeUnitObjectType] = None
    Extended_Probation_Period_Duration: Optional[float] = None
    Extended_Probation_Period_Unit_Reference: Optional[DateAndTimeUnitObjectType] = None
    Custom_Review_Probation_Period_Date: Optional[date] = None
    Custom_Review_Probation_Period_Duration: Optional[float] = None
    Custom_Review_Probation_Period_Unit_Reference: Optional[
        DateAndTimeUnitObjectType
    ] = None


class ProbationPeriodsForWorkersType(BaseModel):
    Probation_Periods_For_Worker_Reference: Optional[
        EmployeeProbationPeriodObjectType
    ] = None
    Probation_Period_For_Worker_Data: Optional[
        List[ProbationPeriodsForWorkerDataType]
    ] = Field(None, min_items=0)


class GetProbationPeriodsForWorkerResponseDataType(BaseModel):
    Probation_Periods_For_Workers: Optional[
        List[ProbationPeriodsForWorkersType]
    ] = Field(None, min_items=0)


class GetProbationPeriodsForWorkersResponseType(BaseModel):
    Request_References: Optional[ProbationPeriodsForWorkersRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[GetProbationPeriodsForWorkerResponseDataType] = None
    version: Optional[str] = None


class AddAdditionalJobRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Add_Additional_Job_Data: AddAdditionalJobDataType
    version: Optional[str] = None


class PutAssignMatrixOrganizationRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Assign_Matrix_Organization_Business_Process_Data: AssignMatrixOrganizationBusinessProcessDataType
    version: Optional[str] = None


class MoveWorkersByOrganizationResponseType(BaseModel):
    Move_Workers_By_Organization_Reference: Optional[UniqueIdentifierObjectType] = None
    version: Optional[str] = None


class PutMaintainJobOverlapRoutingExclusionRuleResponseType(BaseModel):
    Maintain_Job_Overlap_Routing_Exclusion_Rule_Reference: Optional[
        JobOverlapConditionRuleObjectType
    ] = None
    version: Optional[str] = None


class JobFamilyGroupNewType(BaseModel):
    Job_Family_Group_Reference: Optional[JobFamilyObjectType] = None
    Job_Family_Group_Data: Optional[JobFamilyGroupDataType] = None
    As_Of_Date: Optional[date] = None
    As_Of_Moment: Optional[datetime] = None


class JobFamilyGroupResponseDataType(BaseModel):
    Job_Family_Group: Optional[List[JobFamilyGroupNewType]] = Field(None, min_items=0)


class GetJobFamilyGroupsResponseType(BaseModel):
    Request_References: Optional[JobFamilyGroupRequestReferencesType] = None
    Response_Filter: Optional[ResponseFilterType] = None
    Response_Group: Optional[JobFamilyGroupResponseGroupType] = None
    Response_Results: Optional[ResponseResultsType] = None
    Response_Data: Optional[JobFamilyGroupResponseDataType] = None
    version: Optional[str] = None


class PutRemoveMatrixOrganizationRequestType(BaseModel):
    Business_Process_Parameters: Optional[BusinessProcessParametersType] = None
    Remove_Matrix_Organization_Business_Process_Data: RemoveMatrixOrganizationBusinessProcessDataType
    version: Optional[str] = None


class ModelItem(BaseModel):
    Put_Citizenship_Status_Response: Optional[PutCitizenshipStatusResponseType] = None


class ModelItem1(BaseModel):
    Get_Maintain_Job_Overlap_Routing_Exclusion_Rule_Request: Optional[
        GetMaintainJobOverlapRoutingExclusionRuleRequestType
    ] = None


class ModelItem2(BaseModel):
    Get_Change_Government_IDs_Response: Optional[
        GetChangeGovernmentIDsResponseType
    ] = None


class ModelItem3(BaseModel):
    Put_Probation_Period_Outcomes_Request: Optional[
        PutProbationPeriodOutcomesRequestType
    ] = None


class ModelItem4(BaseModel):
    Put_FSE_Worker_Category_Criteria_Response: Optional[
        PutFSEWorkerCategoryCriteriaResponseType
    ] = None


class ModelItem5(BaseModel):
    Get_Job_Classification_Groups_Response: Optional[
        GetJobClassificationGroupsResponseType
    ] = None


class ModelItem6(BaseModel):
    Change_Job_Request: Optional[ChangeJobRequestType] = None


class ModelItem7(BaseModel):
    Put_Student_Employment_Eligibility_Rule_Set_Response: Optional[
        PutStudentEmploymentEligibilityRuleSetResponseType
    ] = None


class ModelItem8(BaseModel):
    Put_Remark_Request: Optional[PutRemarkRequestType] = None


class ModelItem9(BaseModel):
    Add_Additional_Job_Event_Response: Optional[
        AddAdditionalJobEventResponseType
    ] = None


class ModelItem10(BaseModel):
    Get_Change_Government_IDs_Request: Optional[
        GetChangeGovernmentIDsRequestType
    ] = None


class ModelItem11(BaseModel):
    Put_Nature_of_Action_Request: Optional[PutNatureOfActionRequestType] = None


class ModelItem12(BaseModel):
    Put_Personnel_Action_Request_Status_on_Mass_Action_Request: Optional[
        PutPersonnelActionRequestStatusOnMassActionRequestType
    ] = None


class ModelItem13(BaseModel):
    No_Show_Request: Optional[NoShowRequestType] = None


class ModelItem14(BaseModel):
    Add_Retiree_Status_Request: Optional[AddRetireeStatusRequestType] = None


class ModelItem15(BaseModel):
    Put_Legal_Authority_Response: Optional[PutLegalAuthorityResponseType] = None


class ModelItem16(BaseModel):
    Put_Job_Classification_Group_Request: Optional[
        PutJobClassificationGroupRequestType
    ] = None


class ModelItem17(BaseModel):
    Get_Collective_Agreements_Request: Optional[
        GetCollectiveAgreementsRequestType
    ] = None


class ModelItem18(BaseModel):
    Import_Applicant_Request: Optional[ImportApplicantRequestType] = None


class ModelItem19(BaseModel):
    Put_Applicant_Response: Optional[PutApplicantResponseType] = None


class ModelItem20(BaseModel):
    Get_Citizenship_Statuses_Request: Optional[GetCitizenshipStatusesRequestType] = None


class ModelItem21(BaseModel):
    Edit_Creditable_Service_Request: Optional[EditCreditableServiceRequestType] = None


class ModelItem22(BaseModel):
    Edit_Hiring_Restrictions_Request: Optional[EditHiringRestrictionsRequestType] = None


class ModelItem23(BaseModel):
    Get_Student_Employment_Eligibility_Rule_Set_Response: Optional[
        GetStudentEmploymentEligibilityRuleSetResponseType
    ] = None


class ModelItem24(BaseModel):
    Import_Change_Organization_Assignment_Request: Optional[
        ImportChangeOrganizationAssignmentRequestType
    ] = None


class ModelItem25(BaseModel):
    Edit_Service_Dates_Request: Optional[EditServiceDatesRequestType] = None


class ModelItem26(BaseModel):
    Get_Maintain_Probation_Periods_For_Country_Response: Optional[
        GetMaintainProbationPeriodsForCountryResponseType
    ] = None


class ModelItem27(BaseModel):
    Put_Job_Overlap_Routing_Exclusion_Rule_Request: Optional[
        PutJobOverlapRoutingExclusionRuleRequestType
    ] = None


class ModelItem28(BaseModel):
    Put_Maintain_Notice_Periods_for_Country_Response: Optional[
        PutMaintainNoticePeriodsForCountryResponseType
    ] = None


class ModelItem29(BaseModel):
    Import_Assign_Matrix_Organization_Request: Optional[
        ImportAssignMatrixOrganizationRequestType
    ] = None


class ModelItem30(BaseModel):
    Put_Hire_Event_Proposed_Worker_ID_Response: Optional[
        PutHireEventProposedWorkerIDResponseType
    ] = None


class ModelItem31(BaseModel):
    End_Additional_Job_Request: Optional[EndAdditionalJobRequestRootType] = None


class ModelItem32(BaseModel):
    Get_Nature_of_Actions_Request: Optional[GetNatureOfActionsRequestType] = None


class ModelItem33(BaseModel):
    Edit_Position_Restrictions_Additional_Data_Response: Optional[
        EditPositionRestrictionsAdditionalDataResponseType
    ] = None


class ModelItem34(BaseModel):
    Get_Global_Staffing_Eligibility_Rules_Without_Dependencies_Request: Optional[
        GetGlobalStaffingEligibilityRulesWithoutDependenciesRequestType
    ] = None


class ModelItem35(BaseModel):
    Get_Notice_Period_Eligibility_Rules_Without_Dependencies_Response: Optional[
        GetNoticePeriodEligibilityRulesWithoutDependenciesResponseType
    ] = None


class ModelItem36(BaseModel):
    Edit_Worker_Additional_Data_Response: Optional[
        EditWorkerAdditionalDataResponseType
    ] = None


class ModelItem37(BaseModel):
    Import_Remove_Matrix_Organization_Request: Optional[
        ImportRemoveMatrixOrganizationRequestType
    ] = None


class ModelItem38(BaseModel):
    Edit_Positon_Restriction_Response: Optional[
        EditPositonRestrictionResponseType
    ] = None


class ModelItem39(BaseModel):
    Get_Probation_Period_Eligibility_Rules_Response: Optional[
        GetProbationPeriodEligibilityRulesResponseType
    ] = None


class ModelItem40(BaseModel):
    Edit_Employee_Contract_Additional_Data_Request: Optional[
        EditEmployeeContractAdditionalDataRequestType
    ] = None


class ModelItem41(BaseModel):
    Get_Probation_Period_Eligibility_Rules_Without_Dependencies_Request: Optional[
        GetProbationPeriodEligibilityRulesWithoutDependenciesRequestType
    ] = None


class ModelItem42(BaseModel):
    Put_Assign_Matrix_Organization_Response: Optional[
        PutAssignMatrixOrganizationResponseType
    ] = None


class ModelItem43(BaseModel):
    Get_Positions_Response: Optional[GetPositionsResponseType] = None


class ModelItem44(BaseModel):
    End_International_Assignment_for_Employee_Event_Request: Optional[
        EndInternationalAssignmentForEmployeeEventRequestType
    ] = None


class ModelItem45(BaseModel):
    Change_Personal_Information_Response: Optional[
        ChangePersonalInformationResponseType
    ] = None


class ModelItem46(BaseModel):
    Get_Change_Licenses_Response: Optional[GetChangeLicensesResponseType] = None


class ModelItem47(BaseModel):
    Put_Dependent_Request: Optional[PutDependentRequestType] = None


class ModelItem48(BaseModel):
    Hire_Employee_Event_Response: Optional[HireEmployeeEventResponseType] = None


class ModelItem49(BaseModel):
    Remove_Retiree_Status_Response: Optional[RemoveRetireeStatusResponseType] = None


class ModelItem50(BaseModel):
    Correct_Hire_Employee_Response: Optional[CorrectHireEmployeeResponseType] = None


class ModelItem51(BaseModel):
    Switch_Primary_Job_Request: Optional[SwitchPrimaryJobRequestType] = None


class ModelItem52(BaseModel):
    Get_Change_Licenses_Request: Optional[GetChangeLicensesRequestType] = None


class ModelItem53(BaseModel):
    Get_Change_Preferred_Name_Request: Optional[
        GetChangePreferredNameRequestType
    ] = None


class ModelItem54(BaseModel):
    Assign_Organization_Response: Optional[AssignOrganizationResponseType] = None


class ModelItem55(BaseModel):
    Correct_Contract_Contingent_Worker_Request: Optional[
        CorrectContractContingentWorkerRequestType
    ] = None


class ModelItem56(BaseModel):
    Get_Personnel_Action_Request_Status_on_Mass_Action_Response: Optional[
        GetPersonnelActionRequestStatusOnMassActionResponseType
    ] = None


class ModelItem57(BaseModel):
    Get_Staffing_Field_Defaults_Condition_Rules_Request: Optional[
        GetStaffingFieldDefaultsConditionRulesRequestType
    ] = None


class ModelItem58(BaseModel):
    Get_Job_Family_Groups_Request: Optional[GetJobFamilyGroupsRequestType] = None


class ModelItem59(BaseModel):
    Processing_Fault: Optional[ProcessingFaultType] = None


class ModelItem60(BaseModel):
    Get_Maintain_Notice_Periods_For_Country_Request: Optional[
        GetMaintainNoticePeriodsForCountryRequestType
    ] = None


class ModelItem61(BaseModel):
    Close_Position_Response: Optional[ClosePositionResponseType] = None


class ModelItem62(BaseModel):
    Edit_Worker_Additional_Data_Request: Optional[
        EditWorkerAdditionalDataRequestType
    ] = None


class ModelItem63(BaseModel):
    End_Contingent_Worker_Contract_Response: Optional[
        EndContingentWorkerContractResponseType
    ] = None


class ModelItem64(BaseModel):
    Start_International_Assignment_Response: Optional[
        StartInternationalAssignmentResponseType
    ] = None


class ModelItem65(BaseModel):
    Get_Staffing_Field_Defaults_Condition_Rules_without_Dependencies_Request: Optional[
        GetStaffingFieldDefaultsConditionRulesWithoutDependenciesRequestType
    ] = None


class ModelItem66(BaseModel):
    Assign_Organization_Roles_Response: Optional[
        AssignOrganizationRolesResponseType
    ] = None


class ModelItem67(BaseModel):
    Put_Student_Employment_Eligibility_Rule_Request: Optional[
        PutStudentEmploymentEligibilityRuleRequestType
    ] = None


class ModelItem68(BaseModel):
    Get_Job_Overlap_Routing_Exclusion_Rules_Response: Optional[
        GetJobOverlapRoutingExclusionRulesResponseType
    ] = None


class ModelItem69(BaseModel):
    Put_Global_Staffing_Eligibility_Rule_Request: Optional[
        PutGlobalStaffingEligibilityRuleRequestType
    ] = None


class ModelItem70(BaseModel):
    Get_Student_Employment_Eligibility_Data_Response: Optional[
        GetStudentEmploymentEligibilityDataResponseType
    ] = None


class ModelItem71(BaseModel):
    Import_External_Student_Request: Optional[ImportExternalStudentRequestType] = None


class ModelItem72(BaseModel):
    Close_Position_Request: Optional[ClosePositionRequestType] = None


class ModelItem73(BaseModel):
    Get_Student_Employment_Eligibility_Rules_Request: Optional[
        GetStudentEmploymentEligibilityRulesRequestType
    ] = None


class ModelItem74(BaseModel):
    Get_Student_Employment_Eligibility_Rule_Set_Request: Optional[
        GetStudentEmploymentEligibilityRuleSetRequestType
    ] = None


class ModelItem75(BaseModel):
    Put_Job_Family_Request: Optional[PutJobFamilyRequestType] = None


class ModelItem76(BaseModel):
    Delete_Worker_Document_Response: Optional[DeleteWorkerDocumentResponseType] = None


class ModelItem77(BaseModel):
    Create_Position_Response: Optional[CreatePositionResponseType] = None


class ModelItem78(BaseModel):
    Terminate_Employee_Event_Response: Optional[
        TerminateEmployeeEventResponseType
    ] = None


class ModelItem79(BaseModel):
    Remove_Retiree_Status_Request: Optional[RemoveRetireeStatusRequestType] = None


class ModelItem80(BaseModel):
    Get_FSE_Worker_Category_Criterias_Request: Optional[
        GetFSEWorkerCategoryCriteriasRequestType
    ] = None


class ModelItem81(BaseModel):
    Put_Applicant_Request: Optional[PutApplicantRequestType] = None


class ModelItem82(BaseModel):
    Put_Maintain_Employee_Contract_Rules_For_Country_Request: Optional[
        PutMaintainEmployeeContractRulesForCountryRequestType
    ] = None


class ModelItem83(BaseModel):
    Get_Maintain_Probation_Periods_For_Country_Request: Optional[
        GetMaintainProbationPeriodsForCountryRequestType
    ] = None


class ModelItem84(BaseModel):
    Get_Applicants_Response: Optional[GetApplicantsResponseType] = None


class ModelItem85(BaseModel):
    Assign_Roles_Response: Optional[AssignRolesResponseType] = None


class ModelItem86(BaseModel):
    Get_Collective_Agreements_Response: Optional[
        GetCollectiveAgreementsResponseType
    ] = None


class ModelItem87(BaseModel):
    Get_Change_Passports_and_Visas_Response: Optional[
        GetChangePassportsAndVisasResponseType
    ] = None


class ModelItem88(BaseModel):
    Get_Probation_Period_Outcome_Response: Optional[
        GetProbationPeriodOutcomeResponseType
    ] = None


class ModelItem89(BaseModel):
    Put_Maintain_Working_Time_for_Country_Request: Optional[
        PutMaintainWorkingTimeForCountryRequestType
    ] = None


class ModelItem90(BaseModel):
    Get_Student_Employment_Eligibility_Rules_Response: Optional[
        GetStudentEmploymentEligibilityRulesResponseType
    ] = None


class ModelItem91(BaseModel):
    Get_Global_Staffing_Eligibility_Rules_Without_Dependencies_Response: Optional[
        GetGlobalStaffingEligibilityRulesWithoutDependenciesResponseType
    ] = None


class ModelItem92(BaseModel):
    Put_Student_Employment_Eligibility_Status_Request: Optional[
        PutStudentEmploymentEligibilityStatusRequestType
    ] = None


class ModelItem93(BaseModel):
    Move_Workers_By_Organization_Request: Optional[
        MoveWorkersByOrganizationRequestType
    ] = None


class ModelItem94(BaseModel):
    Import_Terminate_Employee_Request: Optional[
        ImportTerminateEmployeeRequestType
    ] = None


class ModelItem95(BaseModel):
    Put_Maintain_Working_Time_for_Country_Response: Optional[
        PutMaintainWorkingTimeForCountryResponseType
    ] = None


class ModelItem96(BaseModel):
    Put_Job_Family_Response: Optional[PutJobFamilyResponseType] = None


class ModelItem97(BaseModel):
    Put_Remark_Response: Optional[PutRemarkResponseType] = None


class ModelItem98(BaseModel):
    Get_Applicants_Request: Optional[GetApplicantsRequestType] = None


class ModelItem99(BaseModel):
    Get_Job_Families_Request: Optional[GetJobFamiliesRequestType] = None


class ModelItem100(BaseModel):
    Put_Staffing_Field_Defaults_Condition_Rules_Request: Optional[
        PutStaffingFieldDefaultsConditionRulesRequestType
    ] = None


class ModelItem101(BaseModel):
    Get_Workers_Request: Optional[GetWorkersRequestType] = None


class ModelItem102(BaseModel):
    Get_Notice_Periods_for_Worker_Response: Optional[
        GetNoticePeriodsForWorkerResponseType
    ] = None


class ModelItem103(BaseModel):
    Get_Notice_Period_Eligibility_Rules_Request: Optional[
        GetNoticePeriodEligibilityRulesRequestType
    ] = None


class ModelItem104(BaseModel):
    Change_Work_Space_Response: Optional[ChangeWorkSpaceResponseType] = None


class ModelItem105(BaseModel):
    Edit_Creditable_Service_Response: Optional[EditCreditableServiceResponseType] = None


class ModelItem106(BaseModel):
    Get_Global_Staffing_Eligibility_Rules_Request: Optional[
        GetGlobalStaffingEligibilityRulesRequestType
    ] = None


class ModelItem107(BaseModel):
    Put_Worker_Document_Response: Optional[PutWorkerDocumentResponseType] = None


class ModelItem108(BaseModel):
    Edit_Position_Restrictions_Additional_Data_Request: Optional[
        EditPositionRestrictionsAdditionalDataRequestType
    ] = None


class ModelItem109(BaseModel):
    Put_Staffing_Field_Defaults_Condition_Rules_Response: Optional[
        PutStaffingFieldDefaultsConditionRulesResponseType
    ] = None


class ModelItem110(BaseModel):
    Get_Probation_Period_Eligibility_Rules_Request: Optional[
        GetProbationPeriodEligibilityRulesRequestType
    ] = None


class ModelItem111(BaseModel):
    Correct_Contract_Contingent_Worker_Response: Optional[
        CorrectContractContingentWorkerResponseType
    ] = None


class ModelItem112(BaseModel):
    Contract_Contingent_Worker_Response: Optional[
        ContractContingentWorkerResponseType
    ] = None


class ModelItem113(BaseModel):
    Get_Remarks_Request: Optional[GetRemarksRequestType] = None


class ModelItem114(BaseModel):
    Hire_Employee_Request: Optional[HireEmployeeRequestType] = None


class ModelItem115(BaseModel):
    Put_Student_Employment_Eligibility_Rule_Set_Request: Optional[
        PutStudentEmploymentEligibilityRuleSetRequestType
    ] = None


class ModelItem116(BaseModel):
    Get_Notice_Period_Eligibility_Rules_Without_Dependencies_Request: Optional[
        GetNoticePeriodEligibilityRulesWithoutDependenciesRequestType
    ] = None


class ModelItem117(BaseModel):
    Put_Job_Overlap_Routing_Exclusion_Rule_Response: Optional[
        PutJobOverlapRoutingExclusionRuleResponseType
    ] = None


class ModelItem118(BaseModel):
    Change_Organization_Assignments_Request: Optional[
        ChangeOrganizationAssignmentsRequestType
    ] = None


class ModelItem119(BaseModel):
    Freeze_Position_Request: Optional[FreezePositionRequestType] = None


class ModelItem120(BaseModel):
    Import_Edit_Position_Request: Optional[ImportEditPositionRequestType] = None


class ModelItem121(BaseModel):
    Get_Probation_Period_Eligibility_Rules_Without_Dependencies_Response: Optional[
        GetProbationPeriodEligibilityRulesWithoutDependenciesResponseType
    ] = None


class ModelItem122(BaseModel):
    Get_Legal_Authorities_Request: Optional[GetLegalAuthoritiesRequestType] = None


class ModelItem123(BaseModel):
    Put_Probation_Period_Outcome_Request: Optional[
        PutProbationPeriodOutcomeRequestType
    ] = None


class ModelItem124(BaseModel):
    Contract_Contingent_Worker_Request: Optional[
        ContractContingentWorkerRequestType
    ] = None


class ModelItem125(BaseModel):
    Put_Job_Classification_Group_Response: Optional[
        PutJobClassificationGroupResponseType
    ] = None


class ModelItem126(BaseModel):
    Get_Probation_Periods_For_Workers_Request: Optional[
        GetProbationPeriodsForWorkersRequestType
    ] = None


class ModelItem127(BaseModel):
    Bulk_Import_End_Additional_Job_Request: Optional[
        BulkImportEndAdditionalJobRequestType
    ] = None


class ModelItem128(BaseModel):
    End_International_Assignment_for_Employee_Event_Response: Optional[
        EndInternationalAssignmentForEmployeeEventResponseType
    ] = None


class ModelItem129(BaseModel):
    Edit_Hiring_Restrictions_Response: Optional[
        EditHiringRestrictionsResponseType
    ] = None


class ModelItem130(BaseModel):
    Get_Functionality_for_Staffing_Transactions_Response: Optional[
        GetFunctionalityForStaffingTransactionsResponseType
    ] = None


class ModelItem131(BaseModel):
    Get_Workers_Response: Optional[GetWorkersResponseType] = None


class ModelItem132(BaseModel):
    Put_Edit_Notice_Periods_Event_Request: Optional[
        PutEditNoticePeriodsEventRequestType
    ] = None


class ModelItem133(BaseModel):
    Get_Maintain_Notice_Periods_For_Country_Response: Optional[
        GetMaintainNoticePeriodsForCountryResponseType
    ] = None


class ModelItem134(BaseModel):
    Get_Staffing_Field_Defaults_Request: Optional[
        GetStaffingFieldDefaultsRequestType
    ] = None


class ModelItem135(BaseModel):
    Delete_Worker_Document_Request: Optional[DeleteWorkerDocumentRequestType] = None


class ModelItem136(BaseModel):
    Assign_Organization_Request: Optional[AssignOrganizationRequestType] = None


class ModelItem137(BaseModel):
    Get_Change_Legal_Name_Response: Optional[GetChangeLegalNameResponseType] = None


class ModelItem138(BaseModel):
    Put_Probation_Period_Outcome_Response: Optional[
        PutProbationPeriodOutcomeResponseType
    ] = None


class ModelItem139(BaseModel):
    Get_FSE_Worker_Category_Criterias_Response: Optional[
        GetFSEWorkerCategoryCriteriasResponseType
    ] = None


class ModelItem140(BaseModel):
    Get_Global_Staffing_Eligibility_Rules_Response: Optional[
        GetGlobalStaffingEligibilityRulesResponseType
    ] = None


class ModelItem141(BaseModel):
    Assign_Roles_Request: Optional[AssignRolesRequestType] = None


class ModelItem142(BaseModel):
    End_Contingent_Worker_Contract_Request: Optional[
        EndContingentWorkerContractRequestType
    ] = None


class ModelItem143(BaseModel):
    Workday_Common_Header: Optional[WorkdayCommonHeaderType] = None


class ModelItem144(BaseModel):
    Get_Maintain_Employee_Contract_Rules_For_Country_Response: Optional[
        GetMaintainEmployeeContractRulesForCountryResponseType
    ] = None


class ModelItem145(BaseModel):
    Put_Probation_Period_Outcomes_Response: Optional[
        PutProbationPeriodOutcomesResponseType
    ] = None


class ModelItem146(BaseModel):
    Put_Maintain_Employee_Contract_Rules_For_Country_Response: Optional[
        PutMaintainEmployeeContractRulesForCountryResponseType
    ] = None


class ModelItem147(BaseModel):
    Implementation_Employee_Data: Optional[ImplementationEmployeeDataRootType] = None


class ModelItem148(BaseModel):
    Import_End_Contingent_Worker_Contract_Request: Optional[
        ImportEndContingentWorkerContractRequestType
    ] = None


class ModelItem149(BaseModel):
    Get_Creditable_Service_Request: Optional[GetCreditableServiceRequestType] = None


class ModelItem150(BaseModel):
    Get_Organizations_Request: Optional[GetOrganizationsRequestType] = None


class ModelItem151(BaseModel):
    Put_Import_Process_Response: Optional[PutImportProcessResponseType] = None


class ModelItem152(BaseModel):
    Put_Personnel_Action_Request_Status_on_Mass_Action_Response: Optional[
        PutPersonnelActionRequestStatusOnMassActionResponseType
    ] = None


class ModelItem153(BaseModel):
    Import_Create_Position_Request: Optional[ImportCreatePositionRequestType] = None


class ModelItem154(BaseModel):
    Put_Probation_Period_Eligibility_Rule_Request: Optional[
        PutProbationPeriodEligibilityRuleRequestType
    ] = None


class ModelItem155(BaseModel):
    Get_Maintain_Employee_Contract_Rules_For_Country_Request: Optional[
        GetMaintainEmployeeContractRulesForCountryRequestType
    ] = None


class ModelItem156(BaseModel):
    Import_Edit_Hiring_Restrictions_Request: Optional[
        ImportEditHiringRestrictionsRequestType
    ] = None


class ModelItem157(BaseModel):
    Terminate_Employee_Request: Optional[TerminateEmployeeRequestType] = None


class ModelItem158(BaseModel):
    Get_Staffing_Field_Defaults_Response: Optional[
        GetStaffingFieldDefaultsResponseType
    ] = None


class ModelItem159(BaseModel):
    Get_Job_Overlap_Routing_Exclusion_Rules_Request: Optional[
        GetJobOverlapRoutingExclusionRulesRequestType
    ] = None


class ModelItem160(BaseModel):
    Get_Student_Employment_Eligibility_Data_Request: Optional[
        GetStudentEmploymentEligibilityDataRequestType
    ] = None


class ModelItem161(BaseModel):
    Get_Probation_Period_Outcome_Request: Optional[
        GetProbationPeriodOutcomeRequestType
    ] = None


class ModelItem162(BaseModel):
    Edit_Service_Dates_Response: Optional[EditServiceDatesResponseType] = None


class ModelItem163(BaseModel):
    Get_Maintain_Working_Time_for_Country_Response: Optional[
        GetMaintainWorkingTimeForCountryResponseType
    ] = None


class ModelItem164(BaseModel):
    Get_Role_Assignments_For_Role_Assigners_Response: Optional[
        GetRoleAssignmentsForRoleAssignersResponseType
    ] = None


class ModelItem165(BaseModel):
    Change_Job_Response: Optional[ChangeJobResponseType] = None


class ModelItem166(BaseModel):
    Switch_Primary_Job_Event_Response: Optional[
        SwitchPrimaryJobEventResponseType
    ] = None


class ModelItem167(BaseModel):
    Import_Change_Job_Request: Optional[ImportChangeJobRequestType] = None


class ModelItem168(BaseModel):
    Put_Working_Time_Eligibility_Rules_Request: Optional[
        PutWorkingTimeEligibilityRulesRequestType
    ] = None


class ModelItem169(BaseModel):
    Get_Job_Families_Response: Optional[GetJobFamiliesResponseType] = None


class ModelItem170(BaseModel):
    Put_FSE_Worker_Category_Criteria_Request: Optional[
        PutFSEWorkerCategoryCriteriaRequestType
    ] = None


class ModelItem171(BaseModel):
    Put_Notice_Period_Eligibility_Rule_Request: Optional[
        PutNoticePeriodEligibilityRuleRequestType
    ] = None


class ModelItem172(BaseModel):
    Put_Staffing_Field_Defaults_Response: Optional[
        PutStaffingFieldDefaultsResponseType
    ] = None


class ModelItem173(BaseModel):
    Put_Staffing_Field_Defaults_Request: Optional[
        PutStaffingFieldDefaultsRequestType
    ] = None


class ModelItem174(BaseModel):
    Get_Change_Other_IDs_Response: Optional[GetChangeOtherIDsResponseType] = None


class ModelItem175(BaseModel):
    Maintain_Employee_Contracts_Response: Optional[
        MaintainEmployeeContractsResponseType
    ] = None


class ModelItem176(BaseModel):
    Get_Change_Passports_and_Visas_Request: Optional[
        GetChangePassportsAndVisasRequestType
    ] = None


class ModelItem177(BaseModel):
    Validation_Fault: Optional[ValidationFaultType] = None


class ModelItem178(BaseModel):
    Get_Role_Assignments_For_Role_Assigners_Request: Optional[
        GetRoleAssignmentsForRoleAssignersRequestType
    ] = None


class ModelItem179(BaseModel):
    Import_Move_Workers_By_Organization_Request: Optional[
        ImportMoveWorkersByOrganizationRequestType
    ] = None


class ModelItem180(BaseModel):
    Put_Student_Employment_Eligibility_Status_Response: Optional[
        PutStudentEmploymentEligibilityStatusResponseType
    ] = None


class ModelItem181(BaseModel):
    Put_Probation_Period_Eligibility_Rule_Response: Optional[
        PutProbationPeriodEligibilityRuleResponseType
    ] = None


class ModelItem182(BaseModel):
    Put_Citizenship_Status_Request: Optional[PutCitizenshipStatusRequestType] = None


class ModelItem183(BaseModel):
    Put_Functionality_for_Staffing_Transactions_Response: Optional[
        PutFunctionalityForStaffingTransactionsResponseType
    ] = None


class ModelItem184(BaseModel):
    Put_Worker_Document_Request: Optional[PutWorkerDocumentRequestType] = None


class ModelItem185(BaseModel):
    Put_Collective_Agreement_Request: Optional[PutCollectiveAgreementRequestType] = None


class ModelItem186(BaseModel):
    Get_Change_Legal_Name_Request: Optional[GetChangeLegalNameRequestType] = None


class ModelItem187(BaseModel):
    Get_Nature_of_Actions_Response: Optional[GetNatureOfActionsResponseType] = None


class ModelItem188(BaseModel):
    Maintain_Employee_Contracts_Request: Optional[
        MaintainEmployeeContractsRequestType
    ] = None


class ModelItem189(BaseModel):
    Put_Edit_Notice_Periods_Event_Response: Optional[
        PutEditNoticePeriodsEventResponseType
    ] = None


class ModelItem190(BaseModel):
    Put_Maintain_Probation_Periods_For_Country_Response: Optional[
        PutMaintainProbationPeriodsForCountryResponseType
    ] = None


class ModelItem191(BaseModel):
    Get_Job_Classification_Groups_Request: Optional[
        GetJobClassificationGroupsRequestType
    ] = None


class ModelItem192(BaseModel):
    Get_Probation_Period_Outcomes_Request: Optional[
        GetProbationPeriodOutcomesRequestType
    ] = None


class ModelItem193(BaseModel):
    Put_Dependent_Response: Optional[PutDependentResponseType] = None


class ModelItem194(BaseModel):
    Add_Retiree_Status_Response: Optional[AddRetireeStatusResponseType] = None


class ModelItem195(BaseModel):
    Get_Change_Preferred_Name_Response: Optional[
        GetChangePreferredNameResponseType
    ] = None


class ModelItem196(BaseModel):
    Get_Remarks_Response: Optional[GetRemarksResponseType] = None


class ModelItem197(BaseModel):
    Get_Worker_Documents_Response: Optional[GetWorkerDocumentsResponseType] = None


class ModelItem198(BaseModel):
    End_Additional_Employee_Job_Event_Response: Optional[
        EndAdditionalEmployeeJobEventResponseType
    ] = None


class ModelItem199(BaseModel):
    Get_Working_Time_Eligibility_Rules_Request: Optional[
        GetWorkingTimeEligibilityRulesRequestType
    ] = None


class ModelItem200(BaseModel):
    Put_Nature_of_Action_Response: Optional[PutNatureOfActionResponseType] = None


class ModelItem201(BaseModel):
    Create_Position_Request: Optional[CreatePositionRequestType] = None


class ModelItem202(BaseModel):
    Put_Functionality_for_Staffing_Transactions_Request: Optional[
        PutFunctionalityForStaffingTransactionsRequestType
    ] = None


class ModelItem203(BaseModel):
    Get_Change_Other_IDs_Request: Optional[GetChangeOtherIDsRequestType] = None


class ModelItem204(BaseModel):
    Put_Student_Employment_Eligibility_Rule_Response: Optional[
        PutStudentEmploymentEligibilityRuleResponseType
    ] = None


class ModelItem205(BaseModel):
    Get_Organizations_Response: Optional[GetOrganizationsResponseType] = None


class ModelItem206(BaseModel):
    Edit_Position_Event_Response: Optional[EditPositionEventResponseType] = None


class ModelItem207(BaseModel):
    Start_International_Assignment_Request: Optional[
        StartInternationalAssignmentRequestType
    ] = None


class ModelItem208(BaseModel):
    Import_Swap_Positions_Request: Optional[ImportSwapPositionsRequestType] = None


class ModelItem209(BaseModel):
    Put_Hire_Event_Proposed_Worker_ID_Request: Optional[
        PutHireEventProposedWorkerIDRequestType
    ] = None


class ModelItem210(BaseModel):
    Put_Maintain_Job_Overlap_Routing_Exclusion_Rule_Request: Optional[
        PutMaintainJobOverlapRoutingExclusionRuleRequestType
    ] = None


class ModelItem211(BaseModel):
    Get_Legal_Authorities_Response: Optional[GetLegalAuthoritiesResponseType] = None


class ModelItem212(BaseModel):
    Get_Notice_Period_Eligibility_Rules_Response: Optional[
        GetNoticePeriodEligibilityRulesResponseType
    ] = None


class ModelItem213(BaseModel):
    Import_Contract_Contingent_Worker_Request: Optional[
        ImportContractContingentWorkerRequestType
    ] = None


class ModelItem214(BaseModel):
    Get_Change_Personal_Information_Response: Optional[
        GetChangePersonalInformationResponseType
    ] = None


class ModelItem215(BaseModel):
    Get_Notice_Periods_for_Worker_Request: Optional[
        GetNoticePeriodsForWorkerRequestType
    ] = None


class ModelItem216(BaseModel):
    Get_Personnel_Action_Request_Status_on_Mass_Action_Request: Optional[
        GetPersonnelActionRequestStatusOnMassActionRequestType
    ] = None


class ModelItem217(BaseModel):
    Get_Staffing_Field_Defaults_Condition_Rules_without_Dependencies_Response: Optional[
        GetStaffingFieldDefaultsConditionRulesWithoutDependenciesResponseType
    ] = None


class ModelItem218(BaseModel):
    Put_Notice_Period_Eligibility_Rule_Response: Optional[
        PutNoticePeriodEligibilityRuleResponseType
    ] = None


class ModelItem219(BaseModel):
    Assign_Organization_Roles_Request: Optional[
        AssignOrganizationRolesRequestType
    ] = None


class ModelItem220(BaseModel):
    Change_Organization_Assignments_Response: Optional[
        ChangeOrganizationAssignmentsResponseType
    ] = None


class ModelItem221(BaseModel):
    Get_Creditable_Service_Response: Optional[GetCreditableServiceResponseType] = None


class ModelItem222(BaseModel):
    Put_Remove_Matrix_Organization_Response: Optional[
        PutRemoveMatrixOrganizationResponseType
    ] = None


class ModelItem223(BaseModel):
    Get_Working_Time_Eligibility_Rules_Response: Optional[
        GetWorkingTimeEligibilityRulesResponseType
    ] = None


class ModelItem224(BaseModel):
    Get_Worker_Documents_Request: Optional[GetWorkerDocumentsRequestType] = None


class ModelItem225(BaseModel):
    No_Show_Event_Response: Optional[NoShowEventResponseType] = None


class ModelItem226(BaseModel):
    Get_Probation_Period_Outcomes_Response: Optional[
        GetProbationPeriodOutcomesResponseType
    ] = None


class ModelItem227(BaseModel):
    Change_Personal_Information_Request: Optional[
        ChangePersonalInformationRequestType
    ] = None


class ModelItem228(BaseModel):
    Set_Hiring_Restrictions_Response: Optional[SetHiringRestrictionsResponseType] = None


class ModelItem229(BaseModel):
    Get_Maintain_Working_Time_for_Country_Request: Optional[
        GetMaintainWorkingTimeForCountryRequestType
    ] = None


class ModelItem230(BaseModel):
    Import_Hire_Employee_Request: Optional[ImportHireEmployeeRequestType] = None


class ModelItem231(BaseModel):
    Put_Working_Time_Eligibility_Rules_Response: Optional[
        PutWorkingTimeEligibilityRulesResponseType
    ] = None


class ModelItem232(BaseModel):
    Import_Add_Additional_Job_Request: Optional[
        ImportAddAdditionalJobRequestType
    ] = None


class ModelItem233(BaseModel):
    Get_Functionality_for_Staffing_Transactions_Request: Optional[
        GetFunctionalityForStaffingTransactionsRequestType
    ] = None


class ModelItem234(BaseModel):
    Put_Maintain_Probation_Periods_For_Country_Request: Optional[
        PutMaintainProbationPeriodsForCountryRequestType
    ] = None


class ModelItem235(BaseModel):
    Edit_Employee_Contract_Additional_Data_Response: Optional[
        EditEmployeeContractAdditionalDataResponseType
    ] = None


class ModelItem236(BaseModel):
    Get_Maintain_Job_Overlap_Routing_Exclusion_Rule_Response: Optional[
        GetMaintainJobOverlapRoutingExclusionRuleResponseType
    ] = None


class ModelItem237(BaseModel):
    Put_Job_Family_Group_Request: Optional[PutJobFamilyGroupRequestType] = None


class ModelItem238(BaseModel):
    Set_Hiring_Restrictions_Request: Optional[SetHiringRestrictionsRequestType] = None


class ModelItem239(BaseModel):
    Correct_Hire_Employee_Request: Optional[CorrectHireEmployeeRequestType] = None


class ModelItem240(BaseModel):
    Get_Staffing_Field_Defaults_Condition_Rules_Response: Optional[
        GetStaffingFieldDefaultsConditionRulesResponseType
    ] = None


class ModelItem241(BaseModel):
    Put_Collective_Agreement_Response: Optional[
        PutCollectiveAgreementResponseType
    ] = None


class ModelItem242(BaseModel):
    Put_Job_Family_Group_Response: Optional[PutJobFamilyGroupResponseType] = None


class ModelItem243(BaseModel):
    Edit_Position_Request: Optional[EditPositionRequestType] = None


class ModelItem244(BaseModel):
    Put_Legal_Authority_Request: Optional[PutLegalAuthorityRequestType] = None


class ModelItem245(BaseModel):
    Change_Work_Space_Request: Optional[ChangeWorkSpaceRequestType] = None


class ModelItem246(BaseModel):
    Put_Maintain_Notice_Periods_for_Country_Request: Optional[
        PutMaintainNoticePeriodsForCountryRequestType
    ] = None


class ModelItem247(BaseModel):
    Get_Change_Personal_Information_Request: Optional[
        GetChangePersonalInformationRequestType
    ] = None


class ModelItem248(BaseModel):
    Freeze_Position_Response: Optional[FreezePositionResponseType] = None


class ModelItem249(BaseModel):
    Get_Citizenship_Statuses_Response: Optional[
        GetCitizenshipStatusesResponseType
    ] = None


class ModelItem250(BaseModel):
    Edit_Position_Restrictions_Request: Optional[
        EditPositionRestrictionsRequestType
    ] = None


class ModelItem251(BaseModel):
    Put_Global_Staffing_Eligibility_Rule_Response: Optional[
        PutGlobalStaffingEligibilityRuleResponseType
    ] = None


class ModelItem252(BaseModel):
    Get_Positions_Request: Optional[GetPositionsRequestType] = None


class ModelItem253(BaseModel):
    Get_Probation_Periods_For_Workers_Response: Optional[
        GetProbationPeriodsForWorkersResponseType
    ] = None


class ModelItem254(BaseModel):
    Add_Additional_Job_Request: Optional[AddAdditionalJobRequestType] = None


class ModelItem255(BaseModel):
    Put_Assign_Matrix_Organization_Request: Optional[
        PutAssignMatrixOrganizationRequestType
    ] = None


class ModelItem256(BaseModel):
    Move_Workers_By_Organization_Response: Optional[
        MoveWorkersByOrganizationResponseType
    ] = None


class ModelItem257(BaseModel):
    Put_Maintain_Job_Overlap_Routing_Exclusion_Rule_Response: Optional[
        PutMaintainJobOverlapRoutingExclusionRuleResponseType
    ] = None


class ModelItem258(BaseModel):
    Get_Job_Family_Groups_Response: Optional[GetJobFamilyGroupsResponseType] = None


class ModelItem259(BaseModel):
    Put_Remove_Matrix_Organization_Request: Optional[
        PutRemoveMatrixOrganizationRequestType
    ] = None


class Model(BaseModel):
    __root__: Union[
        ModelItem,
        ModelItem1,
        ModelItem2,
        ModelItem3,
        ModelItem4,
        ModelItem5,
        ModelItem6,
        ModelItem7,
        ModelItem8,
        ModelItem9,
        ModelItem10,
        ModelItem11,
        ModelItem12,
        ModelItem13,
        ModelItem14,
        ModelItem15,
        ModelItem16,
        ModelItem17,
        ModelItem18,
        ModelItem19,
        ModelItem20,
        ModelItem21,
        ModelItem22,
        ModelItem23,
        ModelItem24,
        ModelItem25,
        ModelItem26,
        ModelItem27,
        ModelItem28,
        ModelItem29,
        ModelItem30,
        ModelItem31,
        ModelItem32,
        ModelItem33,
        ModelItem34,
        ModelItem35,
        ModelItem36,
        ModelItem37,
        ModelItem38,
        ModelItem39,
        ModelItem40,
        ModelItem41,
        ModelItem42,
        ModelItem43,
        ModelItem44,
        ModelItem45,
        ModelItem46,
        ModelItem47,
        ModelItem48,
        ModelItem49,
        ModelItem50,
        ModelItem51,
        ModelItem52,
        ModelItem53,
        ModelItem54,
        ModelItem55,
        ModelItem56,
        ModelItem57,
        ModelItem58,
        ModelItem59,
        ModelItem60,
        ModelItem61,
        ModelItem62,
        ModelItem63,
        ModelItem64,
        ModelItem65,
        ModelItem66,
        ModelItem67,
        ModelItem68,
        ModelItem69,
        ModelItem70,
        ModelItem71,
        ModelItem72,
        ModelItem73,
        ModelItem74,
        ModelItem75,
        ModelItem76,
        ModelItem77,
        ModelItem78,
        ModelItem79,
        ModelItem80,
        ModelItem81,
        ModelItem82,
        ModelItem83,
        ModelItem84,
        ModelItem85,
        ModelItem86,
        ModelItem87,
        ModelItem88,
        ModelItem89,
        ModelItem90,
        ModelItem91,
        ModelItem92,
        ModelItem93,
        ModelItem94,
        ModelItem95,
        ModelItem96,
        ModelItem97,
        ModelItem98,
        ModelItem99,
        ModelItem100,
        ModelItem101,
        ModelItem102,
        ModelItem103,
        ModelItem104,
        ModelItem105,
        ModelItem106,
        ModelItem107,
        ModelItem108,
        ModelItem109,
        ModelItem110,
        ModelItem111,
        ModelItem112,
        ModelItem113,
        ModelItem114,
        ModelItem115,
        ModelItem116,
        ModelItem117,
        ModelItem118,
        ModelItem119,
        ModelItem120,
        ModelItem121,
        ModelItem122,
        ModelItem123,
        ModelItem124,
        ModelItem125,
        ModelItem126,
        ModelItem127,
        ModelItem128,
        ModelItem129,
        ModelItem130,
        ModelItem131,
        ModelItem132,
        ModelItem133,
        ModelItem134,
        ModelItem135,
        ModelItem136,
        ModelItem137,
        ModelItem138,
        ModelItem139,
        ModelItem140,
        ModelItem141,
        ModelItem142,
        ModelItem143,
        ModelItem144,
        ModelItem145,
        ModelItem146,
        ModelItem147,
        ModelItem148,
        ModelItem149,
        ModelItem150,
        ModelItem151,
        ModelItem152,
        ModelItem153,
        ModelItem154,
        ModelItem155,
        ModelItem156,
        ModelItem157,
        ModelItem158,
        ModelItem159,
        ModelItem160,
        ModelItem161,
        ModelItem162,
        ModelItem163,
        ModelItem164,
        ModelItem165,
        ModelItem166,
        ModelItem167,
        ModelItem168,
        ModelItem169,
        ModelItem170,
        ModelItem171,
        ModelItem172,
        ModelItem173,
        ModelItem174,
        ModelItem175,
        ModelItem176,
        ModelItem177,
        ModelItem178,
        ModelItem179,
        ModelItem180,
        ModelItem181,
        ModelItem182,
        ModelItem183,
        ModelItem184,
        ModelItem185,
        ModelItem186,
        ModelItem187,
        ModelItem188,
        ModelItem189,
        ModelItem190,
        ModelItem191,
        ModelItem192,
        ModelItem193,
        ModelItem194,
        ModelItem195,
        ModelItem196,
        ModelItem197,
        ModelItem198,
        ModelItem199,
        ModelItem200,
        ModelItem201,
        ModelItem202,
        ModelItem203,
        ModelItem204,
        ModelItem205,
        ModelItem206,
        ModelItem207,
        ModelItem208,
        ModelItem209,
        ModelItem210,
        ModelItem211,
        ModelItem212,
        ModelItem213,
        ModelItem214,
        ModelItem215,
        ModelItem216,
        ModelItem217,
        ModelItem218,
        ModelItem219,
        ModelItem220,
        ModelItem221,
        ModelItem222,
        ModelItem223,
        ModelItem224,
        ModelItem225,
        ModelItem226,
        ModelItem227,
        ModelItem228,
        ModelItem229,
        ModelItem230,
        ModelItem231,
        ModelItem232,
        ModelItem233,
        ModelItem234,
        ModelItem235,
        ModelItem236,
        ModelItem237,
        ModelItem238,
        ModelItem239,
        ModelItem240,
        ModelItem241,
        ModelItem242,
        ModelItem243,
        ModelItem244,
        ModelItem245,
        ModelItem246,
        ModelItem247,
        ModelItem248,
        ModelItem249,
        ModelItem250,
        ModelItem251,
        ModelItem252,
        ModelItem253,
        ModelItem254,
        ModelItem255,
        ModelItem256,
        ModelItem257,
        ModelItem258,
        ModelItem259,
    ]
